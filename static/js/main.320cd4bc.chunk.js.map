{"version":3,"sources":["agent.js","images/plate-background.png","images/plate-logo.png","images/doc-may-profile.jpg","components/FabAdd.js","components/ListErrors.js","constants/actionTypes.js","components/Categories/CategoryDialog.js","components/MaterialTableFix.js","components/Categories/CategoriesTable.js","components/PageHeader.js","components/Spinner.js","components/Categories/Categories.js","components/Logo.js","components/Header.js","components/Ingredients/IngredientDialog.js","components/Ingredients/IngredientsTable.js","components/Ingredients/Ingredients.js","components/ActionButton.js","components/Admin/UserDialog.js","components/Admin/DeleteUserAlert.js","components/Admin/UserList.js","components/Admin/ManageUsers.js","components/Meals/RecipeSelector.js","constants/mealTypes.js","components/Meals/MealsDialog.js","components/Meals/MealsTable.js","components/Meals/Meals.js","components/Navigation.js","components/PageWrapper.js","components/NotFound.js","components/Plans/Lists/ShoppingList.js","components/Plans/Lists/StoreSelector.js","components/Plans/Lists/ListDialog.js","components/Plans/PlanBuilder/MealDraggable.js","components/Plans/PlanBuilder/MealSelector.js","components/Plans/PlanBuilder/MealSelectorDialog.js","components/Plans/PlanBuilder/WeekdayDroppable.js","constants/days.js","components/Plans/PlanBuilder/PlanBuilder.js","components/Plans/PlanEditor.js","components/Plans/PlanViewer.js","components/Plans/PlansTable.js","components/RichEditor.js","components/Recipes/RecipeViewer.js","components/Plans/Plans.js","components/ProtectedRoute.js","components/Recipes/IngredientSelector.js","constants/units.js","components/Recipes/RecipeIngredientsEditor.js","components/Recipes/RecipeEditor.js","components/Recipes/RecipesTable.js","components/Recipes/Recipes.js","components/Stores/CategorySorter/CategoryDraggable.js","components/Stores/CategorySorter/CategoryDroppable.js","components/Stores/CategorySorter/CategorySorter.js","components/Stores/StoreDialog.js","components/Stores/StoresTable.js","components/Stores/Stores.js","components/Settings.js","components/Home.js","components/Loading.js","components/About.js","components/Login/LoginForm.js","components/Login/index.js","components/Notifier.js","components/Theme.js","reducers/auth.js","reducers/categories.js","reducers/common.js","reducers/ingredients.js","reducers/meals.js","reducers/nav.js","reducers/notifier.js","reducers/plans.js","reducers/recipes.js","reducers/settings.js","reducers/stores.js","reducers/users.js","middleware.js","store.js","reducer.js","components/App.js","index.js"],"names":["superagent","superagentPromise","_superagent","global","Promise","API_ROOT","responseBody","res","body","token","tokenPlugin","req","set","requests","url","del","use","then","get","post","put","Auth","current","login","username","password","user","register","save","Categories","add","category","delete","slug","deleteMany","slugs","categories","getAll","update","Ingredients","ingredient","ingredients","Meals","meal","meals","Plans","plan","Recipes","recipe","recipes","Settings","settings","Stores","store","Users","setToken","_token","module","exports","useStyles","makeStyles","theme","icon","marginRight","spacing","FabAdd","props","classes","Fab","color","onClick","variant","Add","className","prefix","item","alert","marginBottom","alertList","ListErrors","errors","Object","keys","map","key","readableKey","replace","toLowerCase","Alert","severity","ASYNC_START","LOGIN","addIcon","connect","state","dispatch","onAdd","type","payload","agent","snackbar","message","onExit","onUpdate","inProgress","useState","open","setOpen","useTheme","fullScreen","useMediaQuery","breakpoints","down","handleClose","handleSubmitAdd","values","handleSubmitUpdate","useEffect","Dialog","maxWidth","ev","stopPropagation","onClose","onFocus","TransitionProps","initialValues","name","notes","validationSchema","Yup","required","onSubmit","a","DialogTitle","DialogContent","Grid","container","xs","autoFocus","component","TextField","disabled","label","fullWidth","DialogActions","Button","MaterialTableFix","components","EditRow","onKeyDown","e","keyCode","onEditingCanceled","mode","data","onDelete","onDeleteMany","length","setData","title","field","columns","localization","emptyDataSourceMessage","editRow","deleteText","options","actionsColumnIndex","paging","selection","toolbar","actions","tooltip","row","handleDeleteManyClick","editable","onRowUpdate","newData","oldData","resolve","reject","dataUpdate","tableData","id","onRowDelete","index","splice","headerLeft","alignItems","display","headerRight","justifyContent","pageHeader","PageHeader","children","md","Typography","fontStyle","root","minWidth","spinner","Spinner","CircularProgress","button","textDecoration","onLoad","onUnload","pageLoaded","to","Logo","alt","src","logo","flexGrow","height","marginTop","navTabValue","nav","onClickLogout","currentUser","AppBar","position","Toolbar","align","charAt","toUpperCase","slice","paper","up","hideButton","isOpen","select","MenuItem","_id","value","lookup","reduce","obj","all","actionButton","palette","text","ActionButton","passedClasses","Tooltip","arrow","enterTouchDelay","action","IconButton","aria-label","size","users","handleClickOpen","role","Edit","firstName","lastName","Delete","DialogContentText","userDetails","userHeader","width","userUsername","userName","UserList","expanded","setExpanded","Accordion","onChange","panel","isExpanded","AccordionSummary","expandIcon","ExpandMore","Chip","AccordionDetails","RecipeSelector","setOptions","mappedOptions","filter","isMeal","firstLetter","test","Autocomplete","autoHighlight","autoSelect","getOptionLabel","option","getOptionSelected","groupBy","multiple","noOptionsText","renderInput","params","renderOption","inputValue","matches","match","parts","parse","part","style","fontWeight","highlight","MEAL_TYPES","editor","mealType","formik","setFieldValue","onLoadUpdate","recipesAsMeals","sort","b","localeCompare","selectionProps","rowData","isDeletable","bottom","zIndex","common","path","router","location","pathname","tabValue","redirectTo","onTabChange","userRole","handleTabChange","tabFromPath","split","node","loadCSS","document","querySelector","parentNode","removeChild","BottomNavigation","event","newValue","showLabels","BottomNavigationAction","SupervisorAccount","Icon","wrapper","PageWrapper","NotFound","checked","primary","light","opacity","marginLeft","listItem","ShoppingList","list","setChecked","handleChange","target","Array","isArray","FormGroup","FormControlLabel","control","Checkbox","unit","quantity","join","Info","StoreSelector","defaultStore","stores","setStore","FormControl","InputLabel","Select","labelId","viewer","plans","onCopy","setList","getList","planMeals","entries","dailyMeals","mealId","find","planRecipes","flatMap","hasOwnProperty","planIngredients","itemCategory","ingredientsByCategory","push","lists","selectedStore","s","forEach","ingredientTotals","arr","findItem","i","itemIndex","findIndex","concat","indexOf","flat","storeId","listString","navigator","clipboard","writeText","err","console","error","MealDraggable","onRemove","uniqueId","draggableId","provided","snapshot","Paper","elevation","ref","innerRef","draggableProps","dragHandleProps","isDragging","draggableStyle","background","secondary","padding","userSelect","Close","MealSelector","MealSelectorDialog","day","result","dayHeader","visibility","WeekdayDroppable","mealPlan","mappedMealPlan","droppableId","droppableProps","isDraggingOver","border","minHeight","placeholder","DAYS","PlanBuilder","setPlans","handleAddClick","newMealPlan","handleRemoveClick","currentTarget","getAttribute","removeIndex","onDragEnd","destination","source","start","finish","allMeals","getAllMeals","defaultMeals","scroll","order","skip","disableGutters","dayList","listStyle","paddingLeft","mealHeader","mealLink","borderColor","recipeList","onLoadView","days","mealLookup","handleLoadViewClick","href","starredPlan","onSetStarred","onUpdateArchiveStatus","status","onViewShoppingList","sortedPlans","filteredPlans","archived","Container","StarBorder","handleSetStarredClick","handleArchiveClick","fontSize","letterSpacing","lineHeight","margin","textAlign","RichEditor","controls","defaultValue","initialValue","touched","onBlur","readOnly","onEditorBlur","onEditorChange","JSON","stringify","convertToRaw","getCurrentContent","backgroundColor","ingredientsList","ingredientName","typography","subtitle1","ingredientDetails","RecipeViewer","servings","Fragment","prepTime","wwPoints","getRecipeSubheader","directions","planViewer","recipeViewer","onUnloadPlanView","onUnloadRecipeView","accordionOpen","setAccordionOpen","showPlanView","showRecipeView","gutterBottom","aria-controls","exact","createFilterOptions","newIngredient","setNewIngredient","selected","setSelected","freeSolo","filterOptions","filtered","handleKey","MakeUnit","abbr","conv","UNITS","RecipeIngredientEditor","setColumns","editComponent","search","onRowAdd","HandleIsMealChange","useFormikContext","CheckboxWithLabel","Label","RecipeIngredientsEditor","setFieldTouched","onUnloadView","CategoryDraggable","isNew","CategoryDroppable","CategorySorter","newList","isUpdate","allCategories","cat","getCategories","onSetDefault","handleLoadUpdateClick","AddBox","isFreeAction","boxShadow","onSubmitForm","enableReinitialize","form","userSettings","resetForm","SaveAlt","ManageUsers","backgroundImage","backgroundSize","borderRadius","flexFlow","overflowY","main","Loading","page","profile","shadows","float","About","Link","auth","submitForm","aboutLink","right","loginLink","maxHeight","progress","left","top","AboutLink","InfoOutlined","LoginLink","startIcon","ArrowBackIos","LinearProgress","includes","Notification","enqueueSnackbar","useSnackbar","notifier","onSnackbarClose","maxSnack","Theme","createTheme","lg","blueGrey","indigo","overrides","MuiDialogActions","MUIRichTextEditor","placeHolder","borderBottom","paddingBottom","subtype","defaultState","sortByName","viewChangeCounter","appLoaded","sortByTitle","sortByLastName","promiseMiddleware","next","v","currentView","getState","skipTracking","currentState","promise","response","localStorageMiddleware","window","localStorage","setItem","history","createBrowserHistory","myRouterMiddleware","routerMiddleware","createStore","combineReducers","connectRouter","composeWithDevTools","applyMiddleware","onRedirect","getItem","ThemeProvider","CssBaseline","fallback","Login","Home","ReactDOM","render","App","getElementById"],"mappings":"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","file":"static/js/main.320cd4bc.chunk.js","sourcesContent":["import superagentPromise from 'superagent-promise'\nimport _superagent from 'superagent'\n\nconst superagent = superagentPromise(_superagent, global.Promise)\n\nconst API_ROOT =\n  process.env.NODE_ENV === 'production'\n    ? 'https://my-plate-app.herokuapp.com/api'\n    : 'http://localhost:4000/api'\n\nconst responseBody = (res) => res.body\n\nlet token = null\nlet tokenPlugin = (req) => {\n  if (token) {\n    req.set('authorization', `Token ${token}`)\n  }\n}\n\nconst requests = {\n  // @todo update superagent-promise from v1.1.0 when available\n  // superagent-promise does not allow for body to pass, so it has been manually added to the package file\n  // This is a known issue, see: https://github.com/lightsofapollo/superagent-promise/issues/28\n  del: (url, body) =>\n    superagent\n      .del(`${API_ROOT}${url}`, body)\n      .use(tokenPlugin)\n      .then(responseBody),\n  get: (url) =>\n    superagent.get(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody),\n  post: (url, body) =>\n    superagent\n      .post(`${API_ROOT}${url}`, body)\n      .use(tokenPlugin)\n      .then(responseBody),\n  put: (url, body) =>\n    superagent\n      .put(`${API_ROOT}${url}`, body)\n      .use(tokenPlugin)\n      .then(responseBody),\n}\n\nconst Auth = {\n  current: () => requests.get('/user'),\n  login: (username, password) =>\n    requests.post('/users/login', { user: { username, password } }),\n  register: (user) => requests.post('/users', { user }),\n  save: (user) => requests.put('/user', { user }),\n}\n\nconst Categories = {\n  add: (category) => requests.post('/categories', { category }),\n  delete: (category) => requests.del(`/categories/${category.slug}`),\n  deleteMany: (slugs) =>\n    requests.del('/categories/bulk', { categories: slugs }),\n  getAll: () => requests.get('/categories'),\n  update: (category) =>\n    requests.put(`/categories/${category.slug}`, { category }),\n}\n\nconst Ingredients = {\n  add: (ingredient) => requests.post('/ingredients', { ingredient }),\n  delete: (ingredient) => requests.del(`/ingredients/${ingredient.slug}`),\n  deleteMany: (slugs) =>\n    requests.del('/ingredients/bulk', { ingredients: slugs }),\n  getAll: () => requests.get('/ingredients'),\n  update: (ingredient) =>\n    requests.put(`/ingredients/${ingredient.slug}`, { ingredient }),\n}\n\nconst Meals = {\n  add: (meal) => requests.post('/meals', { meal }),\n  delete: (meal) => requests.del(`/meals/${meal.slug}`),\n  deleteMany: (slugs) => requests.del('/meals/bulk', { meals: slugs }),\n  getAll: () => requests.get('/meals'),\n  update: (meal) => requests.put(`/meals/${meal.slug}`, { meal }),\n}\n\nconst Plans = {\n  add: (plan) => requests.post('/plans', { plan }),\n  delete: (plan) => requests.del(`/plans/${plan.slug}`),\n  getAll: () => requests.get('/plans'),\n  update: (plan) => requests.put(`/plans/${plan.slug}`, { plan }),\n}\n\nconst Recipes = {\n  add: (recipe) => requests.post('/recipes', { recipe }),\n  delete: (recipe) => requests.del(`/recipes/${recipe.slug}`),\n  deleteMany: (slugs) => requests.del('/recipes/bulk', { recipes: slugs }),\n  getAll: () => requests.get('/recipes'),\n  update: (recipe) => requests.put(`/recipes/${recipe.slug}`, { recipe }),\n}\n\nconst Settings = {\n  update: (settings) => requests.put('/user/settings', { settings }),\n}\n\nconst Stores = {\n  add: (store) => requests.post('/stores', { store }),\n  delete: (store) => requests.del(`/stores/${store.slug}`),\n  getAll: () => requests.get('/stores'),\n  update: (store) => requests.put(`/stores/${store.slug}`, { store }),\n}\n\nconst Users = {\n  getAll: () => requests.get('/users?role=subscriber'),\n  delete: (user) => requests.del(`/users/subscriber/${user.username}`),\n  update: (user) => requests.put(`/users/${user.username}`, { user }),\n}\n\nexport default {\n  Auth,\n  Categories,\n  Ingredients,\n  Meals,\n  Plans,\n  Recipes,\n  Settings,\n  Stores,\n  Users,\n  setToken: (_token) => {\n    token = _token\n  },\n}\n","module.exports = __webpack_public_path__ + \"static/media/plate-background.c6d96dd4.png\";","module.exports = __webpack_public_path__ + \"static/media/plate-logo.1dcb2d72.png\";","module.exports = __webpack_public_path__ + \"static/media/doc-may-profile.f927335d.jpg\";","import React from 'react'\nimport { Fab, makeStyles } from '@material-ui/core'\nimport { Add } from '@material-ui/icons'\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n}))\n\nconst FabAdd = (props) => {\n  const classes = useStyles()\n\n  return (\n    <Fab color='primary' onClick={props.onClick} variant='extended' {...props}>\n      <Add className={classes.icon} />\n      {props.prefix ?? 'Add'} {props.item}\n    </Fab>\n  )\n}\n\nexport default FabAdd\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Alert from '@material-ui/lab/Alert'\n\nconst useStyles = makeStyles((theme) => ({\n  alert: {\n    'width': '100%',\n    '&:not(:last-of-type)': {\n      marginBottom: theme.spacing(1),\n    },\n  },\n  alertList: {\n    marginBottom: theme.spacing(2),\n  },\n}))\n\nconst ListErrors = ({ errors }) => {\n  const classes = useStyles()\n\n  if (errors) {\n    return (\n      <div className={classes.alertList}>\n        {Object.keys(errors).map((key) => {\n          const readableKey = key\n            .replace(/([a-z0-9])([A-Z])/g, '$1 $2')\n            .toLowerCase()\n          return (\n            <Alert className={classes.alert} severity='error' key={key}>\n              {readableKey} {errors[key]}\n            </Alert>\n          )\n        })}\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport default ListErrors\n","export const APP_LOAD = 'APP_LOAD'\nexport const REDIRECT = 'REDIRECT'\n\nexport const ASYNC_START = 'ASYNC_START'\nexport const ASYNC_END = 'ASYNC_END'\n\nexport const LOGIN = 'LOGIN'\nexport const LOGIN_PAGE_UNLOADED = 'LOGIN_PAGE_UNLOADED'\nexport const LOGOUT = 'LOGOUT'\n\nexport const REGISTER = 'REGISTER'\nexport const REGISTER_PAGE_UNLOADED = 'REGISTER_PAGE_UNLOADED'\n\nexport const SETTINGS_PAGE_UNLOADED = 'SETTINGS_PAGE_UNLOADED'\nexport const SETTINGS_SAVED = 'SETTINGS_SAVED'\n\nexport const NAV_LOADED = 'NAV_LOADED'\nexport const NAV_UNLOADED = 'NAV_UNLOADED'\nexport const NAV_TAB_CHANGE = 'NAV_TAB_CHANGE'\n\nexport const ALERT_CLOSED = 'ALERT_CLOSED'\nexport const SNACKBAR_CLOSED = 'SNACKBAR_CLOSED'\n\nexport const ADD_USER = 'ADD_USER'\nexport const DELETE_USER = 'DELETE_USER'\nexport const MANAGE_USERS_PAGE_LOADED = 'MANAGE_USERS_PAGE_LOADED'\nexport const MANAGE_USERS_PAGE_UNLOADED = 'MANAGE_USERS_PAGE_UNLOADED'\nexport const USER_DIALOG_UNLOADED = 'USER_DIALOG_UNLOADED'\nexport const UPDATE_USER = 'UPDATE_USER'\n\nexport const ADD_CATEGORY = 'ADD_CATEGORY'\nexport const DELETE_CATEGORY = 'DELETE_CATEGORY'\nexport const DELETE_CATEGORIES = 'DELETE_CATEGORIES'\nexport const CATEGORY_DIALOG_UNLOADED = 'CATEGORY_DIALOG_UNLOADED'\nexport const CATEGORIES_PAGE_LOADED = 'CATEGORIES_PAGE_LOADED'\nexport const CATEGORIES_PAGE_UNLOADED = 'CATEGORIES_PAGE_UNLOADED'\nexport const UPDATE_CATEGORY = 'UPDATE_CATEGORY'\n\nexport const ADD_INGREDIENT = 'ADD_INGREDIENT'\nexport const DELETE_INGREDIENT = 'DELETE_INGREDIENT'\nexport const DELETE_INGREDIENTS = 'DELETE_INGREDIENTS'\nexport const INGREDIENT_DIALOG_UNLOADED = 'INGREDIENT_DIALOG_UNLOADED'\nexport const INGREDIENTS_PAGE_LOADED = 'INGREDIENTS_PAGE_LOADED'\nexport const INGREDIENTS_PAGE_UNLOADED = 'INGREDIENTS_PAGE_UNLOADED'\nexport const UPDATE_INGREDIENT = 'UPDATE_INGREDIENT'\n\nexport const ADD_RECIPE = 'ADD_RECIPE'\nexport const DELETE_RECIPE = 'DELETE_RECIPE'\nexport const DELETE_RECIPES = 'DELETE_RECIPES'\nexport const RECIPE_DIALOG_LOADED = 'RECIPE_DIALOG_LOADED'\nexport const RECIPE_DIALOG_UNLOADED = 'RECIPE_DIALOG_UNLOADED'\nexport const RECIPE_INGREDIENT_ONBLUR = 'RECIPE_INGREDIENT_ONBLUR'\nexport const RECIPE_VIEW_LOADED = 'RECIPE_VIEW_LOADED'\nexport const RECIPE_VIEW_UNLOADED = 'RECIPE_VIEW_UNLOADED'\nexport const RECIPES_PAGE_LOADED = 'RECIPES_PAGE_LOADED'\nexport const RECIPES_PAGE_UNLOADED = 'RECIPES_PAGE_UNLOADED'\nexport const UPDATE_RECIPE = 'UPDATE_RECIPE'\n\nexport const ADD_MEAL = 'ADD_MEAL'\nexport const DELETE_MEAL = 'DELETE_MEAL'\nexport const DELETE_MEALS = 'DELETE_MEALS'\nexport const MEAL_DIALOG_LOADED = 'MEAL_DIALOG_LOADED'\nexport const MEAL_DIALOG_UNLOADED = 'MEAL_DIALOG_UNLOADED'\nexport const MEALS_PAGE_LOADED = 'MEALS_PAGE_LOADED'\nexport const MEALS_PAGE_UNLOADED = 'MEALS_PAGE_UNLOADED'\nexport const UPDATE_MEAL = 'UPDATE_MEAL'\n\nexport const ADD_PLAN = 'ADD_PLAN'\nexport const DELETE_PLAN = 'DELETE_PLAN'\nexport const PLAN_DIALOG_LOADED = 'PLAN_DIALOG_LOADED'\nexport const PLAN_DIALOG_UNLOADED = 'PLAN_DIALOG_UNLOADED'\nexport const PLAN_LIST_COPIED = 'PLAN_LIST_COPIED'\nexport const PLAN_LIST_DIALOG_LOADED = 'PLAN_LIST_DIALOG_LOADED'\nexport const PLAN_LIST_DIALOG_UNLOADED = 'PLAN_LIST_DIALOG_UNLOADED'\nexport const PLAN_VIEW_LOADED = 'PLAN_VIEW_LOADED'\nexport const PLAN_VIEW_UNLOADED = 'PLAN_VIEW_UNLOADED'\nexport const PLANS_PAGE_LOADED = 'PLANS_PAGE_LOADED'\nexport const PLANS_PAGE_UNLOADED = 'PLANS_PAGE_UNLOADED'\nexport const SET_STARRED_PLAN = 'SET_STARRED_PLAN'\nexport const UPDATE_PLAN = 'UPDATE_PLAN'\nexport const UPDATE_PLAN_ARCHIVE_STATUS = 'UPDATE_PLAN_ARCHIVE_STATUS'\n\nexport const ADD_STORE = 'ADD_STORE'\nexport const DELETE_STORE = 'DELETE_STORE'\nexport const SET_DEFAULT_STORE = 'SET_DEFAULT_STORE'\nexport const STORE_DIALOG_LOADED = 'STORE_DIALOG_LOADED'\nexport const STORE_DIALOG_UNLOADED = 'STORE_DIALOG_UNLOADED'\nexport const STORES_PAGE_LOADED = 'STORES_PAGE_LOADED'\nexport const STORES_PAGE_UNLOADED = 'STORES_PAGE_UNLOADED'\nexport const UPDATE_STORE = 'UPDATE_STORE'\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\n\nimport FabAdd from '../FabAdd'\nimport ListErrors from '../ListErrors'\nimport agent from '../../agent'\n\nimport {\n  ADD_CATEGORY,\n  CATEGORY_DIALOG_UNLOADED,\n  UPDATE_CATEGORY,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  addIcon: {\n    marginRight: theme.spacing(1),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.categories,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAdd: (category) =>\n    dispatch({\n      type: ADD_CATEGORY,\n      payload: agent.Categories.add(category),\n      snackbar: { message: 'Category added', variant: 'success' },\n    }),\n  onExit: () => dispatch({ type: CATEGORY_DIALOG_UNLOADED }),\n  onUpdate: (category) =>\n    dispatch({\n      type: UPDATE_CATEGORY,\n      payload: agent.Categories.update(category),\n      snackbar: { message: 'Category updated', variant: 'success' },\n    }),\n})\n\nconst CategoryDialog = ({\n  errors,\n  category,\n  inProgress,\n  onAdd,\n  onExit,\n  onUpdate,\n}) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmitAdd = (values) => {\n    onAdd({ ...values })\n  }\n\n  const handleSubmitUpdate = (values) => {\n    onUpdate({ ...category, ...values })\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) setOpen(false)\n  }, [inProgress])\n\n  return (\n    <>\n      <FabAdd item='category' onClick={handleClickOpen} />\n\n      <Dialog\n        fullScreen={fullScreen}\n        maxWidth='lg'\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onFocus={(ev) => ev.stopPropagation()}\n        open={open}\n        TransitionProps={{ onExit: onExit }}\n      >\n        <Formik\n          initialValues={{\n            name: category?.name || '',\n            notes: category?.notes || '',\n          }}\n          validationSchema={Yup.object({\n            name: Yup.string().required('Required'),\n            notes: Yup.string(),\n          })}\n          onSubmit={async (values) => {\n            category ? handleSubmitUpdate(values) : handleSubmitAdd(values)\n          }}\n        >\n          <Form>\n            <DialogTitle>\n              {category ? 'Edit category' : 'Add category'}\n            </DialogTitle>\n            <DialogContent>\n              <ListErrors errors={errors} />\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <Field\n                    autoFocus\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Category Name'\n                    name='name'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Category Notes'\n                    name='notes'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button\n                disabled={inProgress}\n                color='primary'\n                type='submit'\n                variant='contained'\n              >\n                {category\n                  ? inProgress\n                    ? 'Updating...'\n                    : 'Update'\n                  : inProgress\n                  ? 'Adding...'\n                  : 'Add'}\n              </Button>\n              <Button\n                disabled={inProgress}\n                onClick={handleClose}\n                variant='contained'\n              >\n                Cancel\n              </Button>\n            </DialogActions>\n          </Form>\n        </Formik>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryDialog)\n","import React from 'react'\nimport MaterialTable, { MTableEditRow } from '@material-table/core'\n\n/**\n * This is a fix for an issue with material-table that causes the enter keypress to\n * trigger a row action rather than act to control the input elements (i.e., instead\n * of selecting an option from a select element, pressing enter causes the form to\n * submit without the option being selected.)\n *\n * Source: https://github.com/mbrn/material-table/pull/2008#issuecomment-662529834\n */\nconst MaterialTableFix = (props) => {\n  return (\n    <MaterialTable\n      components={{\n        EditRow: (props) => (\n          <MTableEditRow\n            {...props}\n            onKeyDown={(e) => {\n              if (e.keyCode === 27)\n                props.onEditingCanceled(props.mode, props.data)\n            }}\n          />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\n\nexport default MaterialTableFix\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\n// @todo remove fix\n// import MaterialTable from '@material-table/core'\nimport MaterialTableFix from '../MaterialTableFix'\n\nimport agent from '../../agent'\n\nimport {\n  DELETE_CATEGORY,\n  DELETE_CATEGORIES,\n  UPDATE_CATEGORY,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  ...state.categories,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (category) =>\n    dispatch({\n      type: DELETE_CATEGORY,\n      payload: agent.Categories.delete(category),\n      snackbar: { message: 'Category deleted', variant: 'success' },\n    }),\n  onDeleteMany: (slugs) =>\n    dispatch({\n      type: DELETE_CATEGORIES,\n      payload: agent.Categories.deleteMany(slugs),\n      snackbar: {\n        message: `${slugs.length} categor${\n          slugs.length > 1 ? 'ies' : 'y'\n        } deleted`,\n        variant: 'success',\n      },\n    }),\n  onUpdate: (category) =>\n    dispatch({\n      type: UPDATE_CATEGORY,\n      payload: agent.Categories.update(category),\n      snackbar: { message: 'Category updated', variant: 'success' },\n    }),\n})\n\nconst CategoriesTable = ({ categories, onDelete, onDeleteMany, onUpdate }) => {\n  const [data, setData] = useState([])\n\n  const [columns] = useState([\n    { title: 'Name', field: 'name' },\n    { title: 'Notes', field: 'notes' },\n  ])\n\n  const handleDeleteManyClick = (data) => {\n    const slugs = data.map((row) => row.slug)\n    onDeleteMany(slugs)\n  }\n\n  useEffect(() => {\n    setData(categories)\n  }, [categories])\n\n  return (\n    <MaterialTableFix\n      title='Categories'\n      columns={columns}\n      data={data}\n      localization={{\n        body: {\n          emptyDataSourceMessage: 'No categories found',\n          editRow: {\n            deleteText: 'Delete category? This action cannot be undone.',\n          },\n        },\n      }}\n      options={{\n        actionsColumnIndex: -1,\n        paging: false,\n        selection: true,\n        toolbar: true,\n      }}\n      actions={[\n        {\n          tooltip: 'Delete all selected categories',\n          icon: 'delete',\n          onClick: (e, data) => handleDeleteManyClick(data),\n        },\n      ]}\n      editable={{\n        onRowUpdate: (newData, oldData) =>\n          new Promise((resolve, reject) => {\n            const dataUpdate = [...data]\n            const index = oldData.tableData.id\n            dataUpdate[index] = newData\n            setData([...dataUpdate])\n            onUpdate(newData)\n            resolve()\n          }),\n        onRowDelete: (oldData) =>\n          new Promise((resolve, reject) => {\n            const newData = [...data]\n            const index = oldData.tableData.id\n            newData.splice(index, 1)\n            setData([...newData])\n            onDelete(oldData)\n            resolve()\n          }),\n      }}\n    />\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoriesTable)\n","import React from 'react'\nimport { Grid, Typography, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  headerLeft: {\n    alignItems: 'center',\n    display: 'flex',\n  },\n  headerRight: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  pageHeader: {\n    marginBottom: theme.spacing(4),\n  },\n}))\n\nconst PageHeader = ({ children, title }) => {\n  const classes = useStyles()\n\n  return (\n    <Grid container spacing={2} className={classes.pageHeader}>\n      <Grid item xs={12} md={6} className={classes.headerLeft}>\n        <Typography variant='h4'>{title}</Typography>\n      </Grid>\n      <Grid item xs={12} md={6} className={classes.headerRight}>\n        {children}\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default PageHeader\n","import React from 'react'\nimport { CircularProgress, Typography, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  message: {\n    fontStyle: 'italic',\n  },\n  root: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'center',\n    minWidth: theme.spacing(40),\n  },\n  spinner: {\n    marginRight: theme.spacing(2),\n  },\n}))\n\nconst Spinner = ({ message }) => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress className={classes.spinner} />\n      <Typography className={classes.message}>\n        {message || 'Loading...'}\n      </Typography>\n    </div>\n  )\n}\n\nexport default Spinner\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Button, makeStyles } from '@material-ui/core'\n\nimport CategoryDialog from './CategoryDialog'\nimport CategoriesTable from './CategoriesTable'\nimport PageHeader from '../PageHeader'\nimport Spinner from '../Spinner'\nimport agent from '../../agent'\n\nimport {\n  CATEGORIES_PAGE_LOADED,\n  CATEGORIES_PAGE_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    'marginRight': theme.spacing(2),\n    '& a': {\n      color: 'inherit',\n      textDecoration: 'none',\n    },\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.categories,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: () =>\n    dispatch({\n      type: CATEGORIES_PAGE_LOADED,\n      payload: agent.Categories.getAll(),\n    }),\n  onUnload: () => dispatch({ type: CATEGORIES_PAGE_UNLOADED }),\n})\n\nconst Categories = ({ onLoad, onUnload, pageLoaded }) => {\n  const classes = useStyles()\n\n  useEffect(() => {\n    onLoad()\n\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  return (\n    <>\n      <PageHeader title='Manage Categories'>\n        <Button className={classes.button} color='secondary'>\n          <Link to='/ingredients'>Manage ingredients</Link>\n        </Button>\n        <CategoryDialog />\n      </PageHeader>\n      {pageLoaded ? <CategoriesTable /> : <Spinner />}\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories)\n","import React from 'react'\nimport logo from '../images/plate-logo.png'\n\nconst Logo = (props) => {\n  return <img alt='Chem Cash Logo' src={logo} {...props} />\n}\n\nexport default Logo\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport {\n  AppBar,\n  Button,\n  Container,\n  Toolbar,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\n\nimport Logo from '../components/Logo'\n\nimport { LOGOUT } from '../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    color: 'white',\n    flexGrow: 1,\n  },\n  logo: {\n    height: 65,\n    marginTop: theme.spacing(2),\n    marginRight: theme.spacing(3),\n    marginBottom: theme.spacing(2),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  navTabValue: state.nav.navTabValue,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onClickLogout: () => dispatch({ type: LOGOUT }),\n})\n\nconst Header = (props) => {\n  const classes = useStyles()\n  const title = props.navTabValue\n\n  if (props.currentUser) {\n    return (\n      <AppBar position='static'>\n        <Container>\n          <Toolbar>\n            <Logo className={classes.logo} />\n            <Typography variant='h5' align='center' className={classes.title}>\n              {title && title.charAt(0).toUpperCase() + title.slice(1)}\n            </Typography>\n            <Button color='inherit' onClick={props.onClickLogout}>\n              Logout\n            </Button>\n          </Toolbar>\n        </Container>\n      </AppBar>\n    )\n  } else {\n    return null\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  MenuItem,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\n\nimport FabAdd from '../FabAdd'\nimport ListErrors from '../ListErrors'\nimport agent from '../../agent'\n\nimport {\n  ADD_INGREDIENT,\n  INGREDIENT_DIALOG_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    [theme.breakpoints.up('lg')]: {\n      maxWidth: '420px',\n    },\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.ingredients,\n  categories: state.categories.categories,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAdd: (ingredient) =>\n    dispatch({\n      type: ADD_INGREDIENT,\n      payload: agent.Ingredients.add(ingredient),\n      snackbar: { message: 'Ingredient added', variant: 'success' },\n    }),\n  onExit: () => dispatch({ type: INGREDIENT_DIALOG_UNLOADED }),\n})\n\nconst IngredientDialog = ({\n  categories,\n  errors,\n  hideButton,\n  ingredient,\n  inProgress,\n  isOpen,\n  onAdd,\n  onClose,\n  onExit,\n}) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleExit = () => {\n    onExit()\n    onClose && onClose()\n  }\n\n  const handleSubmitAdd = (values) => {\n    onAdd({ ...values })\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) setOpen(false)\n  }, [inProgress])\n\n  useEffect(() => {\n    // Allow for higher-order component control over the visibility of the dialog\n    setOpen(!!isOpen)\n  }, [isOpen])\n\n  return (\n    <>\n      {!hideButton && <FabAdd item='ingredient' onClick={handleClickOpen} />}\n\n      <Dialog\n        classes={{ paper: classes.paper }}\n        fullScreen={fullScreen}\n        fullWidth\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onFocus={(ev) => ev.stopPropagation()}\n        open={open}\n        TransitionProps={{ onExit: handleExit }}\n      >\n        <Formik\n          initialValues={{\n            category: ingredient?.category || '',\n            name: ingredient?.name || '',\n            notes: ingredient?.notes || '',\n          }}\n          validationSchema={Yup.object({\n            category: Yup.string().required('Required'),\n            name: Yup.string().required('Required'),\n            notes: Yup.string(),\n          })}\n          onSubmit={async (values) => {\n            handleSubmitAdd(values)\n          }}\n        >\n          <Form>\n            <DialogTitle>Add ingredient</DialogTitle>\n            <DialogContent>\n              <ListErrors errors={errors} />\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <Field\n                    autoFocus\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    id='name'\n                    label='Ingredient Name'\n                    name='name'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    id='category'\n                    label='Ingredient Category'\n                    name='category'\n                    type='select'\n                    select\n                    fullWidth\n                  >\n                    {categories.map((category) => (\n                      <MenuItem key={category._id} value={category._id}>\n                        {category.name}\n                      </MenuItem>\n                    ))}\n                  </Field>\n                </Grid>\n                <Grid item xs={12}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    id='notes'\n                    label='Ingredient Notes'\n                    name='notes'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button\n                disabled={inProgress}\n                color='primary'\n                type='submit'\n                variant='contained'\n              >\n                {inProgress ? 'Adding...' : 'Add'}\n              </Button>\n              <Button\n                disabled={inProgress}\n                onClick={handleClose}\n                variant='contained'\n              >\n                Cancel\n              </Button>\n            </DialogActions>\n          </Form>\n        </Formik>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IngredientDialog)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\n// @todo remove fix\n// import MaterialTable from '@material-table/core'\nimport MaterialTableFix from '../MaterialTableFix'\n\nimport agent from '../../agent'\n\nimport {\n  DELETE_INGREDIENT,\n  DELETE_INGREDIENTS,\n  UPDATE_INGREDIENT,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  categories: state.categories.categories,\n  ingredients: state.ingredients.ingredients,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (ingredient) =>\n    dispatch({\n      type: DELETE_INGREDIENT,\n      payload: agent.Ingredients.delete(ingredient),\n      snackbar: { message: 'Ingredient deleted', variant: 'success' },\n    }),\n  onDeleteMany: (slugs) =>\n    dispatch({\n      type: DELETE_INGREDIENTS,\n      payload: agent.Ingredients.deleteMany(slugs),\n      snackbar: {\n        message: `${slugs.length} ingredient${\n          slugs.length > 1 ? 's' : ''\n        } deleted`,\n        variant: 'success',\n      },\n    }),\n  onUpdate: (ingredient) =>\n    dispatch({\n      type: UPDATE_INGREDIENT,\n      payload: agent.Ingredients.update(ingredient),\n      snackbar: { message: 'Ingredient updated', variant: 'success' },\n    }),\n})\n\nconst IngredientsTable = ({\n  categories,\n  ingredients,\n  onDelete,\n  onDeleteMany,\n  onUpdate,\n}) => {\n  const [data, setData] = useState([])\n\n  const [columns] = useState([\n    { title: 'Name', field: 'name' },\n    {\n      title: 'Category',\n      field: 'category',\n      lookup: categories.reduce(\n        (obj, item) => ((obj[item._id] = item.name), obj),\n        {}\n      ),\n    },\n    { title: 'Notes', field: 'notes' },\n  ])\n\n  const handleDeleteManyClick = (data) => {\n    const slugs = data.map((row) => row.slug)\n    onDeleteMany(slugs)\n  }\n\n  useEffect(() => {\n    setData(ingredients)\n  }, [ingredients])\n\n  return (\n    <MaterialTableFix\n      title='Ingredients'\n      columns={columns}\n      data={data}\n      localization={{\n        body: {\n          emptyDataSourceMessage: 'No ingredients found',\n          editRow: {\n            deleteText: 'Delete ingredient? This action cannot be undone.',\n          },\n        },\n      }}\n      options={{\n        actionsColumnIndex: -1,\n        paging: false,\n        selection: true,\n        toolbar: true,\n      }}\n      actions={[\n        {\n          tooltip: 'Delete all selected ingredients',\n          icon: 'delete',\n          onClick: (e, data) => handleDeleteManyClick(data),\n        },\n      ]}\n      editable={{\n        onRowUpdate: (newData, oldData) =>\n          new Promise((resolve, reject) => {\n            const dataUpdate = [...data]\n            const index = oldData.tableData.id\n            dataUpdate[index] = newData\n            setData([...dataUpdate])\n            onUpdate(newData)\n            resolve()\n          }),\n        onRowDelete: (oldData) =>\n          new Promise((resolve, reject) => {\n            const newData = [...data]\n            const index = oldData.tableData.id\n            newData.splice(index, 1)\n            setData([...newData])\n            onDelete(oldData)\n            resolve()\n          }),\n      }}\n    />\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IngredientsTable)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Button, makeStyles } from '@material-ui/core'\n\nimport IngredientDialog from './IngredientDialog'\nimport IngredientsTable from './IngredientsTable'\nimport PageHeader from '../PageHeader'\nimport Spinner from '../Spinner'\nimport agent from '../../agent'\n\nimport {\n  INGREDIENTS_PAGE_LOADED,\n  INGREDIENTS_PAGE_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    'marginRight': theme.spacing(2),\n    '& a': {\n      color: 'inherit',\n      textDecoration: 'none',\n    },\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.ingredients,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: () =>\n    dispatch({\n      type: INGREDIENTS_PAGE_LOADED,\n      payload: Promise.all([\n        agent.Ingredients.getAll(),\n        agent.Categories.getAll(),\n      ]),\n    }),\n  onUnload: () => dispatch({ type: INGREDIENTS_PAGE_UNLOADED }),\n})\n\nconst Ingredients = ({ onLoad, onUnload, pageLoaded }) => {\n  const classes = useStyles()\n\n  useEffect(() => {\n    onLoad()\n\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  return (\n    <>\n      <PageHeader title='Manage Ingredients'>\n        <Button className={classes.button} color='secondary'>\n          <Link to='/ingredients/categories'>Manage categories</Link>\n        </Button>\n        <IngredientDialog />\n      </PageHeader>\n      {pageLoaded ? <IngredientsTable /> : <Spinner />}\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Ingredients)\n","import React from 'react'\nimport { IconButton, Tooltip, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  actionButton: {\n    color: theme.palette.text.disabled,\n  },\n}))\n\nconst ActionButton = (props) => {\n  const classes = useStyles()\n\n  const passedClasses = props.className || ''\n\n  const handleClick = (ev) => {\n    ev.stopPropagation()\n    props.onClick()\n  }\n\n  return (\n    <Tooltip arrow enterTouchDelay={0} title={props.action}>\n      <IconButton\n        aria-label={props.action}\n        className={`${classes.actionButton} ${passedClasses}`}\n        onClick={handleClick}\n        onFocus={(ev) => ev.stopPropagation()}\n        size={props.size}\n      >\n        {props.children}\n      </IconButton>\n    </Tooltip>\n  )\n}\n\nexport default ActionButton\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Fab,\n  Grid,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Add, Edit } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport ListErrors from '../ListErrors'\nimport agent from '../../agent'\n\nimport {\n  ADD_USER,\n  USER_DIALOG_UNLOADED,\n  UPDATE_USER,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.users,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAdd: (user) =>\n    dispatch({\n      type: ADD_USER,\n      payload: agent.Auth.register(user),\n      snackbar: { message: 'User added', variant: 'success' },\n    }),\n  onExit: () => dispatch({ type: USER_DIALOG_UNLOADED }),\n  onUpdate: (user) =>\n    dispatch({\n      type: UPDATE_USER,\n      payload: agent.Users.update(user),\n      snackbar: { message: 'User updated', variant: 'success' },\n    }),\n})\n\nconst UserDialog = ({ errors, inProgress, onAdd, onExit, onUpdate, user }) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmitAdd = (values) => {\n    onAdd({ ...values, role: 'subscriber' })\n  }\n\n  const handleSubmitUpdate = (values) => {\n    onUpdate({ ...user, ...values })\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) setOpen(false)\n  }, [inProgress])\n\n  return (\n    <>\n      {user ? (\n        <ActionButton action='Edit user' onClick={handleClickOpen}>\n          <Edit />\n        </ActionButton>\n      ) : (\n        <Fab color='primary' onClick={handleClickOpen} variant='extended'>\n          <Add className={classes.icon} />\n          Add user\n        </Fab>\n      )}\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        onClick={(ev) => ev.stopPropagation()}\n        onFocus={(ev) => ev.stopPropagation()}\n        TransitionProps={{ onExit: onExit }}\n      >\n        <Formik\n          initialValues={{\n            firstName: user?.firstName || '',\n            lastName: user?.lastName || '',\n            username: user?.username || '',\n            password: '',\n          }}\n          validationSchema={Yup.object({\n            firstName: Yup.string().required('Required'),\n            lastName: Yup.string().required('Required'),\n            username: Yup.string().required('Required'),\n            password: Yup.string().required(!user ? 'Required' : ''),\n          })}\n          onSubmit={async (values) => {\n            user ? handleSubmitUpdate(values) : handleSubmitAdd(values)\n          }}\n        >\n          <Form>\n            <DialogTitle>{user ? 'Edit User' : 'Add User'}</DialogTitle>\n            <DialogContent>\n              <ListErrors errors={errors} />\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    autoFocus={user ? false : true}\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='First Name'\n                    name='firstName'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Last Name'\n                    name='lastName'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={!!user || inProgress}\n                    label='Username'\n                    name='username'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Password'\n                    name='password'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button\n                color='primary'\n                disabled={inProgress}\n                type='submit'\n                variant='contained'\n              >\n                {user\n                  ? inProgress\n                    ? 'Updating...'\n                    : 'Update'\n                  : inProgress\n                  ? 'Adding...'\n                  : 'Add'}\n              </Button>\n              <Button\n                disabled={inProgress}\n                onClick={handleClose}\n                variant='contained'\n              >\n                Cancel\n              </Button>\n            </DialogActions>\n          </Form>\n        </Formik>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserDialog)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from '@material-ui/core'\nimport { Delete } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport agent from '../../agent'\n\nimport { DELETE_USER } from '../../constants/actionTypes'\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (user) =>\n    dispatch({\n      type: DELETE_USER,\n      payload: agent.Users.delete(user),\n      snackbar: { message: 'User deleted', variant: 'success' },\n    }),\n})\n\nconst DeleteUserAlert = ({ onDelete, user }) => {\n  const [open, setOpen] = useState(false)\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmit = () => {\n    setOpen(false)\n    onDelete(user)\n  }\n\n  return (\n    <>\n      <ActionButton action='Delete user' onClick={handleClickOpen}>\n        <Delete />\n      </ActionButton>\n      <Dialog\n        open={open}\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onFocus={(ev) => ev.stopPropagation()}\n      >\n        <DialogTitle>Delete User</DialogTitle>\n        <DialogContent>\n          <DialogContentText component='div'>\n            Are you sure you want to delete{' '}\n            <b>\n              {user.firstName} {user.lastName}\n            </b>\n            ? This action will permanently delete:\n            <ul>\n              <li>all categories</li>\n              <li>all ingredients</li>\n              <li>all meals</li>\n              <li>all plans</li>\n              <li>all recipes</li>\n              <li>all settings</li>\n              <li>all stores</li>\n            </ul>\n            associated with this user. This action <b>cannot be undone</b>.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={handleSubmit}\n            color='secondary'\n            variant='contained'\n            autoFocus\n          >\n            Delete\n          </Button>\n          <Button onClick={handleClose} variant='contained'>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(() => ({}), mapDispatchToProps)(DeleteUserAlert)\n","import React, { useState } from 'react'\nimport {\n  Chip,\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\nimport { ExpandMore } from '@material-ui/icons'\n\nimport UserDialog from './UserDialog'\nimport DeleteUserAlert from './DeleteUserAlert'\n\nconst useStyles = makeStyles((theme) => ({\n  userDetails: {\n    display: 'block',\n  },\n  userHeader: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'space-between',\n    width: '100%',\n  },\n  userUsername: {\n    marginRight: theme.spacing(2),\n    minWidth: theme.spacing(12),\n  },\n  userName: {\n    flexGrow: '1',\n  },\n}))\n\nconst UserList = ({ users }) => {\n  const [expanded, setExpanded] = useState(false)\n\n  const classes = useStyles()\n\n  const handleChange = (panel) => (ev, isExpanded) => {\n    setExpanded(isExpanded ? panel : false)\n  }\n\n  return (\n    <>\n      {users?.length > 0 ? (\n        users.map((user) => {\n          return (\n            <Accordion\n              expanded={expanded === user.username}\n              key={user.username}\n              onChange={handleChange(user.username)}\n            >\n              <AccordionSummary expandIcon={<ExpandMore />}>\n                <div className={classes.userHeader}>\n                  <Chip\n                    color='secondary'\n                    label={user.username}\n                    className={classes.userUsername}\n                  />\n                  <Typography className={classes.userName} variant='h5'>\n                    {user.firstName} {user.lastName}\n                  </Typography>\n                  <UserDialog user={user} />\n                  <DeleteUserAlert user={user} />\n                </div>\n              </AccordionSummary>\n              <AccordionDetails className={classes.userDetails}>\n                <Typography variant='h6'>Account Details</Typography>\n                <Typography>\n                  <em>Coming soon!</em>\n                </Typography>\n              </AccordionDetails>\n            </Accordion>\n          )\n        })\n      ) : (\n        <Typography>No users found</Typography>\n      )}\n    </>\n  )\n}\n\nexport default UserList\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport PageHeader from '../PageHeader'\nimport UserDialog from './UserDialog'\nimport UserList from './UserList'\nimport agent from '../../agent'\n\nimport {\n  MANAGE_USERS_PAGE_LOADED,\n  MANAGE_USERS_PAGE_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  ...state.users,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: () =>\n    dispatch({\n      type: MANAGE_USERS_PAGE_LOADED,\n      payload: agent.Users.getAll(),\n    }),\n  onUnload: () => dispatch({ type: MANAGE_USERS_PAGE_UNLOADED }),\n})\n\nconst ManageUsers = ({ onLoad, onUnload, users }) => {\n  useEffect(() => {\n    onLoad()\n\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  return (\n    <>\n      <PageHeader title={'Manage Users'}>\n        <UserDialog />\n      </PageHeader>\n      <UserList users={users} />\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageUsers)\n","import React, { useEffect, useState } from 'react'\nimport { Autocomplete } from '@material-ui/lab'\nimport { TextField } from '@material-ui/core'\nimport parse from 'autosuggest-highlight/parse'\nimport match from 'autosuggest-highlight/match'\n\nconst RecipeSelector = ({ name, onChange, recipes, values }) => {\n  const [options, setOptions] = useState([])\n\n  const mappedOptions = recipes\n    .filter((recipe) => recipe.isMeal === false)\n    .map((recipe) => {\n      const firstLetter = recipe.title[0].toUpperCase()\n      return {\n        firstLetter: /[0-9]/.test(firstLetter) ? '0-9' : firstLetter,\n        ...recipe,\n      }\n    })\n\n  const handleChange = (ev, values) => {\n    onChange(name, values)\n  }\n\n  useEffect(() => {\n    setOptions(mappedOptions)\n  }, [recipes])\n\n  return (\n    <Autocomplete\n      autoHighlight\n      autoSelect\n      getOptionLabel={(option) => {\n        return option.title\n      }}\n      getOptionSelected={(option, value) => option._id === value._id}\n      groupBy={(option) => option.firstLetter}\n      multiple\n      noOptionsText='No recipes have been created'\n      onChange={handleChange}\n      options={options}\n      renderInput={(params) => (\n        <TextField {...params} label='Recipes' variant='outlined' />\n      )}\n      renderOption={(option, { inputValue }) => {\n        const matches = match(option.title, inputValue)\n        const parts = parse(option.title, matches)\n        return (\n          <div>\n            {parts.map((part, index) => (\n              <span\n                key={index}\n                style={{ fontWeight: part.highlight ? 700 : 400 }}\n              >\n                {part.text}\n              </span>\n            ))}\n          </div>\n        )\n      }}\n      value={values}\n    />\n  )\n}\n\nexport default RecipeSelector\n","export const MEAL_TYPES = ['', 'Breakfast', 'Lunch', 'Dinner', 'Snack', 'Other']\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  MenuItem,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\n\nimport FabAdd from '../FabAdd'\nimport ListErrors from '../ListErrors'\nimport RecipeSelector from './RecipeSelector'\n\nimport {\n  ADD_MEAL,\n  MEAL_DIALOG_UNLOADED,\n  UPDATE_MEAL,\n} from '../../constants/actionTypes'\nimport { MEAL_TYPES } from '../../constants/mealTypes'\nimport agent from '../../agent'\n\nconst mapStateToProps = (state) => ({\n  ...state.meals,\n  recipes: state.recipes.recipes,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAdd: (meal) =>\n    dispatch({\n      type: ADD_MEAL,\n      payload: agent.Meals.add(meal),\n      snackbar: { message: 'Meal added', variant: 'success' },\n    }),\n  onExit: () => dispatch({ type: MEAL_DIALOG_UNLOADED }),\n  onUpdate: (meal) =>\n    dispatch({\n      type: UPDATE_MEAL,\n      payload: agent.Meals.update(meal),\n      snackbar: { message: 'Meal updated', variant: 'success' },\n    }),\n})\n\nconst MealsDialog = ({\n  editor,\n  errors,\n  inProgress,\n  onAdd,\n  onExit,\n  onUpdate,\n  recipes,\n}) => {\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n\n  const [open, setOpen] = useState(false)\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmitAdd = (values) => {\n    onAdd({ ...values })\n  }\n\n  const handleSubmitUpdate = (values) => {\n    onUpdate({ ...editor.meal, ...values })\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) setOpen(false)\n  }, [inProgress])\n\n  useEffect(() => {\n    // Open the dialog if an editor.meal object is defined\n    setOpen(!!editor.meal)\n  }, [editor.meal])\n\n  return (\n    <>\n      <FabAdd item='meal' onClick={handleClickOpen} />\n\n      <Dialog\n        fullWidth\n        fullScreen={fullScreen}\n        maxWidth='md'\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onFocus={(ev) => ev.stopPropagation()}\n        open={open}\n        TransitionProps={{\n          onExit: onExit,\n        }}\n      >\n        <Formik\n          initialValues={{\n            title: editor.meal?.title || '',\n            recipes: editor.meal?.recipes || [],\n            mealType: editor.meal?.mealType || '',\n            notes: editor.meal?.notes || '',\n          }}\n          validationSchema={Yup.object({\n            title: Yup.string().required('Required'),\n            recipes: Yup.array(),\n            mealType: Yup.string().required('Required'),\n            notes: Yup.string(),\n          })}\n          onSubmit={async (values) => {\n            editor.meal ? handleSubmitUpdate(values) : handleSubmitAdd(values)\n          }}\n        >\n          {(formik) => (\n            <Form>\n              <DialogTitle>\n                {editor.meal ? 'Update meal' : 'Add meal'}\n              </DialogTitle>\n              <DialogContent>\n                <ListErrors errors={errors} />\n                <Grid container spacing={2}>\n                  <Grid item xs={12}>\n                    <Field\n                      autoFocus={!editor.meal}\n                      component={TextField}\n                      disabled={inProgress}\n                      id='title'\n                      label='Meal Title'\n                      name='title'\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Field\n                      component={TextField}\n                      disabled={inProgress}\n                      id='mealType'\n                      label='Meal Type'\n                      name='mealType'\n                      type='select'\n                      select\n                      fullWidth\n                    >\n                      {MEAL_TYPES.map((name) => {\n                        const value = name.toLowerCase()\n                        return (\n                          <MenuItem key={value} value={value}>\n                            {name}\n                          </MenuItem>\n                        )\n                      })}\n                    </Field>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Field\n                      component={TextField}\n                      disabled={inProgress}\n                      id='notes'\n                      label='Notes'\n                      name='notes'\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <RecipeSelector\n                      onChange={formik.setFieldValue}\n                      name='recipes'\n                      recipes={recipes}\n                      values={formik.values.recipes}\n                    />\n                  </Grid>\n                </Grid>\n              </DialogContent>\n              <DialogActions>\n                <Button\n                  color='primary'\n                  disabled={inProgress}\n                  type='submit'\n                  variant='contained'\n                >\n                  {editor.meal\n                    ? inProgress\n                      ? 'Updating...'\n                      : 'Update'\n                    : inProgress\n                    ? 'Adding...'\n                    : 'Add'}\n                </Button>\n                <Button\n                  disabled={inProgress}\n                  onClick={handleClose}\n                  variant='contained'\n                >\n                  Cancel\n                </Button>\n              </DialogActions>\n            </Form>\n          )}\n        </Formik>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MealsDialog)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport MaterialTable from '@material-table/core'\n\nimport agent from '../../agent'\n\nimport {\n  DELETE_MEAL,\n  DELETE_MEALS,\n  MEAL_DIALOG_LOADED,\n} from '../../constants/actionTypes'\nimport { MEAL_TYPES } from '../../constants/mealTypes'\n\nconst mapStateToProps = (state) => ({\n  meals: state.meals.meals,\n  recipes: state.recipes.recipes,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (meal) =>\n    dispatch({\n      type: DELETE_MEAL,\n      payload: agent.Meals.delete(meal),\n      snackbar: { message: 'Meal deleted', variant: 'success' },\n    }),\n  onDeleteMany: (slugs) =>\n    dispatch({\n      type: DELETE_MEALS,\n      payload: agent.Meals.deleteMany(slugs),\n      snackbar: {\n        message: `${slugs.length} meal${slugs.length > 1 ? 's' : ''} deleted`,\n        variant: 'success',\n      },\n    }),\n  onLoadUpdate: (meal) => dispatch({ type: MEAL_DIALOG_LOADED, meal }),\n})\n\nconst MealsTable = ({\n  meals,\n  onDelete,\n  onDeleteMany,\n  onLoadUpdate,\n  recipes,\n}) => {\n  const [data, setData] = useState([])\n\n  const [columns] = useState([\n    { title: 'Title', field: 'title' },\n    {\n      title: 'Meal Type',\n      field: 'mealType',\n      lookup: MEAL_TYPES.reduce(\n        (obj, item) => ((obj[item.toLowerCase()] = item), obj),\n        {}\n      ),\n    },\n    { title: 'Notes', field: 'notes' },\n  ])\n\n  const getRecipesAsMeals = () =>\n    recipes.filter((recipe) => recipe.isMeal === true)\n\n  const handleDeleteManyClick = (data) => {\n    const slugs = data.map((row) => row.slug)\n    onDeleteMany(slugs)\n  }\n\n  const handleLoadUpdateClick = (meal) => {\n    onLoadUpdate(meal)\n  }\n\n  useEffect(() => {\n    const recipesAsMeals = getRecipesAsMeals()\n    const data = [...recipesAsMeals, ...meals].sort((a, b) =>\n      a.title.localeCompare(b.title)\n    )\n    setData(data)\n  }, [meals, recipes])\n\n  return (\n    <MaterialTable\n      title='Meals'\n      columns={columns}\n      data={data}\n      localization={{\n        body: {\n          emptyDataSourceMessage: 'No meals found',\n          editRow: {\n            deleteText: 'Delete meal? This action cannot be undone.',\n          },\n        },\n      }}\n      options={{\n        actionsColumnIndex: -1,\n        paging: false,\n        selection: true,\n        selectionProps: (rowData) => ({ disabled: !!rowData.isMeal }),\n        toolbar: true,\n      }}\n      actions={[\n        {\n          action: (rowData) => ({\n            disabled: !!rowData.isMeal,\n            icon: 'edit',\n            onClick: (e, data) => handleLoadUpdateClick(data),\n            tooltip: !rowData.isMeal\n              ? 'Update meal'\n              : 'Cannot edit recipes here',\n          }),\n          position: 'row',\n        },\n        {\n          icon: 'delete',\n          onClick: (e, data) => handleDeleteManyClick(data),\n          position: 'toolbarOnSelect',\n          tooltip: 'Delete all selected meals',\n        },\n      ]}\n      editable={{\n        isDeletable: (rowData) => !rowData.isMeal,\n        onRowDelete: (oldData) =>\n          new Promise((resolve, reject) => {\n            const newData = [...data]\n            const index = oldData.tableData.id\n            newData.splice(index, 1)\n            setData([...newData])\n            onDelete(oldData)\n            resolve()\n          }),\n      }}\n    />\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MealsTable)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport MealsDialog from './MealsDialog'\nimport MealsTable from './MealsTable'\nimport PageHeader from '../PageHeader'\nimport Spinner from '../Spinner'\n\nimport {\n  MEALS_PAGE_LOADED,\n  MEALS_PAGE_UNLOADED,\n} from '../../constants/actionTypes'\nimport agent from '../../agent'\n\nconst mapStateToProps = (state) => ({\n  pageLoaded: state.meals.pageLoaded,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: () =>\n    dispatch({\n      type: MEALS_PAGE_LOADED,\n      payload: Promise.all([agent.Meals.getAll(), agent.Recipes.getAll()]),\n    }),\n  onUnload: () => dispatch({ type: MEALS_PAGE_UNLOADED }),\n})\n\nconst Meals = ({ onLoad, onUnload, pageLoaded }) => {\n  useEffect(() => {\n    onLoad()\n\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  return (\n    <>\n      <PageHeader title='Manage Meals'>\n        <MealsDialog />\n      </PageHeader>\n      {pageLoaded ? <MealsTable /> : <Spinner />}\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Meals)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  BottomNavigation,\n  BottomNavigationAction,\n  Icon,\n  makeStyles,\n} from '@material-ui/core'\nimport { Settings, SupervisorAccount } from '@material-ui/icons'\nimport { loadCSS } from 'fg-loadcss'\n\nimport {\n  NAV_TAB_CHANGE,\n  NAV_LOADED,\n  NAV_UNLOADED,\n} from '../constants/actionTypes'\n\nconst useStyles = makeStyles({\n  nav: {\n    position: 'fixed',\n    bottom: 0,\n    width: '100%',\n    zIndex: '1000',\n  },\n})\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.common.currentUser,\n  navTabValue: state.nav.navTabValue,\n  path: state.router.location.pathname,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: (tabValue, redirectTo) =>\n    dispatch({ type: NAV_LOADED, value: tabValue, redirectTo }),\n  onTabChange: (tabValue, redirectTo) =>\n    dispatch({ type: NAV_TAB_CHANGE, value: tabValue, redirectTo }),\n  onUnload: () => dispatch({ type: NAV_UNLOADED }),\n})\n\nconst Navigation = ({\n  currentUser,\n  navTabValue,\n  onLoad,\n  onTabChange,\n  onUnload,\n  path,\n}) => {\n  const classes = useStyles()\n  const userRole = currentUser.role\n\n  const handleTabChange = (tabValue) => {\n    onTabChange(tabValue, `/${tabValue}`)\n  }\n\n  useEffect(() => {\n    const tabFromPath = path.split('/')[1]\n    if (tabFromPath && tabFromPath !== '') {\n      onLoad(tabFromPath, `/${tabFromPath}`)\n    } else {\n      const tabValue = userRole === 'admin' ? 'users' : 'plans'\n      onLoad(tabValue, `/${tabValue}`)\n    }\n\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  useEffect(() => {\n    const node = loadCSS(\n      'https://use.fontawesome.com/releases/v5.15.3/css/all.css',\n      document.querySelector('#font-awesome-css')\n    )\n\n    return () => {\n      node.parentNode.removeChild(node)\n    }\n  })\n\n  if (userRole === 'admin') {\n    return (\n      <BottomNavigation\n        className={classes.nav}\n        onChange={(event, newValue) => {\n          handleTabChange(newValue)\n        }}\n        showLabels\n        value={navTabValue}\n      >\n        <BottomNavigationAction\n          label='Users'\n          icon={<SupervisorAccount />}\n          value='users'\n        />\n        <BottomNavigationAction\n          label='Settings'\n          icon={<Settings />}\n          value='settings'\n        />\n      </BottomNavigation>\n    )\n  }\n\n  return (\n    <BottomNavigation\n      className={classes.nav}\n      onChange={(event, newValue) => {\n        handleTabChange(newValue)\n      }}\n      showLabels\n      value={navTabValue}\n    >\n      <BottomNavigationAction\n        label='Plans'\n        icon={<Icon className='fa fa-calendar-week' />}\n        value='plans'\n      />\n      <BottomNavigationAction\n        label='Meals'\n        icon={<Icon className='fa fa-utensils' />}\n        value='meals'\n      />\n      <BottomNavigationAction\n        label='Recipes'\n        icon={<Icon className='fa fa-hamburger' />}\n        value='recipes'\n      />\n      <BottomNavigationAction\n        label='Ingredients'\n        icon={<Icon className='fa fa-carrot' />}\n        value='ingredients'\n      />\n      <BottomNavigationAction\n        label='Settings'\n        icon={<Settings />}\n        value='settings'\n      />\n    </BottomNavigation>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation)\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(11),\n  },\n}))\n\nconst PageWrapper = (props) => {\n  const classes = useStyles()\n\n  return <div className={classes.wrapper}>{props.children}</div>\n}\n\nexport default PageWrapper\n","import React from 'react'\nimport { Container, Typography } from '@material-ui/core'\nimport PageWrapper from './PageWrapper'\n\nconst NotFound = (props) => {\n  return (\n    <PageWrapper>\n      <Container>\n        <Typography variant='h2'>Error 404: Page Not Found</Typography>\n      </Container>\n    </PageWrapper>\n  )\n}\n\nexport default NotFound\n","import React, { useState } from 'react'\nimport {\n  Checkbox,\n  FormGroup,\n  FormControlLabel,\n  Tooltip,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\nimport { Info } from '@material-ui/icons'\n\nconst useStyles = makeStyles((theme) => ({\n  checked: {\n    '& + span': {\n      'color': theme.palette.primary.light,\n      'textDecoration': 'line-through',\n      '& svg': {\n        opacity: 0.5,\n      },\n    },\n  },\n  icon: {\n    marginLeft: theme.spacing(1),\n  },\n  listItem: {\n    alignItems: 'center',\n    display: 'flex',\n  },\n}))\n\nconst ShoppingList = ({ list }) => {\n  const classes = useStyles()\n\n  const [checked, setChecked] = useState({})\n\n  const handleChange = (e) => {\n    setChecked({ ...checked, [e.target.name]: e.target.checked })\n  }\n\n  return Array.isArray(list) && list.length > 0 ? (\n    <FormGroup>\n      {list.map((item) => (\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={checked[`${item.name}-${item.unit}`] ?? false}\n              classes={{ checked: classes.checked }}\n              onChange={handleChange}\n              name={`${item.name}-${item.unit}`}\n            />\n          }\n          key={`${item.id}-${item.unit}`}\n          label={\n            <span className={classes.listItem}>\n              {item.quantity && item.unit\n                ? `${item.name} (${item.quantity} ${item.unit})`\n                : `${item.name}`}\n              <Tooltip\n                arrow\n                enterTouchDelay={0}\n                title={`Needed for: ${item.recipes.join(', ')}`}\n              >\n                <Info className={classes.icon} color='secondary' />\n              </Tooltip>\n            </span>\n          }\n        />\n      ))}\n    </FormGroup>\n  ) : (\n    <Typography>{list}</Typography>\n  )\n}\n\nexport default ShoppingList\n","import React, { useState } from 'react'\nimport { FormControl, InputLabel, MenuItem, Select } from '@material-ui/core'\n\nconst StoreSelector = ({ defaultStore, onChange, stores }) => {\n  const [store, setStore] = useState(defaultStore ?? '')\n\n  const handleChange = (e) => {\n    const store = e.target.value\n    onChange(store)\n    setStore(store)\n  }\n\n  return (\n    <FormControl fullWidth>\n      <InputLabel id='store-selector-label'>Select a Store</InputLabel>\n      <Select\n        id='store-selector'\n        labelId='store-selector-label'\n        onChange={handleChange}\n        value={store}\n      >\n        {!store && <MenuItem key='blank' value=''></MenuItem>}\n        {stores.map((store) => (\n          <MenuItem key={store._id} value={store._id}>\n            {store.name}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n}\n\nexport default StoreSelector\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\n\nimport ShoppingList from './ShoppingList'\nimport StoreSelector from './StoreSelector'\n\nimport {\n  PLAN_LIST_COPIED,\n  PLAN_LIST_DIALOG_UNLOADED,\n} from '../../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  categories: state.categories.categories,\n  defaultStore: state.common.settings.defaultStore,\n  ingredients: state.ingredients.ingredients,\n  meals: state.meals.meals,\n  recipes: state.recipes.recipes,\n  stores: state.stores.stores,\n  viewer: state.plans.viewer,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onCopy: () =>\n    dispatch({\n      type: PLAN_LIST_COPIED,\n      snackbar: { message: 'List copied', variant: 'success' },\n    }),\n  onExit: () => dispatch({ type: PLAN_LIST_DIALOG_UNLOADED }),\n})\n\nconst ListDialog = ({\n  categories,\n  defaultStore,\n  ingredients,\n  meals,\n  onCopy,\n  onExit,\n  recipes,\n  stores,\n  viewer,\n}) => {\n  const [list, setList] = useState([])\n  const [open, setOpen] = useState(false)\n  const [store, setStore] = useState(defaultStore)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n\n  const getList = () => {\n    if (viewer.plan) {\n      if (categories.length === 0) return 'No categories found'\n\n      // First we create an array of meal and recipe objects collected from each day of the plan\n      let planMeals = []\n      for (const [day, mealIds] of Object.entries(viewer.plan.meals)) {\n        let dailyMeals = mealIds.map(\n          (mealId) =>\n            meals.find((meal) => meal._id === mealId) ??\n            recipes.find((recipe) => recipe._id === mealId)\n        )\n        planMeals = [...planMeals, ...dailyMeals]\n      }\n\n      if (planMeals.length === 0) return 'No meals found'\n\n      // Then we create an array of all recipe objects collected from each meal in the plan\n      const planRecipes = planMeals.flatMap((meal) => {\n        if (meal.hasOwnProperty('recipes')) return meal.recipes\n        return meal\n      })\n\n      if (planRecipes.length === 0) return 'No recipes found'\n\n      // Then we create an array of objects with ingredient and category info\n      const planIngredients = planRecipes\n        .flatMap((recipe) =>\n          recipe.ingredients.map((ingredient) => ({\n            ...ingredient,\n            recipe: recipe.title,\n          }))\n        )\n        .map((ingredient) => {\n          const item = ingredients.find((item) => item._id === ingredient.id)\n          const itemCategory = categories.find(\n            (category) => category._id === item.category\n          )\n          return {\n            ...ingredient,\n            category: itemCategory._id,\n            name: item.name,\n          }\n        })\n\n      if (planIngredients.length === 0) return 'No ingredients found'\n\n      // Then we consolidate the arry of ingredients into an array of categories and their associated ingredients\n      const ingredientsByCategory = planIngredients.reduce((obj, item) => {\n        const ingredient = {\n          id: item.id,\n          name: item.name,\n          quantity: item.quantity,\n          recipes: [item.recipe],\n          unit: item.unit,\n        }\n        if (obj.hasOwnProperty(item.category)) {\n          obj[item.category].push(ingredient)\n        } else {\n          obj[item.category] = [ingredient]\n        }\n        return obj\n      }, {})\n\n      // Looping over the categories in the store, we consolidate the ingredients by name and unit into the list array\n      const lists = []\n      const selectedStore = stores.find((s) => s._id === store)\n      const categoryList = selectedStore?.categories ?? categories\n      categoryList.forEach((category) => {\n        const ingredientsList = ingredientsByCategory[category._id] ?? []\n        const ingredientTotals = ingredientsList.reduce((arr, item) => {\n          const findItem = (i) => i.id === item.id && i.unit === item.unit\n          if (arr.find((i) => findItem(i))) {\n            const itemIndex = arr.findIndex((i) => findItem(i))\n            arr[itemIndex] = {\n              ...arr[itemIndex],\n              quantity: arr[itemIndex].quantity + item.quantity,\n              recipes: arr[itemIndex].recipes.concat(\n                item.recipes.filter(\n                  (item) => arr[itemIndex].recipes.indexOf(item) < 0\n                )\n              ),\n            }\n          } else {\n            arr.push(item)\n          }\n          return arr\n        }, [])\n        lists.push(ingredientTotals)\n      })\n\n      return lists.flat()\n    }\n\n    return 'No plan found'\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleCopy = () => {\n    const listString = list\n      .map((item) => `${item.name} (${item.quantity} ${item.unit})`)\n      .join('\\n')\n    navigator.clipboard.writeText(listString).then(\n      () => {\n        onCopy()\n      },\n      (err) => {\n        console.error('error', err)\n      }\n    )\n  }\n\n  const handleExit = () => {\n    setStore(defaultStore)\n    setList([])\n    onExit()\n  }\n\n  const handleStoreChange = (storeId) => {\n    setStore(storeId)\n  }\n\n  useEffect(() => {\n    // Update the list when the dialog opens\n    if (open) setList(getList())\n  }, [open])\n\n  useEffect(() => {\n    // Open the dialog if a viewer.plan object is defined\n    if (viewer.type === 'list') setOpen(!!viewer.plan)\n  }, [viewer.plan])\n\n  useEffect(() => {\n    // Update the list when the store changes\n    setList(getList())\n  }, [store])\n\n  return (\n    <Dialog\n      fullScreen={fullScreen}\n      fullWidth\n      maxWidth='md'\n      onClick={(ev) => ev.stopPropagation()}\n      onClose={handleClose}\n      onFocus={(ev) => ev.stopPropagation()}\n      open={open}\n      TransitionProps={{\n        onExit: handleExit,\n      }}\n    >\n      <DialogTitle>Shopping List for {viewer.plan?.title}</DialogTitle>\n      <DialogContent>\n        <Grid container spacing={2}>\n          {stores.length > 0 && (\n            <Grid item xs={12}>\n              <StoreSelector\n                defaultStore={defaultStore}\n                onChange={handleStoreChange}\n                stores={stores}\n              />\n            </Grid>\n          )}\n          <Grid item xs={12}>\n            <ShoppingList list={list} />\n          </Grid>\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          color='primary'\n          disabled={!Array.isArray(list)}\n          onClick={handleCopy}\n          variant='contained'\n        >\n          Copy list\n        </Button>\n        <Button onClick={handleClose} variant='contained'>\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListDialog)\n","import React from 'react'\nimport { Draggable } from 'react-beautiful-dnd'\nimport { IconButton, Paper, useTheme } from '@material-ui/core'\nimport { Close } from '@material-ui/icons'\n\nconst MealDraggable = ({ index, meal, onRemove, uniqueId }) => {\n  const theme = useTheme()\n\n  const getStyle = (isDragging, draggableStyle) => ({\n    alignItems: 'center',\n    background: isDragging ? theme.palette.secondary.light : 'white',\n    display: 'flex',\n    justifyContent: 'space-between',\n    marginBottom: theme.spacing(1),\n    padding: theme.spacing(1),\n    userSelect: 'none',\n    ...draggableStyle,\n  })\n\n  return (\n    <Draggable key={uniqueId} draggableId={uniqueId} index={index}>\n      {(provided, snapshot) => (\n        <Paper\n          elevation={3}\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          style={getStyle(snapshot.isDragging, provided.draggableProps.style)}\n        >\n          {meal.title}\n          <IconButton id={uniqueId} onClick={onRemove} size='small'>\n            <Close />\n          </IconButton>\n        </Paper>\n      )}\n    </Draggable>\n  )\n}\n\nexport default MealDraggable\n","import React, { useEffect, useState } from 'react'\nimport { Autocomplete } from '@material-ui/lab'\nimport { TextField } from '@material-ui/core'\nimport parse from 'autosuggest-highlight/parse'\nimport match from 'autosuggest-highlight/match'\n\nconst MealSelector = ({ meals, name, onChange }) => {\n  const [options, setOptions] = useState([])\n\n  const mappedOptions = meals.map((meal) => {\n    const firstLetter = meal.title[0].toUpperCase()\n    return {\n      firstLetter: /[0-9]/.test(firstLetter) ? '0-9' : firstLetter,\n      ...meal,\n    }\n  })\n\n  const handleChange = (ev, value) => {\n    onChange(name, value?._id)\n  }\n\n  useEffect(() => {\n    setOptions(mappedOptions)\n  }, [meals])\n\n  return (\n    <Autocomplete\n      autoHighlight\n      autoSelect\n      getOptionLabel={(option) => {\n        return option.title\n      }}\n      groupBy={(option) => option.firstLetter}\n      noOptionsText='No meals have been created'\n      onChange={handleChange}\n      options={options}\n      renderInput={(params) => (\n        <TextField {...params} autoFocus label='Meals' variant='outlined' />\n      )}\n      renderOption={(option, { inputValue }) => {\n        const matches = match(option.title, inputValue)\n        const parts = parse(option.title, matches)\n        return (\n          <div>\n            {parts.map((part, index) => (\n              <span\n                key={index}\n                style={{ fontWeight: part.highlight ? 700 : 400 }}\n              >\n                {part.text}\n              </span>\n            ))}\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nexport default MealSelector\n","import React, { useState } from 'react'\nimport { Formik, Form } from 'formik'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Fab,\n  Tooltip,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Add } from '@material-ui/icons'\n\nimport MealSelector from './MealSelector'\n\nconst MealSelectorDialog = ({ day, meals, onAdd }) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleExit = () => {}\n\n  const handleSubmitAdd = (values) => {\n    const result = { day, mealId: values.meal }\n    onAdd(result)\n    handleClose()\n  }\n\n  return (\n    <>\n      <Tooltip arrow title={`Add meal to ${day}`}>\n        <Fab color='secondary' onClick={handleClickOpen} size='small'>\n          <Add />\n        </Fab>\n      </Tooltip>\n\n      <Dialog\n        fullScreen={fullScreen}\n        fullWidth\n        maxWidth='md'\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onFocus={(ev) => ev.stopPropagation()}\n        open={open}\n        TransitionProps={{ onExit: handleExit }}\n      >\n        <Formik\n          initialValues={{\n            meal: '',\n          }}\n          onSubmit={(values) => {\n            handleSubmitAdd(values)\n          }}\n        >\n          {(formik) => (\n            <Form>\n              <DialogTitle>Add meal to {day}</DialogTitle>\n              <DialogContent>\n                <MealSelector\n                  meals={meals}\n                  name='meal'\n                  onChange={formik.setFieldValue}\n                />\n              </DialogContent>\n              <DialogActions>\n                <Button\n                  color='primary'\n                  disabled={!formik.values.meal}\n                  type='submit'\n                  variant='contained'\n                >\n                  Add\n                </Button>\n                <Button onClick={handleClose} variant='contained'>\n                  Cancel\n                </Button>\n              </DialogActions>\n            </Form>\n          )}\n        </Formik>\n      </Dialog>\n    </>\n  )\n}\n\nexport default MealSelectorDialog\n","import React from 'react'\nimport { Droppable } from 'react-beautiful-dnd'\nimport {\n  Typography,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\n\nimport MealDraggable from './MealDraggable'\nimport MealSelectorDialog from './MealSelectorDialog'\n\nconst useStyles = makeStyles((theme) => ({\n  dayHeader: {\n    'alignItems': 'center',\n    'borderBottom': `2px solid ${theme.palette.secondary.light}`,\n    'display': 'flex',\n    'justifyContent': 'space-between',\n    'padding': `${theme.spacing(2)}px ${theme.spacing(1)}px ${theme.spacing(\n      1\n    )}px`,\n    'width': '100%',\n    [theme.breakpoints.up('lg')]: {\n      width: '50%',\n    },\n    '& > button': {\n      visibility: 'hidden',\n    },\n    '&:hover > button': {\n      visibility: 'visible',\n    },\n  },\n}))\n\nconst WeekdayDroppable = ({ day, mealPlan, meals, onAdd, onRemove }) => {\n  const theme = useTheme()\n  const fullWidth = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const getStyle = (isDraggingOver) => ({\n    border: isDraggingOver\n      ? `2px dashed ${theme.palette.primary.light}`\n      : '2px dashed white',\n    minHeight: '120px',\n    padding: theme.spacing(1),\n    width: fullWidth ? '100%' : '50%',\n  })\n\n  const mappedMealPlan = mealPlan.map((mealId) =>\n    meals.find((meal) => meal._id === mealId)\n  )\n\n  return (\n    <div>\n      <div className={classes.dayHeader}>\n        <Typography color='primary' variant='h6'>\n          <em>{day}</em>\n        </Typography>\n        <MealSelectorDialog day={day} meals={meals} onAdd={onAdd} />\n      </div>\n      <Droppable droppableId={day}>\n        {(provided, snapshot) => (\n          <div\n            {...provided.droppableProps}\n            ref={provided.innerRef}\n            style={getStyle(snapshot.isDraggingOver)}\n          >\n            {mappedMealPlan.map((meal, index) => {\n              const uniqueId = `${day}-${meal._id}-${index}`\n              return (\n                <MealDraggable\n                  index={index}\n                  key={uniqueId}\n                  meal={meal}\n                  onRemove={onRemove}\n                  uniqueId={uniqueId}\n                />\n              )\n            })}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </div>\n  )\n}\n\nexport default WeekdayDroppable\n","export const DAYS = [\n  'Sunday',\n  'Monday',\n  'Tuesday',\n  'Wednesday',\n  'Thursday',\n  'Friday',\n  'Saturday',\n]\n","import React, { useState } from 'react'\nimport { DragDropContext } from 'react-beautiful-dnd'\n\nimport WeekdayDroppable from './WeekdayDroppable'\nimport { DAYS } from '../../../constants/days'\n\nconst PlanBuilder = ({ meals, mealPlan, name, onChange }) => {\n  const [plans, setPlans] = useState(mealPlan)\n\n  const onDragEnd = (result) => {\n    const { destination, source, draggableId } = result\n\n    if (\n      !destination ||\n      (destination.droppableId === source.droppableId &&\n        destination.index === source.index)\n    ) {\n      return\n    }\n\n    const start = source.droppableId\n    const finish = destination.droppableId\n    const mealId = draggableId.split('-')[1]\n\n    const newMealPlan = { ...mealPlan }\n    newMealPlan[start].splice(source.index, 1)\n    newMealPlan[finish].splice(destination.index, 0, mealId)\n\n    setPlans(newMealPlan)\n    onChange(name, newMealPlan)\n    return\n  }\n\n  const handleAddClick = (result) => {\n    const { day, mealId } = result\n    const newMealPlan = { ...mealPlan }\n    newMealPlan[day].push(mealId)\n    setPlans(newMealPlan)\n    onChange(name, newMealPlan)\n  }\n\n  const handleRemoveClick = (e) => {\n    const id = e.currentTarget.getAttribute('id')\n    const [day, mealId] = id.split('-')\n    const newMealPlan = { ...mealPlan }\n    const removeIndex = newMealPlan[day].indexOf(mealId)\n    newMealPlan[day].splice(removeIndex, 1)\n    setPlans(newMealPlan)\n    onChange(name, newMealPlan)\n  }\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      {DAYS.map((day) => (\n        <WeekdayDroppable\n          day={day}\n          key={day}\n          meals={meals}\n          mealPlan={plans[day]}\n          onAdd={handleAddClick}\n          onRemove={handleRemoveClick}\n        />\n      ))}\n    </DragDropContext>\n  )\n}\n\nexport default PlanBuilder\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Container,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  Typography,\n} from '@material-ui/core'\n\nimport FabAdd from '../FabAdd'\nimport ListErrors from '../ListErrors'\nimport PlanBuilder from './PlanBuilder/PlanBuilder'\n\nimport {\n  ADD_PLAN,\n  PLAN_DIALOG_UNLOADED,\n  UPDATE_PLAN,\n} from '../../constants/actionTypes'\nimport { DAYS } from '../../constants/days'\nimport agent from '../../agent'\n\nconst mapStateToProps = (state) => ({\n  ...state.plans,\n  meals: state.meals.meals,\n  recipes: state.recipes.recipes,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAdd: (plan) =>\n    dispatch({\n      type: ADD_PLAN,\n      payload: agent.Plans.add(plan),\n      snackbar: { message: 'Plan added', variant: 'success' },\n    }),\n  onExit: () => dispatch({ type: PLAN_DIALOG_UNLOADED }),\n  onUpdate: (plan) =>\n    dispatch({\n      type: UPDATE_PLAN,\n      payload: agent.Plans.update(plan),\n      snackbar: { message: 'Plan updated', variant: 'success' },\n    }),\n})\n\n/**\n * Casts recipes that are meals into meal-like objects, combines them\n * with the meals array, and returns the new array sortted by title\n */\nconst getAllMeals = (meals, recipes) => {\n  const allMeals = [...meals]\n  const recipesAsMeals = recipes\n    .filter((recipe) => recipe.isMeal)\n    .map((recipe) => ({\n      mealType: recipe.mealType,\n      notes: recipe.notes,\n      recipes: [recipe],\n      slug: recipe.slug,\n      title: recipe.title,\n      _id: recipe._id,\n    }))\n  const combinedMeals = [...allMeals, ...recipesAsMeals].sort((a, b) =>\n    a.title.localeCompare(b.title)\n  )\n  return combinedMeals\n}\n\nconst PlanEditor = ({\n  editor,\n  errors,\n  inProgress,\n  meals,\n  onAdd,\n  onExit,\n  onUpdate,\n  recipes,\n}) => {\n  const allMeals = getAllMeals(meals, recipes)\n\n  const defaultMeals = DAYS.reduce((obj, day) => ((obj[day] = []), obj), {})\n\n  const [open, setOpen] = useState(false)\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmitAdd = (values) => {\n    onAdd({ ...values })\n  }\n\n  const handleSubmitUpdate = (values) => {\n    onUpdate({ ...editor.plan, ...values })\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) setOpen(false)\n  }, [inProgress])\n\n  useEffect(() => {\n    // Open the dialog if an editor.plan object is defined\n    setOpen(!!editor.plan)\n  }, [editor.plan])\n\n  return (\n    <>\n      <FabAdd item='plan' onClick={handleClickOpen} />\n      <Dialog\n        fullScreen\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onFocus={(ev) => ev.stopPropagation()}\n        open={open}\n        scroll='body'\n        TransitionProps={{\n          onExit: onExit,\n        }}\n      >\n        <Formik\n          initialValues={{\n            meals: editor.plan?.meals || defaultMeals,\n            notes: editor.plan?.notes || '',\n            order: editor.plan?.order || 0, // currently not in use\n            skip: editor.plan?.skip || false, // currently not in use\n            title: editor.plan?.title || '',\n          }}\n          validationSchema={Yup.object({\n            meals: Yup.object(),\n            notes: Yup.string(),\n            order: Yup.number(),\n            skip: Yup.boolean(),\n            title: Yup.string().required('Required'),\n          })}\n          onSubmit={async (values) => {\n            editor.plan ? handleSubmitUpdate(values) : handleSubmitAdd(values)\n          }}\n        >\n          {(formik) => (\n            <Container disableGutters>\n              <Form>\n                <DialogTitle>\n                  {editor.plan ? 'Update plan' : 'Add plan'}\n                </DialogTitle>\n                <DialogContent>\n                  <ListErrors errors={errors} />\n                  <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                      <Field\n                        autoFocus={!editor.plan}\n                        component={TextField}\n                        disabled={inProgress}\n                        id='title'\n                        label='Plan Title'\n                        name='title'\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <Field\n                        component={TextField}\n                        disabled={inProgress}\n                        id='notes'\n                        label='Notes'\n                        name='notes'\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <Typography variant='h6'>Meals</Typography>\n                      <PlanBuilder\n                        meals={allMeals}\n                        mealPlan={formik.values.meals}\n                        name='meals'\n                        onChange={formik.setFieldValue}\n                      />\n                    </Grid>\n                  </Grid>\n                </DialogContent>\n                <DialogActions>\n                  <Button\n                    color='primary'\n                    disabled={inProgress}\n                    type='submit'\n                    variant='contained'\n                  >\n                    {editor.plan\n                      ? inProgress\n                        ? 'Updating...'\n                        : 'Update'\n                      : inProgress\n                      ? 'Adding...'\n                      : 'Add'}\n                  </Button>\n                  <Button\n                    disabled={inProgress}\n                    onClick={handleClose}\n                    variant='contained'\n                  >\n                    Cancel\n                  </Button>\n                </DialogActions>\n              </Form>\n            </Container>\n          )}\n        </Formik>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlanEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Grid, Paper, Typography, makeStyles } from '@material-ui/core'\n\nimport { RECIPE_VIEW_LOADED } from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  dayList: {\n    listStyle: 'none',\n    paddingLeft: theme.spacing(1),\n  },\n  mealHeader: {\n    padding: theme.spacing(1),\n  },\n  mealLink: {\n    'border': '1px solid',\n    'borderColor': 'white',\n    'borderRadius': theme.spacing(1),\n    'padding': theme.spacing(1),\n    '&:hover': {\n      borderColor: theme.palette.secondary.light,\n    },\n    '& a': {\n      color: theme.palette.text.primary,\n      height: '100%',\n      textDecoration: 'none',\n      width: '100%',\n    },\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n  recipeList: {\n    listStyle: 'none',\n    paddingLeft: theme.spacing(2),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  meals: state.meals.meals,\n  plan: state.plans.viewer.plan,\n  recipes: state.recipes.recipes,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoadView: (recipe) => dispatch({ type: RECIPE_VIEW_LOADED, recipe }),\n})\n\nconst PlanViewer = ({ meals, onLoadView, plan, recipes }) => {\n  const classes = useStyles()\n\n  const days = Object.keys(plan.meals)\n\n  const mealLookup = (id) => {\n    const meal = meals.find((meal) => meal._id === id)\n    if (meal) return meal\n\n    const recipe = recipes.find((recipe) => recipe._id === id)\n    return recipe\n  }\n\n  const handleLoadViewClick = (recipe) => {\n    onLoadView(recipe)\n  }\n\n  return (\n    plan && (\n      <Paper className={classes.paper}>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Typography variant='h5'>{plan.title}</Typography>\n          </Grid>\n          {plan.notes && (\n            <Grid item xs={12}>\n              <Typography variant='h6'>Notes</Typography>\n              <Typography>{plan.notes}</Typography>\n            </Grid>\n          )}\n          <Grid item xs={12}>\n            <Typography variant='h5'>Meals</Typography>\n            <hr />\n            <Grid container item xs={12} spacing={2}>\n              {days.map((day) => {\n                const meals = plan.meals[day]\n                return (\n                  <Grid item xs={12} key={day}>\n                    <Typography variant='h6'>{day}</Typography>\n                    <ul className={classes.dayList}>\n                      {meals.map((mealId) => {\n                        const meal = mealLookup(mealId)\n                        return meal?.recipes ? (\n                          <li key={mealId}>\n                            <Typography className={classes.mealHeader}>\n                              <em>{meal?.title}</em>\n                            </Typography>\n                            <ul className={classes.recipeList}>\n                              {meal.recipes.map((recipe) => (\n                                <li\n                                  className={classes.mealLink}\n                                  key={recipe._id}\n                                >\n                                  <a\n                                    href='#'\n                                    onClick={() => handleLoadViewClick(recipe)}\n                                  >\n                                    <Typography>{recipe.title}</Typography>\n                                  </a>\n                                </li>\n                              ))}\n                            </ul>\n                          </li>\n                        ) : (\n                          <li className={classes.mealLink} key={meal._id}>\n                            <a\n                              href='#'\n                              onClick={() => handleLoadViewClick(meal)}\n                            >\n                              <Typography>{meal?.title}</Typography>\n                            </a>\n                          </li>\n                        )\n                      })}\n                    </ul>\n                  </Grid>\n                )\n              })}\n            </Grid>\n          </Grid>\n        </Grid>\n      </Paper>\n    )\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlanViewer)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport MaterialTable from '@material-table/core'\nimport { Paper } from '@material-ui/core'\nimport { StarBorder } from '@material-ui/icons'\n\nimport {\n  DELETE_PLAN,\n  PLAN_DIALOG_LOADED,\n  PLAN_LIST_DIALOG_LOADED,\n  PLAN_VIEW_LOADED,\n  SET_STARRED_PLAN,\n  UPDATE_PLAN_ARCHIVE_STATUS,\n} from '../../constants/actionTypes'\nimport agent from '../../agent'\n\nconst mapStateToProps = (state) => ({\n  plans: state.plans.plans,\n  starredPlan: state.common.settings.starredPlan,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (plan) =>\n    dispatch({\n      type: DELETE_PLAN,\n      payload: agent.Plans.delete(plan),\n      snackbar: { message: 'Plan deleted', variant: 'success' },\n    }),\n  onLoadUpdate: (plan) => dispatch({ type: PLAN_DIALOG_LOADED, plan }),\n  onLoadView: (plan) => dispatch({ type: PLAN_VIEW_LOADED, plan }),\n  onSetStarred: (settings) =>\n    dispatch({\n      type: SET_STARRED_PLAN,\n      payload: agent.Settings.update(settings),\n      snackbar: { message: 'Starred plan saved', variant: 'success' },\n    }),\n  onUpdateArchiveStatus: (plan, status) =>\n    dispatch({\n      type: UPDATE_PLAN_ARCHIVE_STATUS,\n      payload: Promise.all([\n        agent.Plans.update(plan),\n        agent.Settings.update({ starredPlan: null }),\n      ]),\n      snackbar: { message: `Plan ${status}`, variant: 'success' },\n    }),\n  onViewShoppingList: (plan) =>\n    dispatch({ type: PLAN_LIST_DIALOG_LOADED, plan }),\n})\n\nconst PlansTable = ({\n  filter,\n  onDelete,\n  onLoadUpdate,\n  onLoadView,\n  onSetStarred,\n  onUpdateArchiveStatus,\n  onViewShoppingList,\n  plans,\n  starredPlan,\n}) => {\n  const [data, setData] = useState([])\n\n  const [columns] = useState([\n    { title: 'Title', field: 'title' },\n    { title: 'Notes', field: 'notes' },\n  ])\n\n  const handleArchiveClick = (plan) => {\n    const status = plan.archived ? 'unarchived' : 'archived'\n    onUpdateArchiveStatus({ ...plan, archived: !plan.archived }, status)\n  }\n\n  const handleLoadUpdateClick = (plan) => {\n    onLoadUpdate(plan)\n  }\n\n  const handleLoadViewClick = (plan) => {\n    onLoadView(plan)\n  }\n\n  const handleSetStarredClick = (plan) => {\n    const settings = { starredPlan: starredPlan !== plan._id ? plan : null }\n    onSetStarred(settings)\n  }\n\n  const handleViewShoppingListClick = (plan) => {\n    onViewShoppingList(plan)\n  }\n\n  useEffect(() => {\n    // Put starred plan at top of table\n    const sortedPlans = [...plans].sort((a, b) =>\n      a._id === starredPlan ? -1 : b._id === starredPlan ? 1 : 0\n    )\n\n    // Filter plans based on archive status, or show all plans if no filter given\n    //  * allowed options include 'archived' and 'unarchived'\n    const filteredPlans =\n      filter === 'archived'\n        ? sortedPlans.filter((plan) => plan.archived === true)\n        : filter === 'unarchived'\n        ? sortedPlans.filter((plan) => plan.archived === false)\n        : sortedPlans\n\n    setData(filteredPlans)\n  }, [plans, starredPlan])\n\n  return (\n    <MaterialTable\n      title='Plans'\n      columns={columns}\n      data={data}\n      components={\n        filter === 'archived' && {\n          Container: (props) => <Paper {...props} elevation={0} />,\n        }\n      }\n      localization={{\n        body: {\n          emptyDataSourceMessage: 'No plans found',\n          editRow: { deleteText: 'Delete plan? This action cannot be undone.' },\n        },\n      }}\n      options={{\n        actionsColumnIndex: -1,\n        paging: false,\n        toolbar: true,\n      }}\n      actions={[\n        {\n          action: (rowData) => ({\n            disabled: rowData.archived,\n            icon: rowData._id === starredPlan ? 'star' : () => <StarBorder />,\n            onClick: (e, data) => handleSetStarredClick(data),\n            position: 'row',\n            tooltip: rowData._id === starredPlan ? 'Unstar plan' : 'Star plan',\n          }),\n        },\n        {\n          icon: 'list',\n          onClick: (e, data) => handleViewShoppingListClick(data),\n          tooltip: 'View shopping list',\n          position: 'row',\n        },\n        {\n          icon: 'visibility',\n          onClick: (e, data) => handleLoadViewClick(data),\n          position: 'row',\n          tooltip: 'View plan',\n        },\n        {\n          icon: 'edit',\n          onClick: (e, data) => handleLoadUpdateClick(data),\n          tooltip: 'Update plan',\n          position: 'row',\n        },\n        {\n          action: (rowData) => ({\n            icon: rowData.archived ? 'unarchive' : 'archive',\n            onClick: (e, data) => handleArchiveClick(data),\n            position: 'row',\n            tooltip: rowData.archived ? 'Unarchive plan' : 'Archive plan',\n          }),\n        },\n      ]}\n      editable={{\n        onRowDelete: (oldData) =>\n          new Promise((resolve, reject) => {\n            const newData = [...data]\n            const index = oldData.tableData.id\n            newData.splice(index, 1)\n            setData([...newData])\n            onDelete(oldData)\n            resolve()\n          }),\n      }}\n    />\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlansTable)\n","import React, { useState } from 'react'\nimport MUIRichTextEditor from 'mui-rte'\nimport { convertToRaw } from 'draft-js'\nimport { makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  error: {\n    color: '#f44336',\n    fontSize: '0.75rem',\n    fontWeight: 400,\n    letterSpacing: '0.03333em',\n    lineHeight: 1.66,\n    margin: 0,\n    marginTop: '3px',\n    textAlign: 'left',\n  },\n}))\n\nconst RichEditor = (props) => {\n  const [errors] = useState(null)\n  // const [errors, setErrors] = useState(null)\n\n  const classes = useStyles()\n\n  const handleBlur = () => {\n    !props.readOnly && props.onEditorBlur(props.name, true, false)\n  }\n\n  const handleChange = (state) => {\n    !props.readOnly &&\n      props.onEditorChange(\n        props.name,\n        JSON.stringify(convertToRaw(state.getCurrentContent())),\n        false\n      )\n    /**\n     * The error state for this component is handled by local state rather than\n     * passed in from formik with props. Formik is overridding the value of the\n     * error when mounting the component and when submitting the form, if we\n     * can stop that behavior, then we could allow formik to control the error\n     * state.\n     */\n    // setErrors(!state.getCurrentContent().hasText() ? 'Required' : null) // disable error handling for this input (not a required input)\n  }\n\n  // Component css styles supplied as theme overrides in Theme.js\n  return (\n    <>\n      <MUIRichTextEditor\n        controls={['numberList', 'bold', 'italic', 'underline', 'undo', 'redo']}\n        defaultValue={props.initialValue}\n        error={errors && props.touched}\n        label={props.placeholder}\n        onBlur={handleBlur}\n        onChange={handleChange}\n        {...props}\n      />\n      {errors && props.touched && <div className={classes.error}>{errors}</div>}\n    </>\n  )\n}\n\nexport default RichEditor\n","import React from 'react'\nimport { Grid, Paper, Typography, makeStyles } from '@material-ui/core'\n\nimport RichEditor from '../RichEditor'\n\nconst useStyles = makeStyles((theme) => ({\n  ingredients: {\n    backgroundColor: '#eee',\n  },\n  ingredientsList: {\n    'listStyle': 'none',\n    'paddingLeft': theme.spacing(2),\n    '& li': {\n      marginBottom: theme.spacing(2),\n    },\n  },\n  ingredientName: {\n    fontSize: theme.typography.subtitle1.fontSize,\n    fontWeight: 'bold',\n  },\n  ingredientDetails: {\n    color: theme.palette.text.secondary,\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n}))\n\nconst RecipeViewer = ({ ingredients, recipe }) => {\n  const classes = useStyles()\n\n  const ingredientLookup = (id) => {\n    return ingredients.find((ingredient) => ingredient._id === id)\n  }\n\n  const getRecipeSubheader = (recipe) => {\n    const parts = []\n    if (recipe.servings)\n      parts.push(\n        <React.Fragment key={1}>\n          <em>Servings: </em>\n          <u>{recipe.servings}</u>\n        </React.Fragment>\n      )\n    parts.push(' | ')\n    if (recipe.prepTime)\n      parts.push(\n        <React.Fragment key={2}>\n          <em>Prep Time: </em>\n          <u>{recipe.prepTime}</u>\n        </React.Fragment>\n      )\n    if (recipe.wwPoints) {\n      parts.push(' | ')\n      parts.push(\n        <React.Fragment key={3}>\n          <em>WW Points: </em>\n          <u>{recipe.wwPoints}</u>\n        </React.Fragment>\n      )\n    }\n    if (recipe.isMeal) {\n      parts.push(' | ')\n      parts.push(\n        <React.Fragment key={4}>\n          <em>Meal Type: </em>\n          <u>{recipe.mealType}</u>\n        </React.Fragment>\n      )\n    }\n    return parts\n  }\n\n  return (\n    recipe && (\n      <Paper className={classes.paper}>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Typography variant='h5'>{recipe.title}</Typography>\n            <Typography variant='subtitle2'>\n              {getRecipeSubheader(recipe)}\n            </Typography>\n          </Grid>\n          <Grid item xs={12} className={classes.ingredients}>\n            <Typography variant='h6'>Ingredients</Typography>\n            <ul className={classes.ingredientsList}>\n              {recipe.ingredients.map((item) => {\n                const ingredient = ingredientLookup(item.id)\n                if (!item.id) return null\n                return (\n                  <li key={item.id}>\n                    <span className={classes.ingredientName}>\n                      {ingredient?.name}\n                    </span>\n                    <br />\n                    <span className={classes.ingredientDetails}>\n                      {`${item.quantity || ''} ${item.unit || ''}`}\n                      {item.notes && `, ${item.notes}`}\n                    </span>\n                  </li>\n                )\n              })}\n            </ul>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography variant='h6'>Directions</Typography>\n            <RichEditor\n              initialValue={recipe?.directions}\n              toolbar={false}\n              readOnly\n            />\n          </Grid>\n          {recipe.notes && (\n            <Grid item xs={12}>\n              <Typography variant='h6'>Notes</Typography>\n              <Typography>{recipe.notes}</Typography>\n            </Grid>\n          )}\n        </Grid>\n      </Paper>\n    )\n  )\n}\n\nexport default RecipeViewer\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Button,\n  Grid,\n  Typography,\n} from '@material-ui/core'\nimport { ExpandMore } from '@material-ui/icons'\n\nimport ListDialog from './Lists/ListDialog'\nimport PageHeader from '../PageHeader'\nimport PlanEditor from './PlanEditor'\nimport PlanViewer from './PlanViewer'\nimport PlansTable from './PlansTable'\nimport RecipeViewer from '../Recipes/RecipeViewer'\nimport Spinner from '../Spinner'\nimport agent from '../../agent'\n\nimport {\n  PLANS_PAGE_LOADED,\n  PLANS_PAGE_UNLOADED,\n  PLAN_VIEW_UNLOADED,\n  RECIPE_VIEW_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  ingredients: state.ingredients.ingredients,\n  pageLoaded: state.plans.pageLoaded,\n  planViewer: state.plans.viewer,\n  recipeViewer: state.recipes.viewer,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: () =>\n    dispatch({\n      type: PLANS_PAGE_LOADED,\n      payload: Promise.all([\n        agent.Plans.getAll(),\n        agent.Meals.getAll(),\n        agent.Recipes.getAll(),\n        agent.Ingredients.getAll(),\n        agent.Categories.getAll(),\n        agent.Stores.getAll(),\n      ]),\n    }),\n  onUnload: () => dispatch({ type: PLANS_PAGE_UNLOADED }),\n  onUnloadPlanView: () => dispatch({ type: PLAN_VIEW_UNLOADED }),\n  onUnloadRecipeView: () => dispatch({ type: RECIPE_VIEW_UNLOADED }),\n})\n\nconst Plans = ({\n  ingredients,\n  onLoad,\n  onUnload,\n  onUnloadPlanView,\n  onUnloadRecipeView,\n  pageLoaded,\n  planViewer,\n  recipeViewer,\n}) => {\n  const [accordionOpen, setAccordionOpen] = useState(false)\n\n  const showPlanView = planViewer.plan && planViewer.type === 'plan'\n  const showRecipeView = !!recipeViewer.recipe\n\n  useEffect(() => {\n    onLoad()\n\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  return (\n    <>\n      <PageHeader\n        title={\n          showRecipeView\n            ? 'View Recipe'\n            : showPlanView\n            ? 'View Plan'\n            : 'Manage Plans'\n        }\n      >\n        {showRecipeView ? (\n          <Button color='secondary' onClick={onUnloadRecipeView}>\n            Back to Plan\n          </Button>\n        ) : showPlanView ? (\n          <Button color='secondary' onClick={onUnloadPlanView}>\n            Manage Plans\n          </Button>\n        ) : (\n          <PlanEditor />\n        )}\n      </PageHeader>\n      {pageLoaded ? (\n        showRecipeView ? (\n          <RecipeViewer\n            ingredients={ingredients}\n            recipe={recipeViewer.recipe}\n          />\n        ) : showPlanView ? (\n          <PlanViewer />\n        ) : (\n          <Grid container spacing={4}>\n            <Grid item xs={12}>\n              <PlansTable filter='unarchived' />\n            </Grid>\n            <Grid item xs={12}>\n              <Typography variant='h5' gutterBottom>\n                Archived Plans\n              </Typography>\n              <Accordion\n                onChange={(ev, expanded) => setAccordionOpen(expanded)}\n              >\n                <AccordionSummary\n                  expandIcon={<ExpandMore />}\n                  aria-controls='archived-content'\n                  id='archived-header'\n                >\n                  <Typography variant='body1'>\n                    Click to {accordionOpen ? 'hide' : 'show'} archived plans\n                  </Typography>\n                </AccordionSummary>\n                <AccordionDetails style={{ display: 'block' }}>\n                  <PlansTable filter='archived' />\n                </AccordionDetails>\n              </Accordion>\n            </Grid>\n          </Grid>\n        )\n      ) : (\n        <Spinner />\n      )}\n      <ListDialog />\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Plans)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Route, Redirect } from 'react-router-dom'\n\nconst mapStateToProps = (state) => ({ currentUser: state.common.currentUser })\n\nconst ProtectedRoute = (props) => {\n  if (!props.currentUser) {\n    return <Redirect to='/' />\n  }\n\n  return <Route exact path={props.path} component={props.component} />\n}\n\nexport default connect(mapStateToProps, () => ({}))(ProtectedRoute)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Autocomplete, createFilterOptions } from '@material-ui/lab'\nimport { TextField } from '@material-ui/core'\nimport parse from 'autosuggest-highlight/parse'\nimport match from 'autosuggest-highlight/match'\n\nimport IngredientDialog from '../Ingredients/IngredientDialog'\n\nimport { RECIPE_INGREDIENT_ONBLUR } from '../../constants/actionTypes'\n\nconst filter = createFilterOptions()\n\nconst mapStateToProps = (state) => ({\n  editor: state.recipes.editor,\n  ingredients: state.ingredients.ingredients,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  // onBlur clears the newly-added ingredient from editor state so it is not used again when adding a new ingredient row\n  onBlur: () => dispatch({ type: RECIPE_INGREDIENT_ONBLUR }),\n})\n\nconst IngredientSelector = ({\n  editor,\n  ingredients,\n  onBlur,\n  onChange,\n  value,\n}) => {\n  const [newIngredient, setNewIngredient] = useState(null)\n  const [options, setOptions] = useState([])\n  const [selected, setSelected] = useState(value ?? null)\n\n  // Used for grouping ingredients in the selector dropdown\n  const mappedOptions = ingredients.map((ingredient) => {\n    const firstLetter = ingredient.name[0].toUpperCase()\n    return {\n      firstLetter: /[0-9]/.test(firstLetter) ? '0-9' : firstLetter,\n      ...ingredient,\n    }\n  })\n\n  const handleChange = (e, value) => {\n    // This conditional prevents an issue with Autocomplete changing the value prop from an object-type to a string-type when autoSelect is true\n    if (typeof value !== 'string') {\n      setSelected(value)\n      onChange(e, value)\n    }\n    onBlur()\n  }\n\n  const handleDialogClose = () => {\n    // Clear the new ingredient if ingredient dialog closed to allow the dialog to be opened again\n    setNewIngredient(null)\n  }\n\n  useEffect(() => {\n    // Update the options in the Autocomplete when a new ingredient is created\n    setOptions(mappedOptions)\n  }, [ingredients])\n\n  useEffect(() => {\n    // Update input selection with ingredient object when a new ingredient is created\n    if (editor.ingredient) {\n      setSelected(editor.ingredient)\n      onChange({}, editor.ingredient)\n      onBlur()\n    }\n  }, [editor.ingredient])\n\n  // @todo material-table is not stopping enter key propogation causing row action to occur unexpectedly\n  //         and MaterialTableFix prevents the whole row from being editable\n  const handleKey = (e) => {\n    if (e.key === 'Enter') e.stopPropagation()\n  }\n\n  return (\n    <>\n      <Autocomplete\n        autoHighlight\n        autoSelect\n        freeSolo\n        options={options}\n        value={selected}\n        filterOptions={(options, params) => {\n          const filtered = filter(options, params)\n          if (params.inputValue !== '')\n            filtered.push({\n              inputValue: params.inputValue,\n              name: `Add \"${params.inputValue}\"`,\n            })\n          return filtered\n        }}\n        getOptionLabel={(option) => {\n          if (typeof option === 'string') return option\n          if (option.inputValue) return option.inputValue\n          return option.name\n        }}\n        getOptionSelected={(option, value) => option._id === value?._id}\n        groupBy={(option) => option.firstLetter}\n        onKeyDown={(e) => handleKey(e)}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            autoFocus\n            label='Ingredient name'\n            variant='outlined'\n          />\n        )}\n        onBlur={onBlur}\n        onChange={(e, value) => {\n          if (value && value.inputValue)\n            setNewIngredient({ name: value.inputValue })\n          handleChange(e, value)\n        }}\n        renderOption={(option, { inputValue }) => {\n          const matches = match(option.name, inputValue)\n          const parts = parse(option.name, matches)\n          return (\n            <div>\n              {parts.map((part, index) => (\n                <span\n                  key={index}\n                  style={{ fontWeight: part.highlight ? 700 : 400 }}\n                >\n                  {part.text}\n                </span>\n              ))}\n            </div>\n          )\n        }}\n      />\n      <IngredientDialog\n        hideButton\n        ingredient={newIngredient}\n        isOpen={!!newIngredient}\n        onClose={handleDialogClose}\n      />\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IngredientSelector)\n","const UNIT_TYPES = [\n  ['count', 'ct', 0],\n  ['cup', 'c', 0],\n  ['dash', 'dsh', 0],\n  ['fluid ounce', 'fl oz', 0],\n  ['gram', 'g', 0],\n  ['milliliter', 'mL', 0],\n  ['ounce', 'oz', 0],\n  ['package', 'pkg', 0],\n  ['piece', 'piece', 0],\n  ['pinch', 'pnch', 0],\n  ['pint', 'pt', 0],\n  ['pound', 'lb', 0],\n  ['quart', 'qt', 0],\n  ['slice', 'slc', 0],\n  ['spray', 'spray', 0],\n  ['tablespoon', 'tbsp', 0],\n  ['teaspoon', 'tsp', 0],\n]\n\nconst MakeUnit = (name, abbr, conv) => ({ name, abbr, conv })\n\nconst getUnits = () => UNIT_TYPES.map((unit) => MakeUnit(...unit))\n\nexport const UNITS = getUnits()\n","import React, { useEffect, useState } from 'react'\nimport MaterialTable from '@material-table/core'\n\nimport IngredientSelector from './IngredientSelector'\n\nimport { UNITS } from '../../constants/units'\n\nconst RecipeIngredientEditor = ({ ingredients, ingredientsList, onChange }) => {\n  const [columns, setColumns] = useState([])\n  const [data, setData] = useState([])\n\n  const getColumns = () => [\n    {\n      title: 'Name',\n      field: 'id',\n      lookup: ingredientsList.reduce(\n        (obj, item) => ((obj[item._id] = item.name), obj),\n        {}\n      ),\n      editComponent: (props) => (\n        <IngredientSelector\n          onChange={(e, value) => props.onChange(value?._id)}\n          value={ingredientsList.find(\n            (ingredient) => ingredient._id === props.value\n          )}\n        />\n      ),\n    },\n    { title: 'Quantity', field: 'quantity' },\n    {\n      title: 'Unit',\n      field: 'unit',\n      lookup: UNITS.reduce(\n        (obj, item) => ((obj[item.abbr] = `${item.name}s (${item.abbr})`), obj),\n        {}\n      ),\n    },\n    {\n      title: 'Notes',\n      field: 'notes',\n    },\n  ]\n\n  useEffect(() => {\n    // Refresh the columns when adding a new ingredient to update the IngredientSelector component\n    setColumns(getColumns())\n  }, [ingredientsList])\n\n  useEffect(() => {\n    setData(ingredients)\n  }, [ingredients])\n\n  return (\n    <MaterialTable\n      title='Ingredients'\n      columns={columns}\n      data={data}\n      localization={{\n        body: {\n          emptyDataSourceMessage: 'No ingredients have been added',\n          editRow: {\n            deleteText: 'Remove ingredient from this recipe?',\n          },\n        },\n      }}\n      options={{ actionsColumnIndex: -1, paging: false, search: false }}\n      editable={{\n        onRowAdd: (newData) =>\n          new Promise((resolve, reject) => {\n            setData([...data, newData])\n            onChange([...data, newData])\n            resolve()\n          }),\n        onRowUpdate: (newData, oldData) =>\n          new Promise((resolve, reject) => {\n            const dataUpdate = [...data]\n            const index = oldData.tableData.id\n            dataUpdate[index] = newData\n            setData([...dataUpdate])\n            onChange([...dataUpdate])\n            resolve()\n          }),\n        onRowDelete: (oldData) =>\n          new Promise((resolve, reject) => {\n            const newData = [...data]\n            const index = oldData.tableData.id\n            newData.splice(index, 1)\n            setData([...newData])\n            onChange([...newData])\n            resolve()\n          }),\n      }}\n    />\n  )\n}\n\nexport default RecipeIngredientEditor\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field, useFormikContext } from 'formik'\nimport { CheckboxWithLabel, TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Container,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  MenuItem,\n  Typography,\n} from '@material-ui/core'\n\nimport FabAdd from '../FabAdd'\nimport ListErrors from '../ListErrors'\nimport RecipeIngredientsEditor from './RecipeIngredientsEditor'\nimport RichEditor from '../RichEditor'\n\nimport {\n  ADD_RECIPE,\n  RECIPE_DIALOG_UNLOADED,\n  UPDATE_RECIPE,\n} from '../../constants/actionTypes'\nimport { MEAL_TYPES } from '../../constants/mealTypes'\nimport agent from '../../agent'\n\nconst mapStateToProps = (state) => ({\n  ...state.recipes,\n  ingredients: state.ingredients.ingredients,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAdd: (recipe) =>\n    dispatch({\n      type: ADD_RECIPE,\n      payload: agent.Recipes.add(recipe),\n      snackbar: { message: 'Recipe added', variant: 'success' },\n    }),\n  onExit: () => dispatch({ type: RECIPE_DIALOG_UNLOADED }),\n  onUpdate: (recipe) =>\n    dispatch({\n      type: UPDATE_RECIPE,\n      payload: agent.Recipes.update(recipe),\n      snackbar: { message: 'Recipe updated', variant: 'success' },\n    }),\n})\n\nconst HandleIsMealChange = () => {\n  const { values, setFieldValue } = useFormikContext()\n  useEffect(() => {\n    if (!values.isMeal) setFieldValue('mealType', '')\n  }, [values])\n  return null\n}\n\nconst RecipeEditor = ({\n  editor,\n  errors,\n  ingredients,\n  inProgress,\n  onAdd,\n  onExit,\n  onUpdate,\n}) => {\n  const [open, setOpen] = useState(false)\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmitAdd = (values) => {\n    onAdd({ ...values })\n  }\n\n  const handleSubmitUpdate = (values) => {\n    onUpdate({ ...editor.recipe, ...values })\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) setOpen(false)\n  }, [inProgress])\n\n  useEffect(() => {\n    // Open the dialog if an editor.recipe object is defined\n    setOpen(!!editor.recipe)\n  }, [editor.recipe])\n\n  return (\n    <>\n      <FabAdd item='recipe' onClick={handleClickOpen} />\n\n      <Dialog\n        fullScreen\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onFocus={(ev) => ev.stopPropagation()}\n        open={open}\n        TransitionProps={{\n          onExit: onExit,\n        }}\n      >\n        <Formik\n          initialValues={{\n            directions: editor.recipe?.directions || '',\n            ingredients: editor.recipe?.ingredients || [],\n            isMeal: editor.recipe?.isMeal || false,\n            mealType: editor.recipe?.mealType || '',\n            notes: editor.recipe?.notes || '',\n            prepTime: editor.recipe?.prepTime || '',\n            servings: editor.recipe?.servings || '',\n            title: editor.recipe?.title || '',\n            wwPoints: editor.recipe?.wwPoints || '',\n          }}\n          validationSchema={Yup.object({\n            directions: Yup.string().required('Required'),\n            ingredients: Yup.array(),\n            isMeal: Yup.boolean(),\n            mealType: Yup.string(),\n            notes: Yup.string(),\n            prepTime: Yup.number().required('Required'),\n            servings: Yup.number().required('Required'),\n            title: Yup.string().required('Required'),\n            wwPoints: Yup.number(),\n          })}\n          onSubmit={async (values) => {\n            editor.recipe ? handleSubmitUpdate(values) : handleSubmitAdd(values)\n          }}\n        >\n          {(formik) => (\n            <Container disableGutters>\n              <Form>\n                <DialogTitle>\n                  {editor.recipe ? 'Update recipe' : 'Add recipe'}\n                </DialogTitle>\n                <DialogContent>\n                  <ListErrors errors={errors} />\n                  <Grid container spacing={2}>\n                    <Grid item xs={12} md={6}>\n                      <Field\n                        autoFocus={!editor.recipe}\n                        component={TextField}\n                        disabled={inProgress}\n                        id='title'\n                        label='Recipe Title'\n                        name='title'\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={6} md={3}>\n                      <Field\n                        component={CheckboxWithLabel}\n                        disabled={inProgress}\n                        type='checkbox'\n                        name='isMeal'\n                        Label={{ label: 'This recipe is a meal' }}\n                      />\n                      <HandleIsMealChange />\n                    </Grid>\n                    <Grid item xs={6} md={3}>\n                      {formik.values.isMeal && (\n                        <Field\n                          component={TextField}\n                          disabled={inProgress}\n                          id='mealType'\n                          label='Meal Type'\n                          name='mealType'\n                          type='select'\n                          select\n                          fullWidth\n                        >\n                          {MEAL_TYPES.map((name) => {\n                            const value = name.toLowerCase()\n                            return (\n                              <MenuItem key={value} value={value}>\n                                {name}\n                              </MenuItem>\n                            )\n                          })}\n                        </Field>\n                      )}\n                    </Grid>\n                    <Grid item xs={12} md={4}>\n                      <Field\n                        component={TextField}\n                        disabled={inProgress}\n                        id='servings'\n                        label='Servings'\n                        name='servings'\n                        type='number'\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={12} md={4}>\n                      <Field\n                        component={TextField}\n                        disabled={inProgress}\n                        id='prepTime'\n                        label='Prep Time (minutes)'\n                        name='prepTime'\n                        type='number'\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={12} md={4}>\n                      <Field\n                        component={TextField}\n                        disabled={inProgress}\n                        id='wwPoints'\n                        label='WW Points'\n                        name='wwPoints'\n                        type='number'\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <Field\n                        component={TextField}\n                        disabled={inProgress}\n                        id='notes'\n                        label='Notes'\n                        name='notes'\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <RecipeIngredientsEditor\n                        ingredients={formik.values.ingredients}\n                        ingredientsList={ingredients}\n                        onChange={(ingredients) => {\n                          formik.setFieldValue('ingredients', ingredients)\n                        }}\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <Typography variant='h6'>Directions</Typography>\n                      <RichEditor\n                        errors={formik.errors.directions}\n                        initialValue={editor.recipe?.directions}\n                        name='directions'\n                        onEditorBlur={formik.setFieldTouched}\n                        onEditorChange={formik.setFieldValue}\n                        // onErrorChange={formik.setFieldError} // @todo: setFieldError is overridden by some internal formik function, so errors are handled by the component\n                        placeholder='Enter recipe directions here...'\n                        touched={formik.touched.directions}\n                      />\n                    </Grid>\n                  </Grid>\n                </DialogContent>\n                <DialogActions>\n                  <Button\n                    color='primary'\n                    disabled={inProgress}\n                    type='submit'\n                    variant='contained'\n                  >\n                    {editor.recipe\n                      ? inProgress\n                        ? 'Updating...'\n                        : 'Update'\n                      : inProgress\n                      ? 'Adding...'\n                      : 'Add'}\n                  </Button>\n                  <Button\n                    disabled={inProgress}\n                    onClick={handleClose}\n                    variant='contained'\n                  >\n                    Cancel\n                  </Button>\n                </DialogActions>\n              </Form>\n            </Container>\n          )}\n        </Formik>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RecipeEditor)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport MaterialTable from '@material-table/core'\n\nimport agent from '../../agent'\n\nimport {\n  DELETE_RECIPE,\n  DELETE_RECIPES,\n  RECIPE_DIALOG_LOADED,\n  RECIPE_VIEW_LOADED,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  recipes: state.recipes.recipes,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (recipe) =>\n    dispatch({\n      type: DELETE_RECIPE,\n      payload: agent.Recipes.delete(recipe),\n      snackbar: { message: 'Recipe deleted', variant: 'success' },\n    }),\n  onDeleteMany: (slugs) =>\n    dispatch({\n      type: DELETE_RECIPES,\n      payload: agent.Recipes.deleteMany(slugs),\n      snackbar: {\n        message: `${slugs.length} recipe${slugs.length > 1 ? 's' : ''} deleted`,\n        variant: 'success',\n      },\n    }),\n  onLoadUpdate: (recipe) => dispatch({ type: RECIPE_DIALOG_LOADED, recipe }),\n  onLoadView: (recipe) => dispatch({ type: RECIPE_VIEW_LOADED, recipe }),\n})\n\nconst RecipesTable = ({\n  onDelete,\n  onDeleteMany,\n  onLoadUpdate,\n  onLoadView,\n  recipes,\n}) => {\n  const [data, setData] = useState([])\n\n  const [columns] = useState([\n    { title: 'Title', field: 'title' },\n    { title: 'Prep Time (min)', field: 'prepTime' },\n    { title: 'Servings', field: 'servings' },\n    { title: 'WW Points', field: 'wwPoints' },\n    { title: 'Meal Type', field: 'mealType' },\n    { title: 'Notes', field: 'notes' },\n  ])\n\n  const handleDeleteManyClick = (data) => {\n    const slugs = data.map((row) => row.slug)\n    onDeleteMany(slugs)\n  }\n\n  const handleLoadUpdateClick = (recipe) => {\n    onLoadUpdate(recipe)\n  }\n\n  const handleLoadViewClick = (recipe) => {\n    onLoadView(recipe)\n  }\n\n  useEffect(() => {\n    setData(recipes)\n  }, [recipes])\n\n  return (\n    <MaterialTable\n      title='Recipes'\n      columns={columns}\n      data={data}\n      localization={{\n        body: {\n          emptyDataSourceMessage: 'No recipes found',\n          editRow: {\n            deleteText: 'Delete recipe? This action cannot be undone.',\n          },\n        },\n      }}\n      options={{\n        actionsColumnIndex: -1,\n        paging: false,\n        selection: true,\n        toolbar: true,\n      }}\n      actions={[\n        {\n          icon: 'visibility',\n          onClick: (e, data) => handleLoadViewClick(data),\n          position: 'row',\n          tooltip: 'View recipe',\n        },\n        {\n          icon: 'edit',\n          onClick: (e, data) => handleLoadUpdateClick(data),\n          position: 'row',\n          tooltip: 'Update recipe',\n        },\n        {\n          icon: 'delete',\n          onClick: (e, data) => handleDeleteManyClick(data),\n          position: 'toolbarOnSelect',\n          tooltip: 'Delete all selected recipes',\n        },\n      ]}\n      editable={{\n        onRowDelete: (oldData) =>\n          new Promise((resolve, reject) => {\n            const newData = [...data]\n            const index = oldData.tableData.id\n            newData.splice(index, 1)\n            setData([...newData])\n            onDelete(oldData)\n            resolve()\n          }),\n      }}\n    />\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RecipesTable)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Button } from '@material-ui/core'\n\nimport PageHeader from '../PageHeader'\nimport RecipeEditor from './RecipeEditor'\nimport RecipeViewer from './RecipeViewer'\nimport RecipesTable from './RecipesTable'\nimport Spinner from '../Spinner'\nimport agent from '../../agent'\n\nimport {\n  RECIPES_PAGE_LOADED,\n  RECIPES_PAGE_UNLOADED,\n  RECIPE_VIEW_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  ingredients: state.ingredients.ingredients,\n  pageLoaded: state.recipes.pageLoaded,\n  viewer: state.recipes.viewer,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: () =>\n    dispatch({\n      type: RECIPES_PAGE_LOADED,\n      payload: Promise.all([\n        agent.Recipes.getAll(),\n        agent.Ingredients.getAll(),\n        agent.Categories.getAll(),\n      ]),\n    }),\n  onUnload: () => dispatch({ type: RECIPES_PAGE_UNLOADED }),\n  onUnloadView: () => dispatch({ type: RECIPE_VIEW_UNLOADED }),\n})\n\nconst Recipes = ({\n  ingredients,\n  onLoad,\n  onUnload,\n  onUnloadView,\n  pageLoaded,\n  viewer,\n}) => {\n  useEffect(() => {\n    onLoad()\n\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  return (\n    <>\n      <PageHeader title={viewer.recipe ? 'View Recipe' : 'Manage Recipes'}>\n        {viewer.recipe ? (\n          <Button color='secondary' onClick={onUnloadView}>\n            Manage recipes\n          </Button>\n        ) : (\n          <RecipeEditor />\n        )}\n      </PageHeader>\n      {pageLoaded ? (\n        viewer.recipe ? (\n          <RecipeViewer ingredients={ingredients} recipe={viewer.recipe} />\n        ) : (\n          <RecipesTable />\n        )\n      ) : (\n        <Spinner />\n      )}\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Recipes)\n","import React from 'react'\nimport { Draggable } from 'react-beautiful-dnd'\nimport { Chip, Paper, useTheme } from '@material-ui/core'\n\nconst CategoryDraggable = ({ category, index }) => {\n  const theme = useTheme()\n\n  const getStyle = (isDragging, draggableStyle) => ({\n    background: isDragging ? theme.palette.secondary.light : 'white',\n    marginBottom: theme.spacing(1),\n    padding: theme.spacing(2),\n    userSelect: 'none',\n    ...draggableStyle,\n  })\n\n  return (\n    <Draggable draggableId={category.slug} index={index} key={category.slug}>\n      {(provided, snapshot) => (\n        <Paper\n          elevation={3}\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          style={getStyle(snapshot.isDragging, provided.draggableProps.style)}\n        >\n          {category.name}{' '}\n          {category.isNew && (\n            <Chip\n              color='secondary'\n              label='new'\n              size='small'\n              style={{ color: 'white', fontStyle: 'italic' }}\n            />\n          )}\n        </Paper>\n      )}\n    </Draggable>\n  )\n}\n\nexport default CategoryDraggable\n","import React from 'react'\nimport { Droppable } from 'react-beautiful-dnd'\nimport { useMediaQuery, useTheme } from '@material-ui/core'\n\nimport CategoryDraggable from './CategoryDraggable'\n\nconst CategoryDroppable = ({ categories }) => {\n  const theme = useTheme()\n  const fullWidth = useMediaQuery(theme.breakpoints.down('md'))\n\n  const getStyle = (isDraggingOver) => ({\n    border: isDraggingOver\n      ? `2px dashed ${theme.palette.primary.light}`\n      : '2px solid white',\n    minHeight: '120px',\n    padding: theme.spacing(1),\n    width: fullWidth ? '100%' : '50%',\n  })\n\n  return (\n    <Droppable droppableId='categories'>\n      {(provided, snapshot) => (\n        <div\n          {...provided.droppableProps}\n          ref={provided.innerRef}\n          style={getStyle(snapshot.isDraggingOver)}\n        >\n          {categories.map((category, index) => (\n            <CategoryDraggable\n              category={category}\n              index={index}\n              key={category.slug}\n            />\n          ))}\n          {provided.placeholder}\n        </div>\n      )}\n    </Droppable>\n  )\n}\n\nexport default CategoryDroppable\n","import React, { useState } from 'react'\nimport { DragDropContext } from 'react-beautiful-dnd'\n\nimport CategoryDroppable from './CategoryDroppable'\n\nconst CategorySorter = ({ categories, name, onChange }) => {\n  const [list, setList] = useState(categories)\n\n  const onDragEnd = (result) => {\n    const { destination, source, draggableId } = result\n\n    if (!destination || destination.index === source.index) return\n\n    const category = categories.find(\n      (category) => category.slug === draggableId\n    )\n    const newList = [...list]\n    newList.splice(source.index, 1)\n    newList.splice(destination.index, 0, category)\n\n    setList(newList)\n    onChange(name, newList)\n    return\n  }\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <CategoryDroppable categories={list} />\n    </DragDropContext>\n  )\n}\n\nexport default CategorySorter\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Container,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  Typography,\n} from '@material-ui/core'\n\nimport CategorySorter from './CategorySorter/CategorySorter'\nimport ListErrors from '../ListErrors'\n\nimport {\n  ADD_STORE,\n  STORE_DIALOG_UNLOADED,\n  UPDATE_STORE,\n} from '../../constants/actionTypes'\nimport agent from '../../agent'\n\nconst mapStateToProps = (state) => ({\n  ...state.stores,\n  categories: state.categories.categories,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAdd: (store) =>\n    dispatch({\n      type: ADD_STORE,\n      payload: agent.Stores.add(store),\n      snackbar: { message: 'Store added', variant: 'success' },\n    }),\n  onExit: () => dispatch({ type: STORE_DIALOG_UNLOADED }),\n  onUpdate: (store) =>\n    dispatch({\n      type: UPDATE_STORE,\n      payload: agent.Stores.update(store),\n      snackbar: { message: 'Store updated', variant: 'success' },\n    }),\n})\n\nconst StoreDialog = ({\n  categories,\n  editor,\n  errors,\n  inProgress,\n  onAdd,\n  onExit,\n  onUpdate,\n}) => {\n  const [open, setOpen] = useState(false)\n\n  const isUpdate = !!editor.store?.name\n\n  const getCategories = () => {\n    if (!editor.store?.categories) return categories\n\n    let allCategories = [...editor.store.categories]\n    categories.forEach((category) => {\n      if (!allCategories.find((cat) => cat._id === category._id)) {\n        allCategories.push({ ...category, isNew: true })\n      }\n    })\n    return allCategories\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmitAdd = (values) => {\n    onAdd({ ...values })\n  }\n\n  const handleSubmitUpdate = (values) => {\n    onUpdate({ ...editor.store, ...values })\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) setOpen(false)\n  }, [inProgress])\n\n  useEffect(() => {\n    // Open the dialog if an editor.store object is defined\n    setOpen(!!editor.store)\n  }, [editor.store])\n\n  return (\n    <Dialog\n      fullScreen\n      onClick={(ev) => ev.stopPropagation()}\n      onClose={handleClose}\n      onFocus={(ev) => ev.stopPropagation()}\n      open={open}\n      TransitionProps={{\n        onExit: onExit,\n      }}\n    >\n      <Formik\n        initialValues={{\n          categories: getCategories(),\n          name: editor.store?.name || '',\n          notes: editor.store?.notes || '',\n        }}\n        validationSchema={Yup.object({\n          categories: Yup.array(),\n          name: Yup.string().required('Required'),\n          notes: Yup.string(),\n        })}\n        onSubmit={async (values) => {\n          isUpdate ? handleSubmitUpdate(values) : handleSubmitAdd(values)\n        }}\n      >\n        {(formik) => (\n          <Container disableGutters>\n            <Form>\n              <DialogTitle>\n                {isUpdate ? 'Update store' : 'Add store'}\n              </DialogTitle>\n              <DialogContent>\n                <ListErrors errors={errors} />\n                <Grid container spacing={2}>\n                  <Grid item xs={12}>\n                    <Field\n                      autoFocus={!isUpdate}\n                      component={TextField}\n                      disabled={inProgress}\n                      id='name'\n                      label='Store Name'\n                      name='name'\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Field\n                      component={TextField}\n                      disabled={inProgress}\n                      id='notes'\n                      label='Store Notes'\n                      name='notes'\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Typography variant='h6'>Categories</Typography>\n                    <CategorySorter\n                      categories={formik.values.categories}\n                      name='categories'\n                      onChange={formik.setFieldValue}\n                    />\n                  </Grid>\n                </Grid>\n              </DialogContent>\n              <DialogActions>\n                <Button\n                  color='primary'\n                  disabled={inProgress}\n                  type='submit'\n                  variant='contained'\n                >\n                  {isUpdate\n                    ? inProgress\n                      ? 'Updating...'\n                      : 'Update'\n                    : inProgress\n                    ? 'Adding...'\n                    : 'Add'}\n                </Button>\n                <Button\n                  disabled={inProgress}\n                  onClick={handleClose}\n                  variant='contained'\n                >\n                  Cancel\n                </Button>\n              </DialogActions>\n            </Form>\n          </Container>\n        )}\n      </Formik>\n    </Dialog>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StoreDialog)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport MaterialTable from '@material-table/core'\nimport { AddBox, StarBorder } from '@material-ui/icons'\n\nimport StoreDialog from './StoreDialog'\n\nimport {\n  DELETE_STORE,\n  SET_DEFAULT_STORE,\n  STORE_DIALOG_LOADED,\n} from '../../constants/actionTypes'\nimport agent from '../../agent'\n\nconst mapStateToProps = (state) => ({\n  defaultStore: state.common.settings.defaultStore,\n  stores: state.stores.stores,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (store) =>\n    dispatch({\n      type: DELETE_STORE,\n      payload: agent.Stores.delete(store),\n      snackbar: { message: 'Store deleted', variant: 'success' },\n    }),\n  onLoadUpdate: (store) => dispatch({ type: STORE_DIALOG_LOADED, store }),\n  onSetDefault: (settings) =>\n    dispatch({\n      type: SET_DEFAULT_STORE,\n      payload: agent.Settings.update(settings),\n      snackbar: { message: 'Default store saved', variant: 'success' },\n    }),\n})\n\nconst StoresTable = ({\n  defaultStore,\n  onDelete,\n  onLoadUpdate,\n  onSetDefault,\n  stores,\n}) => {\n  const [data, setData] = useState([])\n\n  const [columns] = useState([\n    { title: 'Name', field: 'name' },\n    { title: 'Notes', field: 'notes' },\n  ])\n\n  const handleLoadUpdateClick = (store) => {\n    onLoadUpdate(store)\n  }\n\n  const handleSetDefaultClick = (store) => {\n    const settings = { defaultStore: store }\n    onSetDefault(settings)\n  }\n\n  useEffect(() => {\n    setData(stores)\n  }, [stores])\n\n  return (\n    <>\n      <StoreDialog />\n      <MaterialTable\n        title='Manage Stores'\n        columns={columns}\n        data={data}\n        localization={{\n          body: {\n            emptyDataSourceMessage: 'No stores found',\n            editRow: {\n              deleteText: 'Delete store? This action cannot be undone.',\n            },\n          },\n        }}\n        actions={[\n          {\n            action: (rowData) => ({\n              icon:\n                rowData._id === defaultStore ? 'star' : () => <StarBorder />,\n              onClick: (e, data) => handleSetDefaultClick(data),\n              position: 'row',\n              tooltip:\n                rowData._id === defaultStore\n                  ? 'Default store'\n                  : 'Set as default store',\n            }),\n          },\n          {\n            action: (rowData) => ({\n              icon: 'edit',\n              onClick: (e, data) => handleLoadUpdateClick(data),\n              position: 'row',\n              tooltip: 'Update store',\n            }),\n          },\n          {\n            icon: () => <AddBox />,\n            isFreeAction: true,\n            onClick: () => handleLoadUpdateClick({}),\n            position: 'toolbar',\n            tooltip: 'Add store',\n          },\n        ]}\n        options={{\n          actionsColumnIndex: -1,\n          paging: false,\n          toolbar: true,\n        }}\n        editable={{\n          onRowDelete: (oldData) =>\n            new Promise((resolve, reject) => {\n              const newData = [...data]\n              const index = oldData.tableData.id\n              newData.splice(index, 1)\n              setData([...newData])\n              onDelete(oldData)\n              resolve()\n            }),\n        }}\n        style={{ boxShadow: 'none' }}\n      />\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StoresTable)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport Spinner from '../Spinner'\nimport StoresTable from './StoresTable'\n\nimport {\n  STORES_PAGE_LOADED,\n  STORES_PAGE_UNLOADED,\n} from '../../constants/actionTypes'\nimport agent from '../../agent'\n\nconst mapStateToProps = (state) => ({\n  ...state.stores,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: () =>\n    dispatch({\n      type: STORES_PAGE_LOADED,\n      payload: Promise.all([agent.Stores.getAll(), agent.Categories.getAll()]),\n    }),\n  onUnload: () => dispatch({ type: STORES_PAGE_UNLOADED }),\n})\n\nconst Stores = ({ onLoad, onUnload, pageLoaded }) => {\n  useEffect(() => {\n    onLoad()\n\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  return <>{pageLoaded ? <StoresTable /> : <Spinner />}</>\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Stores)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport { Fab, Grid, Paper, Typography, makeStyles } from '@material-ui/core'\nimport { SaveAlt } from '@material-ui/icons'\n\nimport ListErrors from './ListErrors'\nimport PageHeader from './PageHeader'\nimport Stores from './Stores/Stores'\nimport agent from '../agent'\n\nimport {\n  SETTINGS_PAGE_UNLOADED,\n  SETTINGS_SAVED,\n} from '../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(4),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.settings,\n  currentUser: state.common.currentUser,\n  settings: state.common.settings,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmitForm: (settings) =>\n    dispatch({\n      type: SETTINGS_SAVED,\n      payload: Promise.all([\n        agent.Auth.save(settings),\n        agent.Settings.update(settings),\n      ]),\n      snackbar: { message: 'Settings saved', variant: 'success' },\n    }),\n  onUnload: () => dispatch({ type: SETTINGS_PAGE_UNLOADED }),\n})\n\nconst Settings = ({\n  currentUser,\n  errors,\n  inProgress,\n  onSubmitForm,\n  onUnload,\n  settings,\n}) => {\n  const classes = useStyles()\n\n  useEffect(() => {\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  return (\n    <Formik\n      enableReinitialize={true}\n      initialValues={{\n        firstName: currentUser.firstName,\n        lastName: currentUser.lastName,\n        password: '',\n      }}\n      validationSchema={Yup.object({\n        firstName: Yup.string(),\n        lastName: Yup.string(),\n        password: Yup.string(),\n      })}\n      onSubmit={async (values, form) => {\n        const userSettings = { ...values }\n\n        if (!userSettings.password) delete userSettings.password\n\n        onSubmitForm(userSettings)\n\n        form.resetForm({\n          values: { ...userSettings, password: '' },\n        })\n      }}\n    >\n      <Form>\n        <PageHeader title='Manage Account'>\n          <Fab\n            color='primary'\n            disabled={inProgress}\n            type='sumbit'\n            variant='extended'\n          >\n            <SaveAlt className={classes.icon} />\n            {inProgress ? 'Saving...' : 'Save settings'}\n          </Fab>\n        </PageHeader>\n        <ListErrors errors={errors} />\n\n        {currentUser.role !== 'admin' && (\n          <Paper className={classes.paper}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <Stores />\n              </Grid>\n            </Grid>\n          </Paper>\n        )}\n\n        {/* <Paper className={classes.paper}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Typography variant='h5' gutterBottom>\n                Linked Accounts\n              </Typography>\n            </Grid>\n          </Grid>\n        </Paper> */}\n\n        <Paper className={classes.paper}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Typography variant='h5' gutterBottom>\n                Account Details\n              </Typography>\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <Field\n                component={TextField}\n                label='First name'\n                name='firstName'\n                type='text'\n                variant='outlined'\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <Field\n                component={TextField}\n                label='Last name'\n                name='lastName'\n                type='text'\n                variant='outlined'\n                fullWidth\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n\n        <Paper className={classes.paper}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Typography variant='h5' gutterBottom>\n                Account Security\n              </Typography>\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <Field\n                component={TextField}\n                label='New password'\n                name='password'\n                type='password'\n                variant='outlined'\n                fullWidth\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n      </Form>\n    </Formik>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport { Container } from '@material-ui/core'\n\nimport Categories from './Categories/Categories'\nimport Header from './Header'\nimport Ingredients from './Ingredients/Ingredients'\nimport ManageUsers from './Admin/ManageUsers'\nimport Meals from './Meals/Meals'\nimport Navigation from './Navigation'\nimport NotFound from './NotFound'\nimport PageWrapper from './PageWrapper'\nimport Plans from './Plans/Plans'\nimport ProtectedRoute from './ProtectedRoute'\nimport Recipes from './Recipes/Recipes'\nimport Settings from './Settings'\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.common.currentUser,\n})\n\nconst Home = ({ currentUser }) => {\n  if (!currentUser) return <Redirect to='/login' />\n\n  return (\n    <>\n      <Header currentUser={currentUser} />\n      <PageWrapper>\n        <Container>\n          <Switch>\n            <ProtectedRoute component={Plans} path='/plans' />\n            <ProtectedRoute component={Meals} path='/meals' />\n            <ProtectedRoute component={Recipes} path='/recipes' />\n\n            <ProtectedRoute\n              component={Categories}\n              path='/ingredients/categories'\n            />\n            <ProtectedRoute component={Ingredients} path='/ingredients' />\n\n            <ProtectedRoute component={Settings} path='/settings' />\n            <ProtectedRoute component={ManageUsers} path='/users' />\n\n            <Route component={NotFound} />\n          </Switch>\n        </Container>\n        <Navigation />\n      </PageWrapper>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, null)(Home)\n","import React from 'react'\nimport { Paper, Typography, makeStyles } from '@material-ui/core'\nimport Div100vh from 'react-div-100vh'\n\nimport Logo from './Logo'\nimport background from './../images/plate-background.png'\n\nconst useStyles = makeStyles((theme) => ({\n  background: {\n    alignItems: 'center',\n    backgroundImage: `url(${background})`,\n    backgroundSize: 'cover',\n    display: 'flex',\n    height: '100%',\n    justifyContent: 'center',\n  },\n  logo: {\n    marginBottom: theme.spacing(4),\n    width: 160,\n  },\n  panel: {\n    alignItems: 'center',\n    borderRadius: '1rem',\n    display: 'flex',\n    flexFlow: 'column nowrap',\n    overflowY: 'scroll',\n    padding: '2rem 4rem',\n    position: 'relative',\n  },\n  text: {\n    color: theme.palette.primary.main,\n    fontStyle: 'italic',\n  },\n}))\n\nconst Loading = (props) => {\n  const classes = useStyles()\n\n  return (\n    <Div100vh className={classes.background}>\n      <Paper elevation={12} className={classes.panel}>\n        <Logo className={classes.logo} />\n        <Typography className={classes.text} variant='h4'>\n          Loading...\n        </Typography>\n      </Paper>\n    </Div100vh>\n  )\n}\n\nexport default Loading\n","import React from 'react'\nimport { Grid, Link, Typography, makeStyles } from '@material-ui/core'\n\nimport profile from '../images/doc-may-profile.jpg'\n\nconst useStyles = makeStyles((theme) => ({\n  page: {\n    '& p:not(:last-of-type)': {\n      marginBottom: theme.spacing(2),\n    },\n  },\n  profile: {\n    borderRadius: '100%',\n    boxShadow: theme.shadows[10],\n    float: 'right',\n    marginBottom: theme.spacing(2),\n    marginLeft: theme.spacing(2),\n    width: '120px',\n  },\n}))\n\nconst About = () => {\n  const classes = useStyles()\n\n  return (\n    <Grid className={classes.page} container spacing={2}>\n      <Grid item xs={12}>\n        <Typography align='center' gutterBottom variant='h5'>\n          What is Plate?\n        </Typography>\n        <img className={classes.profile} src={profile} />\n        <Typography variant='body2'>\n          Hello, I'm Joseph May, a high school chemistry teacher from Las Vegas.\n          While I love teaching chemistry, I also love programming for the web,\n          so why not combine the two.\n        </Typography>\n        <Typography variant='body2'>\n          Plate is a web-based app I created to help my wife and I manage our\n          meals and shopping list for each week. It allows you to create weekly\n          meal plans from recipes you input into the system. It can then\n          generate and push a shopping list to your iPhone or Android device.\n        </Typography>\n        <Typography variant='body2'>\n          While this app can support multiple users, I am running it on no-cost\n          servers, so it was not intended to be a public program. Although, if\n          you are interested in learning more, please reach out to me{' '}\n          <Link href='mailto:jwmay87+plate@gmail.com'>here</Link>.\n        </Typography>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default About\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport { Button, Grid } from '@material-ui/core'\nimport * as Yup from 'yup'\n\nimport ListErrors from '../ListErrors'\nimport agent from '../../agent'\n\nimport { LOGIN } from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({ ...state.auth })\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (username, password) =>\n    dispatch({ type: LOGIN, payload: agent.Auth.login(username, password) }),\n})\n\nconst LoginForm = (props) => {\n  const submitForm = (username, password) => {\n    props.onSubmit(username, password)\n  }\n\n  return (\n    <Formik\n      initialValues={{\n        username: '',\n        password: '',\n      }}\n      validationSchema={Yup.object({\n        username: Yup.string().required('Required'),\n        password: Yup.string().required('Required'),\n      })}\n      onSubmit={(values) => {\n        const { username, password } = values\n        submitForm(username, password)\n      }}\n    >\n      <Form>\n        <Grid container spacing={4}>\n          <Grid item xs={12}>\n            <ListErrors errors={props.errors} />\n            <Field\n              component={TextField}\n              disabled={props.inProgress}\n              fullWidth\n              label='Username'\n              name='username'\n              type='text'\n              variant='outlined'\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Field\n              component={TextField}\n              disabled={props.inProgress}\n              fullWidth\n              label='Password'\n              name='password'\n              type='password'\n              variant='outlined'\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Button\n              color='primary'\n              disabled={props.inProgress}\n              size='large'\n              type='submit'\n              variant='contained'\n            >\n              {props.inProgress ? 'Loading...' : 'Login'}\n            </Button>\n          </Grid>\n        </Grid>\n      </Form>\n    </Formik>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, Redirect } from 'react-router-dom'\nimport Div100vh from 'react-div-100vh'\nimport {\n  Button,\n  Grid,\n  LinearProgress,\n  Paper,\n  Tooltip,\n  makeStyles,\n} from '@material-ui/core'\nimport { ArrowBackIos, InfoOutlined } from '@material-ui/icons'\n\nimport About from '../About'\nimport Logo from '../Logo'\nimport LoginForm from './LoginForm'\nimport background from '../../images/plate-background.png'\n\nimport { LOGIN_PAGE_UNLOADED } from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  aboutLink: {\n    bottom: theme.spacing(2),\n    position: 'absolute',\n    right: theme.spacing(4),\n  },\n  loginLink: {\n    'marginBottom': theme.spacing(2),\n    '& > a': {\n      textDecoration: 'none',\n    },\n  },\n  logo: {\n    display: 'block',\n    margin: '0 auto',\n    width: 120,\n  },\n  page: {\n    alignItems: 'center',\n    backgroundImage: `url(${background})`,\n    backgroundSize: 'cover',\n    display: 'flex',\n    height: '100%',\n    justifyContent: 'center',\n    [theme.breakpoints.up('lg')]: {\n      backgroundSize: 'initial',\n      justifyContent: 'flex-end',\n    },\n  },\n  panel: {\n    borderRadius: '1rem',\n    maxHeight: '90%',\n    overflowY: 'scroll',\n    padding: '4rem 2rem',\n    position: 'relative',\n    width: '80%',\n    [theme.breakpoints.up('lg')]: {\n      borderRadius: '0',\n      height: '100%',\n      maxHeight: '100%',\n      width: '40%',\n    },\n  },\n  progress: {\n    height: 10,\n    left: '0',\n    position: 'absolute',\n    top: '0',\n    width: '100%',\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.auth,\n  currentUser: state.common.currentUser,\n  pathname: state.router.location.pathname,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onUnload: () => dispatch({ type: LOGIN_PAGE_UNLOADED }),\n})\n\nconst AboutLink = () => {\n  const classes = useStyles()\n  return (\n    <span className={classes.aboutLink}>\n      <Tooltip arrow enterTouchDelay={0} title='Learn more'>\n        <Link to='/about'>\n          <InfoOutlined color='secondary' fontSize='small' />\n        </Link>\n      </Tooltip>\n    </span>\n  )\n}\n\nconst LoginLink = () => {\n  const classes = useStyles()\n  return (\n    <div className={classes.loginLink}>\n      <Link to='/login'>\n        <Button color='secondary' startIcon={<ArrowBackIos />}>\n          Login\n        </Button>\n      </Link>\n    </div>\n  )\n}\n\nconst Login = ({ currentUser, inProgress, onUnload, pathname }) => {\n  const classes = useStyles()\n\n  useEffect(() => {\n    return () => onUnload()\n  }, [])\n\n  if (currentUser) {\n    return <Redirect to='/' />\n  }\n\n  return (\n    <Div100vh>\n      <div className={classes.page}>\n        <Paper elevation={12} className={classes.panel}>\n          {inProgress && <LinearProgress className={classes.progress} />}\n          <Grid container spacing={4}>\n            <Grid item xs={12}>\n              <Logo className={classes.logo} />\n            </Grid>\n            <Grid item xs={12}>\n              {pathname.includes('about') ? (\n                <>\n                  <LoginLink />\n                  <About />\n                </>\n              ) : (\n                <>\n                  <AboutLink />\n                  <LoginForm />\n                </>\n              )}\n            </Grid>\n          </Grid>\n        </Paper>\n      </div>\n    </Div100vh>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { SnackbarProvider, useSnackbar } from 'notistack'\n// import { Button } from '@material-ui/core'\n\nimport { SNACKBAR_CLOSED } from '../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  snackbar: state.notifier.snackbar,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSnackbarClose: () => dispatch({ type: SNACKBAR_CLOSED }),\n})\n\nconst Notification = (props) => {\n  const { snackbar } = props\n  const { enqueueSnackbar } = useSnackbar()\n\n  useEffect(() => {\n    if (snackbar) {\n      enqueueSnackbar(snackbar.message, { variant: snackbar.variant })\n    }\n  }, [snackbar])\n\n  return props.children\n}\n\nconst Notifier = (props) => {\n  // const notistackRef = React.createRef()\n  // const onSnackbarDismiss = (key) => () => {\n  //   notistackRef.current.closeSnackbar(key)\n  // }\n\n  return (\n    <SnackbarProvider\n      maxSnack={1}\n      // ref={notistackRef}\n      // @todo: Not working with recent update to notistack@1.0.9 [07.08.2021]\n      // action={(key) => (\n      //   <Button onClick={onSnackbarDismiss(key)}>Dismiss</Button>\n      // )}\n      onClose={() => {\n        props.onSnackbarClose()\n      }}\n    >\n      <Notification snackbar={props.snackbar}>{props.children}</Notification>\n    </SnackbarProvider>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notifier)\n","import { createTheme } from '@material-ui/core'\nimport { blueGrey, indigo } from '@material-ui/core/colors'\n\nconst Theme = createTheme({\n  breakpoints: {\n    values: {\n      md: 768,\n      lg: 1024,\n    },\n  },\n  palette: {\n    primary: { main: blueGrey[400] },\n    secondary: { main: indigo[200] },\n  },\n  overrides: {\n    MuiDialogActions: {\n      root: {\n        padding: '16px 24px',\n      },\n    },\n    MUIRichTextEditor: {\n      placeHolder: {\n        position: 'relative',\n      },\n      toolbar: {\n        '& button.MuiIconButton-colorPrimary': {\n          color: indigo[200],\n        },\n      },\n      editor: {\n        '& li': {\n          borderBottom: `1px solid #ccc`,\n          marginBottom: '32px',\n          paddingBottom: '16px',\n        },\n      },\n    },\n  },\n})\n\nexport default Theme\n","import {\n  ASYNC_START,\n  LOGIN,\n  LOGIN_PAGE_UNLOADED,\n  REGISTER,\n  REGISTER_PAGE_UNLOADED,\n} from '../constants/actionTypes'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case ASYNC_START:\n      if (action.subtype === LOGIN || action.subtype === REGISTER) {\n        return { ...state, inProgress: true }\n      }\n      break\n    case LOGIN:\n    case REGISTER:\n      return {\n        ...state,\n        inProgress: false,\n        errors: action.error ? action.payload.errors : null,\n      }\n    case LOGIN_PAGE_UNLOADED:\n    case REGISTER_PAGE_UNLOADED:\n      return {}\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  ADD_CATEGORY,\n  ASYNC_START,\n  CATEGORY_DIALOG_UNLOADED,\n  CATEGORIES_PAGE_LOADED,\n  CATEGORIES_PAGE_UNLOADED,\n  DELETE_CATEGORY,\n  DELETE_CATEGORIES,\n  INGREDIENTS_PAGE_LOADED,\n  INGREDIENTS_PAGE_UNLOADED,\n  PLANS_PAGE_LOADED,\n  PLANS_PAGE_UNLOADED,\n  RECIPES_PAGE_LOADED,\n  RECIPES_PAGE_UNLOADED,\n  STORES_PAGE_LOADED,\n  STORES_PAGE_UNLOADED,\n  UPDATE_CATEGORY,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  errors: null,\n  categories: [],\n  inProgress: false,\n  pageLoaded: false,\n}\n\nconst sortByName = (a, b) => a.name.localeCompare(b.name)\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case ADD_CATEGORY:\n      return {\n        ...state,\n        categories: action.error\n          ? state.categories\n          : [...state.categories, action.payload.category].sort((a, b) =>\n              sortByName(a, b)\n            ),\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    case ASYNC_START:\n      if (\n        action.subtype === ADD_CATEGORY ||\n        action.subtype === UPDATE_CATEGORY\n      ) {\n        return { ...state, errors: null, inProgress: true }\n      } else if (action.subtype === CATEGORIES_PAGE_LOADED) {\n        return { ...state, errors: null, pageLoaded: false }\n      }\n      break\n    case DELETE_CATEGORY:\n      return {\n        ...state,\n        categories: action.error\n          ? state.categories\n          : state.categories.filter(\n              (category) => category.slug !== action.payload.category.slug\n            ),\n      }\n    case DELETE_CATEGORIES:\n      return {\n        ...state,\n        categories: action.error\n          ? state.categories\n          : state.categories.filter(\n              (category) => !action.payload.categories.includes(category.slug)\n            ),\n      }\n    case CATEGORY_DIALOG_UNLOADED:\n      return { ...state, errors: null }\n    case CATEGORIES_PAGE_LOADED:\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        categories: action.error ? [] : action.payload.categories,\n        inProgress: false,\n        pageLoaded: true,\n      }\n    case CATEGORIES_PAGE_UNLOADED:\n    case INGREDIENTS_PAGE_UNLOADED:\n    case PLANS_PAGE_UNLOADED:\n    case RECIPES_PAGE_UNLOADED:\n    case STORES_PAGE_UNLOADED:\n      return defaultState\n    case INGREDIENTS_PAGE_LOADED:\n    case STORES_PAGE_LOADED:\n      return {\n        ...state,\n        categories: action.error ? [] : action.payload[1].categories,\n      }\n    case PLANS_PAGE_LOADED:\n      return {\n        ...state,\n        categories: action.error ? [] : action.payload[4].categories,\n      }\n    case RECIPES_PAGE_LOADED:\n      return {\n        ...state,\n        categories: action.error ? [] : action.payload[2].categories,\n      }\n    case UPDATE_CATEGORY:\n      return {\n        ...state,\n        categories: action.error\n          ? state.categories\n          : state.categories\n              .map((category) =>\n                category._id === action.payload.category._id\n                  ? action.payload.category\n                  : category\n              )\n              .sort((a, b) => sortByName(a, b)),\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  APP_LOAD,\n  LOGIN,\n  LOGIN_PAGE_UNLOADED,\n  LOGOUT,\n  NAV_LOADED,\n  NAV_TAB_CHANGE,\n  REDIRECT,\n  REGISTER,\n  REGISTER_PAGE_UNLOADED,\n  SET_DEFAULT_STORE,\n  SET_STARRED_PLAN,\n  SETTINGS_SAVED,\n  SETTINGS_PAGE_UNLOADED,\n  UPDATE_PLAN_ARCHIVE_STATUS,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  token: null,\n  viewChangeCounter: 0,\n}\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case APP_LOAD:\n      return {\n        ...state,\n        token: action.token || null,\n        appLoaded: true,\n        currentUser: action.payload ? action.payload.user : null,\n        settings: action.payload ? action.payload.settings : null,\n      }\n    case LOGOUT:\n      return { ...state, redirectTo: '/login', token: null, currentUser: null }\n    case LOGIN:\n    case REGISTER:\n      return {\n        ...state,\n        redirectTo: action.error\n          ? null\n          : action.payload.user.role === 'admin'\n          ? '/users'\n          : '/plans',\n        token: action.error ? null : action.payload.user.token,\n        currentUser: action.error ? null : action.payload.user,\n        settings: action.error ? null : action.payload.settings,\n      }\n    case LOGIN_PAGE_UNLOADED:\n    case REGISTER_PAGE_UNLOADED:\n    case SETTINGS_PAGE_UNLOADED:\n      return { ...state, viewChangeCounter: state.viewChangeCounter + 1 }\n    case NAV_LOADED:\n    case NAV_TAB_CHANGE:\n      return { ...state, redirectTo: action.redirectTo }\n    case REDIRECT:\n      return { ...state, redirectTo: null }\n    case SET_DEFAULT_STORE:\n    case SET_STARRED_PLAN:\n      return {\n        ...state,\n        settings: action.error ? state.settings : action.payload.settings,\n      }\n    case SETTINGS_SAVED:\n      return {\n        ...state,\n        currentUser: action.error ? state.currentUser : action.payload[0].user,\n        settings: action.error ? state.settings : action.payload[1].settings,\n      }\n    case UPDATE_PLAN_ARCHIVE_STATUS:\n      return {\n        ...state,\n        settings: action.error ? state.settings : action.payload[1].settings,\n      }\n    default:\n      return state\n  }\n}\n","import {\n  ADD_INGREDIENT,\n  ASYNC_START,\n  INGREDIENT_DIALOG_UNLOADED,\n  INGREDIENTS_PAGE_LOADED,\n  INGREDIENTS_PAGE_UNLOADED,\n  DELETE_INGREDIENT,\n  DELETE_INGREDIENTS,\n  PLANS_PAGE_LOADED,\n  PLANS_PAGE_UNLOADED,\n  RECIPES_PAGE_LOADED,\n  RECIPES_PAGE_UNLOADED,\n  UPDATE_INGREDIENT,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  errors: null,\n  ingredients: [],\n  inProgress: false,\n  pageLoaded: false,\n}\n\nconst sortByName = (a, b) => a.name.localeCompare(b.name)\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case ADD_INGREDIENT:\n      return {\n        ...state,\n        ingredients: action.error\n          ? state.ingredients\n          : [...state.ingredients, action.payload.ingredient].sort((a, b) =>\n              sortByName(a, b)\n            ),\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    case ASYNC_START:\n      if (\n        action.subtype === ADD_INGREDIENT ||\n        action.subtype === UPDATE_INGREDIENT\n      ) {\n        return { ...state, errors: null, inProgress: true }\n      } else if (action.subtype === INGREDIENTS_PAGE_LOADED) {\n        return { ...state, errors: null, pageLoaded: false }\n      }\n      break\n    case DELETE_INGREDIENT:\n      return {\n        ...state,\n        ingredients: action.error\n          ? state.ingredients\n          : state.ingredients.filter(\n              (ingredient) => ingredient.slug !== action.payload.ingredient.slug\n            ),\n      }\n    case DELETE_INGREDIENTS:\n      return {\n        ...state,\n        ingredients: action.error\n          ? state.ingredients\n          : state.ingredients.filter(\n              (ingredient) =>\n                !action.payload.ingredients.includes(ingredient.slug)\n            ),\n      }\n    case INGREDIENT_DIALOG_UNLOADED:\n      return { ...state, errors: null }\n    case INGREDIENTS_PAGE_LOADED:\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        ingredients: action.error ? [] : action.payload[0].ingredients,\n        inProgress: false,\n        pageLoaded: true,\n      }\n    case INGREDIENTS_PAGE_UNLOADED:\n    case RECIPES_PAGE_UNLOADED:\n    case PLANS_PAGE_UNLOADED:\n      return defaultState\n    case PLANS_PAGE_LOADED:\n      return {\n        ...state,\n        ingredients: action.error ? [] : action.payload[3].ingredients,\n      }\n    case RECIPES_PAGE_LOADED:\n      return {\n        ...state,\n        ingredients: action.error ? [] : action.payload[1].ingredients,\n      }\n    case UPDATE_INGREDIENT:\n      return {\n        ...state,\n        ingredients: action.error\n          ? state.ingredients\n          : state.ingredients\n              .map((ingredient) =>\n                ingredient._id === action.payload.ingredient._id\n                  ? action.payload.ingredient\n                  : ingredient\n              )\n              .sort((a, b) => sortByName(a, b)),\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  ADD_MEAL,\n  ASYNC_START,\n  DELETE_MEAL,\n  DELETE_MEALS,\n  MEAL_DIALOG_LOADED,\n  MEAL_DIALOG_UNLOADED,\n  MEALS_PAGE_LOADED,\n  MEALS_PAGE_UNLOADED,\n  PLANS_PAGE_LOADED,\n  PLANS_PAGE_UNLOADED,\n  UPDATE_MEAL,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  editor: { meal: null },\n  errors: null,\n  inProgress: false,\n  meals: [],\n  pageLoaded: false,\n}\n\nconst sortByTitle = (a, b) => a.title.localeCompare(b.title)\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case ADD_MEAL:\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        meals: action.error\n          ? state.meals\n          : [...state.meals, action.payload.meal].sort((a, b) =>\n              sortByTitle(a, b)\n            ),\n      }\n    case ASYNC_START:\n      if (action.subtype === ADD_MEAL || action.subtype === UPDATE_MEAL) {\n        return { ...state, errors: null, inProgress: true }\n      } else if (action.subtype === MEALS_PAGE_LOADED) {\n        return { ...state, errors: null, pageLoaded: false }\n      }\n      break\n    case DELETE_MEAL:\n      return {\n        ...state,\n        meals: action.error\n          ? state.meals\n          : state.meals.filter(\n              (meal) => meal.slug !== action.payload.meal.slug\n            ),\n      }\n    case DELETE_MEALS:\n      return {\n        ...state,\n        meals: action.error\n          ? state.meals\n          : state.meals.filter(\n              (meal) => !action.payload.meals.includes(meal.slug)\n            ),\n      }\n    case MEAL_DIALOG_LOADED:\n      return { ...state, editor: { ...state.editor, meal: action.meal } }\n    case MEAL_DIALOG_UNLOADED:\n      return { ...state, editor: { ...state.editor, meal: null }, errors: null }\n    case MEALS_PAGE_LOADED:\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        meals: action.error ? [] : action.payload[0].meals,\n        pageLoaded: true,\n      }\n    case MEALS_PAGE_UNLOADED:\n    case PLANS_PAGE_UNLOADED:\n      return defaultState\n    case PLANS_PAGE_LOADED:\n      return {\n        ...state,\n        meals: action.error ? [] : action.payload[1].meals,\n      }\n    case UPDATE_MEAL:\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        meals: action.error\n          ? state.meals\n          : state.meals\n              .map((meal) =>\n                meal._id === action.payload.meal._id\n                  ? action.payload.meal\n                  : meal\n              )\n              .sort((a, b) => sortByTitle(a, b)),\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  NAV_LOADED,\n  NAV_UNLOADED,\n  NAV_TAB_CHANGE,\n} from '../constants/actionTypes'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case NAV_LOADED:\n    case NAV_TAB_CHANGE:\n      return {\n        ...state,\n        navTabValue: action.value,\n      }\n    case NAV_UNLOADED:\n      return {}\n    default:\n      return state\n  }\n}\n","import {\n  ADD_CATEGORY,\n  ADD_INGREDIENT,\n  ADD_MEAL,\n  ADD_PLAN,\n  ADD_RECIPE,\n  ADD_STORE,\n  ADD_USER,\n  DELETE_CATEGORY,\n  DELETE_CATEGORIES,\n  DELETE_INGREDIENT,\n  DELETE_INGREDIENTS,\n  DELETE_MEAL,\n  DELETE_MEALS,\n  DELETE_PLAN,\n  DELETE_RECIPE,\n  DELETE_RECIPES,\n  DELETE_STORE,\n  DELETE_USER,\n  PLAN_LIST_COPIED,\n  SET_DEFAULT_STORE,\n  SET_STARRED_PLAN,\n  SETTINGS_SAVED,\n  SNACKBAR_CLOSED,\n  UPDATE_CATEGORY,\n  UPDATE_INGREDIENT,\n  UPDATE_MEAL,\n  UPDATE_PLAN,\n  UPDATE_PLAN_ARCHIVE_STATUS,\n  UPDATE_RECIPE,\n  UPDATE_STORE,\n  UPDATE_USER,\n} from '../constants/actionTypes'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case ADD_CATEGORY:\n    case ADD_INGREDIENT:\n    case ADD_MEAL:\n    case ADD_PLAN:\n    case ADD_RECIPE:\n    case ADD_STORE:\n    case ADD_USER:\n    case DELETE_CATEGORY:\n    case DELETE_CATEGORIES:\n    case DELETE_INGREDIENT:\n    case DELETE_INGREDIENTS:\n    case DELETE_MEAL:\n    case DELETE_MEALS:\n    case DELETE_PLAN:\n    case DELETE_RECIPE:\n    case DELETE_RECIPES:\n    case DELETE_STORE:\n    case DELETE_USER:\n    case PLAN_LIST_COPIED:\n    case SET_DEFAULT_STORE:\n    case SET_STARRED_PLAN:\n    case SETTINGS_SAVED:\n    case UPDATE_CATEGORY:\n    case UPDATE_INGREDIENT:\n    case UPDATE_MEAL:\n    case UPDATE_PLAN:\n    case UPDATE_PLAN_ARCHIVE_STATUS:\n    case UPDATE_RECIPE:\n    case UPDATE_STORE:\n    case UPDATE_USER:\n      return {\n        ...state,\n        snackbar: action.error\n          ? null //{ message: 'An error occurred', variant: 'error' }\n          : action.snackbar,\n      }\n    case SNACKBAR_CLOSED:\n      return { ...state, snackbar: null }\n    default:\n      return state\n  }\n}\n","import {\n  ADD_PLAN,\n  ASYNC_START,\n  DELETE_PLAN,\n  PLAN_DIALOG_LOADED,\n  PLAN_DIALOG_UNLOADED,\n  PLAN_LIST_DIALOG_LOADED,\n  PLAN_LIST_DIALOG_UNLOADED,\n  PLAN_VIEW_LOADED,\n  PLAN_VIEW_UNLOADED,\n  PLANS_PAGE_LOADED,\n  PLANS_PAGE_UNLOADED,\n  UPDATE_PLAN,\n  UPDATE_PLAN_ARCHIVE_STATUS,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  editor: { plan: null },\n  errors: null,\n  inProgress: false,\n  pageLoaded: false,\n  plans: [],\n  viewer: { plan: null, type: null },\n}\n\nconst sortByTitle = (a, b) => a.title.localeCompare(b.title)\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case ADD_PLAN:\n      return {\n        ...state,\n        plans: action.error\n          ? state.plans\n          : [...state.plans, action.payload.plan].sort((a, b) =>\n              sortByTitle(a, b)\n            ),\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    case ASYNC_START:\n      if (\n        action.subtype === ADD_PLAN ||\n        action.subtype === UPDATE_PLAN ||\n        action.subtype === UPDATE_PLAN_ARCHIVE_STATUS\n      ) {\n        return { ...state, errors: null, inProgress: true }\n      } else if (action.subtype === PLANS_PAGE_LOADED) {\n        return { ...state, errors: null, pageLoaded: false }\n      }\n      break\n    case DELETE_PLAN:\n      return {\n        ...state,\n        plans: action.error\n          ? state.plans\n          : state.plans.filter(\n              (plan) => plan.slug !== action.payload.plan.slug\n            ),\n      }\n    case PLAN_DIALOG_LOADED:\n      return { ...state, editor: { ...state.editor, plan: action.plan } }\n    case PLAN_DIALOG_UNLOADED:\n      return { ...state, editor: { ...state.editor, plan: null }, errors: null }\n    case PLAN_LIST_DIALOG_LOADED:\n      return {\n        ...state,\n        viewer: { ...state.viewer, plan: action.plan, type: 'list' },\n      }\n    case PLAN_LIST_DIALOG_UNLOADED:\n    case PLAN_VIEW_UNLOADED:\n      return { ...state, viewer: { ...state.viewer, plan: null, type: null } }\n    case PLAN_VIEW_LOADED:\n      return {\n        ...state,\n        viewer: { ...state.viewer, plan: action.plan, type: 'plan' },\n      }\n    case PLANS_PAGE_LOADED:\n      return {\n        ...state,\n        pageLoaded: true,\n        plans: action.payload[0].plans,\n      }\n    case PLANS_PAGE_UNLOADED:\n      return defaultState\n    case UPDATE_PLAN:\n      return {\n        ...state,\n        plans: action.error\n          ? state.plans\n          : state.plans\n              .map((plan) =>\n                plan._id === action.payload.plan._id\n                  ? action.payload.plan\n                  : plan\n              )\n              .sort((a, b) => sortByTitle(a, b)),\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    case UPDATE_PLAN_ARCHIVE_STATUS:\n      return {\n        ...state,\n        plans: action.error\n          ? state.plans\n          : state.plans\n              .map((plan) =>\n                plan._id === action.payload[0].plan._id\n                  ? action.payload[0].plan\n                  : plan\n              )\n              .sort((a, b) => sortByTitle(a, b)),\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  ADD_INGREDIENT,\n  ADD_RECIPE,\n  ASYNC_START,\n  MEALS_PAGE_LOADED,\n  MEALS_PAGE_UNLOADED,\n  PLANS_PAGE_LOADED,\n  PLANS_PAGE_UNLOADED,\n  RECIPE_DIALOG_LOADED,\n  RECIPE_DIALOG_UNLOADED,\n  RECIPE_INGREDIENT_ONBLUR,\n  RECIPES_PAGE_LOADED,\n  RECIPES_PAGE_UNLOADED,\n  RECIPE_VIEW_LOADED,\n  RECIPE_VIEW_UNLOADED,\n  DELETE_RECIPE,\n  DELETE_RECIPES,\n  UPDATE_RECIPE,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  editor: { recipe: null, ingredient: null },\n  errors: null,\n  recipes: [],\n  inProgress: false,\n  pageLoaded: false,\n  viewer: { recipe: null },\n}\n\nconst sortByTitle = (a, b) => a.title.localeCompare(b.title)\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case ADD_INGREDIENT:\n      return {\n        ...state,\n        editor: { ...state.editor, ingredient: action.payload.ingredient },\n      }\n    case ADD_RECIPE:\n      return {\n        ...state,\n        recipes: action.error\n          ? state.recipes\n          : [...state.recipes, action.payload.recipe].sort((a, b) =>\n              sortByTitle(a, b)\n            ),\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    case ASYNC_START:\n      if (action.subtype === ADD_RECIPE || action.subtype === UPDATE_RECIPE) {\n        return { ...state, errors: null, inProgress: true }\n      } else if (action.subtype === RECIPES_PAGE_LOADED) {\n        return { ...state, errors: null, pageLoaded: false }\n      }\n      break\n    case DELETE_RECIPE:\n      return {\n        ...state,\n        recipes: action.error\n          ? state.recipes\n          : state.recipes.filter(\n              (recipe) => recipe.slug !== action.payload.recipe.slug\n            ),\n      }\n    case DELETE_RECIPES:\n      return {\n        ...state,\n        recipes: action.error\n          ? state.recipes\n          : state.recipes.filter(\n              (recipe) => !action.payload.recipes.includes(recipe.slug)\n            ),\n      }\n    case MEALS_PAGE_LOADED:\n      return {\n        ...state,\n        recipes: action.error ? [] : action.payload[1].recipes,\n      }\n    case MEALS_PAGE_UNLOADED:\n    case PLANS_PAGE_UNLOADED:\n    case RECIPES_PAGE_UNLOADED:\n      return defaultState\n    case PLANS_PAGE_LOADED:\n      return {\n        ...state,\n        recipes: action.error ? [] : action.payload[2].recipes,\n      }\n    case RECIPE_DIALOG_LOADED:\n      return {\n        ...state,\n        editor: { ...state.editor, recipe: action.recipe },\n      }\n    case RECIPE_DIALOG_UNLOADED:\n      return {\n        ...state,\n        editor: { ...state.editor, recipe: null, ingredient: null },\n        errors: null,\n      }\n    case RECIPE_INGREDIENT_ONBLUR:\n      return {\n        ...state,\n        editor: { ...state.editor, ingredient: null },\n      }\n    case RECIPES_PAGE_LOADED:\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        recipes: action.error ? [] : action.payload[0].recipes,\n        inProgress: false,\n        pageLoaded: true,\n      }\n\n    case RECIPE_VIEW_LOADED:\n      return { ...state, viewer: { ...state.viewer, recipe: action.recipe } }\n    case RECIPE_VIEW_UNLOADED:\n      return { ...state, viewer: { ...state.viewer, recipe: null } }\n    case UPDATE_RECIPE:\n      return {\n        ...state,\n        editor: { ...state.editor, recipe: null },\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        recipes: action.error\n          ? state.recipes\n          : state.recipes\n              .map((recipe) =>\n                recipe._id === action.payload.recipe._id\n                  ? action.payload.recipe\n                  : recipe\n              )\n              .sort((a, b) => sortByTitle(a, b)),\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  ASYNC_START,\n  SETTINGS_PAGE_UNLOADED,\n  SETTINGS_SAVED,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  errors: null,\n  inProgress: false,\n}\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case ASYNC_START:\n      if (action.subtype === SETTINGS_SAVED) {\n        return {\n          ...state,\n          inProgress: true,\n        }\n      }\n      break\n    case SETTINGS_PAGE_UNLOADED:\n      return defaultState\n    case SETTINGS_SAVED:\n      return {\n        ...state,\n        inProgress: false,\n        errors: action.error ? action.payload.errors : null,\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  ADD_STORE,\n  ASYNC_START,\n  DELETE_STORE,\n  PLANS_PAGE_LOADED,\n  PLANS_PAGE_UNLOADED,\n  STORE_DIALOG_LOADED,\n  STORE_DIALOG_UNLOADED,\n  STORES_PAGE_LOADED,\n  STORES_PAGE_UNLOADED,\n  UPDATE_STORE,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  editor: { store: null },\n  errors: null,\n  inProgress: false,\n  pageLoaded: false,\n  stores: [],\n}\n\nconst sortByName = (a, b) => a.name.localeCompare(b.name)\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case ADD_STORE:\n      return {\n        ...state,\n        stores: action.error\n          ? state.stores\n          : [...state.stores, action.payload.store].sort((a, b) =>\n              sortByName(a, b)\n            ),\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    case ASYNC_START:\n      if (action.subtype === ADD_STORE || action.subtype === UPDATE_STORE) {\n        return { ...state, errors: null, inProgress: true }\n      } else if (action.subtype === STORES_PAGE_LOADED) {\n        return { ...state, errors: null, pageLoaded: false }\n      }\n      break\n    case DELETE_STORE:\n      return {\n        ...state,\n        stores: action.error\n          ? state.stores\n          : state.stores.filter(\n              (store) => store.slug !== action.payload.store.slug\n            ),\n      }\n    case PLANS_PAGE_LOADED:\n      return {\n        ...state,\n        stores: action.error ? [] : action.payload[5].stores,\n      }\n    case STORE_DIALOG_LOADED:\n      return { ...state, editor: { ...state.editor, store: action.store } }\n    case STORE_DIALOG_UNLOADED:\n      return {\n        ...state,\n        editor: { ...state.editor, store: null },\n        errors: null,\n      }\n    case STORES_PAGE_LOADED:\n      return {\n        ...state,\n        pageLoaded: true,\n        stores: action.payload[0].stores,\n      }\n    case STORES_PAGE_UNLOADED:\n    case PLANS_PAGE_UNLOADED:\n      return defaultState\n    case UPDATE_STORE:\n      return {\n        ...state,\n        stores: action.error\n          ? state.stores\n          : state.stores\n              .map((store) =>\n                store._id === action.payload.store._id\n                  ? action.payload.store\n                  : store\n              )\n              .sort((a, b) => sortByName(a, b)),\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  ADD_USER,\n  ASYNC_START,\n  DELETE_USER,\n  MANAGE_USERS_PAGE_LOADED,\n  MANAGE_USERS_PAGE_UNLOADED,\n  USER_DIALOG_UNLOADED,\n  UPDATE_USER,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  errors: null,\n  inProgress: false,\n  users: [],\n}\n\nconst sortByLastName = (a, b) => a.lastName.localeCompare(b.lastName)\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case ADD_USER:\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        users: action.error\n          ? state.users\n          : [...state.users, action.payload.user].sort((a, b) =>\n              sortByLastName(a, b)\n            ),\n      }\n    case ASYNC_START:\n      if (action.subtype === ADD_USER || action.subtype === UPDATE_USER) {\n        return { ...state, inProgress: true, errors: null }\n      }\n      break\n    case DELETE_USER:\n      return {\n        ...state,\n        users: action.error\n          ? state.users\n          : state.users.filter(\n              (user) => user.username !== action.payload.user.username\n            ),\n      }\n    case MANAGE_USERS_PAGE_LOADED:\n      return {\n        ...state,\n        users: action.payload.users,\n      }\n    case MANAGE_USERS_PAGE_UNLOADED:\n      return defaultState\n    case USER_DIALOG_UNLOADED:\n      return { ...state, errors: null }\n    case UPDATE_USER:\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        users: action.error\n          ? state.users\n          : state.users\n              .map((user) =>\n                user.username === action.payload.user.username\n                  ? action.payload.user\n                  : user\n              )\n              .sort((a, b) => sortByLastName(a, b)),\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import agent from './agent'\nimport {\n  ASYNC_START,\n  ASYNC_END,\n  LOGIN,\n  LOGOUT,\n  REGISTER,\n} from './constants/actionTypes'\n\nconst promiseMiddleware = (store) => (next) => (action) => {\n  if (isPromise(action.payload)) {\n    store.dispatch({ type: ASYNC_START, subtype: action.type })\n\n    const currentView = store.getState().viewChangeCounter\n    const skipTracking = action.skipTracking\n\n    action.payload.then(\n      (res) => {\n        const currentState = store.getState()\n        if (!skipTracking && currentState.viewChangeCounter !== currentView) {\n          return\n        }\n        action.payload = res\n        store.dispatch({ type: ASYNC_END, promise: action.payload })\n        store.dispatch(action)\n      },\n      (error) => {\n        const currentState = store.getState()\n        if (!skipTracking && currentState.viewChangeCounter !== currentView) {\n          return\n        }\n        // console.log('ERROR', error)\n        action.error = true\n        action.payload = error.response.body\n        if (!action.skipTracking) {\n          store.dispatch({ type: ASYNC_END, promise: action.payload })\n        }\n        store.dispatch(action)\n      }\n    )\n\n    return\n  }\n\n  next(action)\n}\n\nconst localStorageMiddleware = (store) => (next) => (action) => {\n  if (action.type === REGISTER || action.type === LOGIN) {\n    if (!action.error) {\n      window.localStorage.setItem('jwt', action.payload.user.token)\n      agent.setToken(action.payload.user.token)\n    }\n  } else if (action.type === LOGOUT) {\n    window.localStorage.setItem('jwt', '')\n    agent.setToken(null)\n  }\n\n  next(action)\n}\n\nfunction isPromise(v) {\n  return v && typeof v.then === 'function'\n}\n\nexport { promiseMiddleware, localStorageMiddleware }\n","import { applyMiddleware, createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly'\nimport { createBrowserHistory } from 'history'\nimport { createLogger } from 'redux-logger'\nimport { routerMiddleware } from 'connected-react-router'\n\nimport createRootReducer from './reducer'\nimport { promiseMiddleware, localStorageMiddleware } from './middleware'\n\nexport const history = createBrowserHistory()\n\n// Build the middleware for intercepting and dispatching navigation actions\nconst myRouterMiddleware = routerMiddleware(history)\n\nconst getMiddleware = () => {\n  if (process.env.NODE_ENV === 'production') {\n    return applyMiddleware(\n      myRouterMiddleware,\n      promiseMiddleware,\n      localStorageMiddleware\n    )\n  } else {\n    // Enable additional logging in non-production environments\n    return applyMiddleware(\n      myRouterMiddleware,\n      promiseMiddleware,\n      localStorageMiddleware,\n      createLogger()\n    )\n  }\n}\n\nexport const store = createStore(\n  createRootReducer(history),\n  composeWithDevTools(getMiddleware())\n)\n","import { combineReducers } from 'redux'\nimport { connectRouter } from 'connected-react-router'\n\nimport auth from './reducers/auth'\nimport categories from './reducers/categories'\nimport common from './reducers/common'\nimport ingredients from './reducers/ingredients'\nimport meals from './reducers/meals'\nimport nav from './reducers/nav'\nimport notifier from './reducers/notifier'\nimport plans from './reducers/plans'\nimport recipes from './reducers/recipes'\nimport settings from './reducers/settings'\nimport stores from './reducers/stores'\nimport users from './reducers/users'\n\nexport default (history) =>\n  combineReducers({\n    auth,\n    categories,\n    common,\n    ingredients,\n    meals,\n    nav,\n    notifier,\n    plans,\n    recipes,\n    settings,\n    stores,\n    users,\n    router: connectRouter(history),\n  })\n","import React, { Suspense, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Route, Switch } from 'react-router-dom'\nimport { push } from 'connected-react-router'\nimport { CssBaseline, ThemeProvider } from '@material-ui/core'\n\nimport Home from './Home'\nimport Loading from './Loading'\nimport Login from './Login'\nimport Notifier from './Notifier'\nimport Theme from './Theme'\nimport agent from '../agent'\nimport { store } from '../store'\n\nimport { APP_LOAD, REDIRECT } from '../constants/actionTypes'\n\nconst mapStateToProps = (state) => {\n  return {\n    appLoaded: state.common.appLoaded,\n    redirectTo: state.common.redirectTo,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: (payload, token) =>\n    dispatch({ type: APP_LOAD, payload, token, skipTracking: true }),\n  onRedirect: () => dispatch({ type: REDIRECT }),\n})\n\nconst App = (props) => {\n  const { appLoaded, redirectTo } = props\n\n  useEffect(() => {\n    if (redirectTo) {\n      store.dispatch(push(redirectTo))\n      props.onRedirect()\n    }\n  }, [redirectTo])\n\n  useEffect(() => {\n    const token = window.localStorage.getItem('jwt')\n    if (token) {\n      agent.setToken(token)\n    }\n\n    props.onLoad(token ? agent.Auth.current() : null, token)\n  }, [])\n\n  if (appLoaded) {\n    return (\n      <ThemeProvider theme={Theme}>\n        <CssBaseline />\n        <Notifier>\n          <Suspense fallback={<p>Loading...</p>}>\n            <Switch>\n              <Route exact path='/login' component={Login} />\n              <Route exact path='/about' component={Login} />\n              <Route path='/' component={Home} />\n            </Switch>\n          </Suspense>\n        </Notifier>\n      </ThemeProvider>\n    )\n  }\n\n  return (\n    <ThemeProvider theme={Theme}>\n      <CssBaseline />\n      <Loading />\n    </ThemeProvider>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import { ConnectedRouter } from 'connected-react-router'\nimport { Provider } from 'react-redux'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Route, Switch } from 'react-router-dom'\n\nimport App from './components/App'\nimport { store, history } from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <Switch>\n        <Route path='/' component={App} />\n      </Switch>\n    </ConnectedRouter>\n  </Provider>,\n\n  document.getElementById('root')\n)\n"],"sourceRoot":""}