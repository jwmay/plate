{"version":3,"sources":["agent.js","images/plate-background.png","images/plate-logo.png","images/doc-may-profile.jpg","components/FabAdd.js","components/ListErrors.js","constants/actionTypes.js","components/Categories/CategoryDialog.js","components/MaterialTableFix.js","components/ActionButton.js","components/BulkDeleteConfirmationAlert.js","components/Categories/CategoriesTable.js","components/PageHeader.js","components/Spinner.js","components/Categories/Categories.js","components/Logo.js","components/Header.js","components/Ingredients/IngredientDialog.js","components/Ingredients/IngredientsTable.js","components/Ingredients/Ingredients.js","components/Admin/UserDialog.js","components/Admin/DeleteUserAlert.js","components/Admin/UserList.js","components/Admin/ManageUsers.js","components/Meals/RecipeSelector.js","constants/mealTypes.js","components/Meals/MealsDialog.js","components/Meals/MealsTable.js","components/Meals/Meals.js","components/Navigation.js","components/PageWrapper.js","components/NotFound.js","components/Plans/Lists/ShoppingList.js","components/Plans/Lists/StoreSelector.js","components/Plans/Lists/ListDialog.js","components/Plans/PlanBuilder/MealDraggable.js","components/Plans/PlanBuilder/MealSelector.js","components/Plans/PlanBuilder/MealSelectorDialog.js","components/Plans/PlanBuilder/WeekdayDroppable.js","constants/days.js","components/Plans/PlanBuilder/PlanBuilder.js","components/Plans/PlanEditor.js","components/Plans/PlanViewer.js","components/Plans/PlansTable.js","components/RichEditor.js","components/Recipes/RecipeViewer.js","components/Plans/Plans.js","components/ProtectedRoute.js","components/Recipes/IngredientSelector.js","components/MaterialTableResponsive.js","constants/units.js","components/Recipes/RecipeIngredientsEditor.js","components/Recipes/RecipeEditor.js","components/Recipes/RecipesTable.js","components/Recipes/Recipes.js","components/Stores/CategorySorter/CategoryDraggable.js","components/Stores/CategorySorter/CategoryDroppable.js","components/Stores/CategorySorter/CategorySorter.js","components/Stores/StoreDialog.js","components/Stores/StoresTable.js","components/Stores/Stores.js","components/Settings.js","components/Home.js","components/Loading.js","components/About.js","components/Login/LoginForm.js","components/Login/index.js","components/Notifier.js","components/Theme.js","reducers/auth.js","reducers/categories.js","reducers/common.js","reducers/ingredients.js","reducers/meals.js","reducers/nav.js","reducers/notifier.js","reducers/plans.js","reducers/recipes.js","reducers/settings.js","reducers/stores.js","reducers/users.js","middleware.js","store.js","reducer.js","components/App.js","index.js"],"names":["superagent","superagentPromise","_superagent","global","Promise","API_ROOT","responseBody","res","body","token","tokenPlugin","req","set","requests","url","del","use","then","get","post","put","Auth","current","login","username","password","user","register","save","Categories","add","category","delete","slug","deleteMany","slugs","categories","getAll","update","Ingredients","ingredient","ingredients","Meals","meal","meals","Plans","plan","plans","Recipes","recipe","recipes","Settings","settings","Stores","store","Users","setToken","_token","module","exports","useStyles","makeStyles","theme","icon","marginRight","spacing","FabAdd","props","classes","Fab","color","onClick","variant","Add","className","prefix","item","alert","marginBottom","alertList","ListErrors","errors","Object","keys","map","key","readableKey","replace","toLowerCase","Alert","severity","ASYNC_START","LOGIN","addIcon","connect","state","dispatch","onAdd","type","payload","agent","snackbar","message","onExit","onUpdate","inProgress","useState","open","setOpen","useTheme","fullScreen","useMediaQuery","breakpoints","down","handleClose","handleSubmitAdd","values","handleSubmitUpdate","useEffect","Dialog","maxWidth","ev","stopPropagation","onClose","onFocus","TransitionProps","initialValues","name","notes","validationSchema","Yup","required","onSubmit","a","DialogTitle","DialogContent","Grid","container","xs","autoFocus","component","TextField","disabled","label","fullWidth","DialogActions","Button","MaterialTableFix","components","EditRow","onKeyDown","e","keyCode","onEditingCanceled","mode","data","actionButton","palette","text","ActionButton","passedClasses","Tooltip","arrow","enterTouchDelay","title","action","IconButton","aria-label","size","children","BulkDeleteConfirmationAlert","onDelete","Delete","DialogContentText","onDeleteMany","length","setData","field","columns","handleDeleteManyClick","row","Action","localization","emptyDataSourceMessage","editRow","deleteText","options","actionsColumnIndex","paging","selection","toolbar","actions","position","tooltip","editable","onRowUpdate","newData","oldData","resolve","reject","dataUpdate","tableData","id","onRowDelete","index","splice","headerLeft","alignItems","display","headerRight","justifyContent","pageHeader","PageHeader","md","Typography","fontStyle","root","minWidth","spinner","Spinner","CircularProgress","button","textDecoration","onLoad","onUnload","pageLoaded","to","Logo","alt","src","logo","flexGrow","height","marginTop","navTabValue","nav","onClickLogout","currentUser","AppBar","Toolbar","align","charAt","toUpperCase","slice","paper","up","hideButton","isOpen","select","MenuItem","_id","value","lookup","reduce","obj","all","users","handleClickOpen","role","Edit","firstName","lastName","userDetails","userHeader","width","userUsername","userName","UserList","expanded","setExpanded","Accordion","onChange","panel","isExpanded","AccordionSummary","expandIcon","ExpandMore","Chip","AccordionDetails","RecipeSelector","setOptions","mappedOptions","filter","isMeal","firstLetter","test","Autocomplete","autoHighlight","autoSelect","getOptionLabel","option","getOptionSelected","groupBy","multiple","noOptionsText","renderInput","params","renderOption","inputValue","matches","match","parts","parse","part","style","fontWeight","highlight","MEAL_TYPES","editor","mealType","formik","setFieldValue","onLoadUpdate","recipesAsMeals","sort","b","localeCompare","selectionProps","rowData","isDeletable","bottom","zIndex","common","path","router","location","pathname","tabValue","redirectTo","onTabChange","userRole","handleTabChange","tabFromPath","split","node","loadCSS","document","querySelector","parentNode","removeChild","BottomNavigation","event","newValue","showLabels","BottomNavigationAction","SupervisorAccount","Icon","wrapper","PageWrapper","NotFound","checked","primary","light","opacity","marginLeft","listItem","ShoppingList","list","setChecked","handleChange","target","Array","isArray","FormGroup","FormControlLabel","control","Checkbox","unit","quantity","join","Info","StoreSelector","defaultStore","stores","setStore","FormControl","InputLabel","Select","labelId","viewer","onCopy","setList","getList","planMeals","entries","dailyMeals","mealId","find","planRecipes","flatMap","hasOwnProperty","planIngredients","itemCategory","ingredientsByCategory","push","lists","selectedStore","s","forEach","ingredientTotals","arr","findItem","i","itemIndex","findIndex","concat","indexOf","flat","storeId","listString","navigator","clipboard","writeText","err","console","error","MealDraggable","onRemove","uniqueId","draggableId","provided","snapshot","Paper","elevation","ref","innerRef","draggableProps","dragHandleProps","isDragging","draggableStyle","background","secondary","padding","userSelect","Close","MealSelector","MealSelectorDialog","day","result","dayHeader","visibility","WeekdayDroppable","mealPlan","mappedMealPlan","droppableId","droppableProps","isDraggingOver","border","minHeight","placeholder","DAYS","PlanBuilder","setPlans","handleAddClick","newMealPlan","handleRemoveClick","currentTarget","getAttribute","removeIndex","onDragEnd","destination","source","start","finish","allMeals","getAllMeals","defaultMeals","scroll","order","skip","disableGutters","dayList","listStyle","paddingLeft","mealHeader","mealLink","borderColor","recipeList","onLoadView","days","mealLookup","handleLoadViewClick","href","starredPlan","onSetStarred","onUpdateArchiveStatus","status","onViewShoppingList","sortedPlans","filteredPlans","archived","Container","StarBorder","handleSetStarredClick","handleArchiveClick","fontSize","letterSpacing","lineHeight","margin","textAlign","RichEditor","controls","defaultValue","initialValue","touched","onBlur","readOnly","onEditorBlur","onEditorChange","JSON","stringify","convertToRaw","getCurrentContent","backgroundColor","ingredientsList","ingredientName","typography","subtitle1","ingredientDetails","RecipeViewer","servings","Fragment","prepTime","wwPoints","getRecipeSubheader","directions","planViewer","recipeViewer","onUnloadPlanView","onUnloadRecipeView","accordionOpen","setAccordionOpen","showPlanView","showRecipeView","gutterBottom","aria-controls","exact","createFilterOptions","newIngredient","setNewIngredient","selected","setSelected","freeSolo","filterOptions","filtered","handleKey","MaterialTableResponsive","MakeUnit","abbr","conv","UNITS","RecipeIngredientsEditor","setColumns","editComponent","search","onRowAdd","HandleIsMealChange","useFormikContext","CheckboxWithLabel","Label","setFieldTouched","onUnloadView","CategoryDraggable","isNew","CategoryDroppable","CategorySorter","newList","isUpdate","allCategories","cat","getCategories","onSetDefault","handleLoadUpdateClick","AddBox","isFreeAction","boxShadow","onSubmitForm","enableReinitialize","form","userSettings","resetForm","SaveAlt","ManageUsers","backgroundImage","backgroundSize","borderRadius","flexFlow","overflowY","main","Loading","page","profile","shadows","float","About","Link","auth","submitForm","aboutLink","right","loginLink","maxHeight","progress","left","top","AboutLink","InfoOutlined","LoginLink","startIcon","ArrowBackIos","LinearProgress","includes","Notification","enqueueSnackbar","useSnackbar","notifier","onSnackbarClose","maxSnack","Theme","createTheme","lg","blueGrey","indigo","overrides","MuiDialogActions","MUIRichTextEditor","placeHolder","borderBottom","paddingBottom","subtype","defaultState","sortByName","viewChangeCounter","appLoaded","sortByTitle","sortByLastName","promiseMiddleware","next","v","currentView","getState","skipTracking","currentState","promise","response","localStorageMiddleware","window","localStorage","setItem","history","createBrowserHistory","myRouterMiddleware","routerMiddleware","createStore","combineReducers","connectRouter","composeWithDevTools","applyMiddleware","onRedirect","getItem","ThemeProvider","CssBaseline","fallback","Login","Home","ReactDOM","render","App","getElementById"],"mappings":"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","file":"static/js/main.e530815e.chunk.js","sourcesContent":["import superagentPromise from 'superagent-promise'\nimport _superagent from 'superagent'\n\nconst superagent = superagentPromise(_superagent, global.Promise)\n\nconst API_ROOT =\n  process.env.NODE_ENV === 'production'\n    ? 'https://my-plate-app.herokuapp.com/api'\n    : 'http://localhost:4000/api'\n\nconst responseBody = (res) => res.body\n\nlet token = null\nlet tokenPlugin = (req) => {\n  if (token) {\n    req.set('authorization', `Token ${token}`)\n  }\n}\n\nconst requests = {\n  // @todo update superagent-promise from v1.1.0 when available\n  // superagent-promise does not allow for body to pass, so it has been manually added to the package file\n  // This is a known issue, see: https://github.com/lightsofapollo/superagent-promise/issues/28\n  del: (url, body) =>\n    superagent\n      .del(`${API_ROOT}${url}`, body)\n      .use(tokenPlugin)\n      .then(responseBody),\n  get: (url) =>\n    superagent.get(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody),\n  post: (url, body) =>\n    superagent\n      .post(`${API_ROOT}${url}`, body)\n      .use(tokenPlugin)\n      .then(responseBody),\n  put: (url, body) =>\n    superagent\n      .put(`${API_ROOT}${url}`, body)\n      .use(tokenPlugin)\n      .then(responseBody),\n}\n\nconst Auth = {\n  current: () => requests.get('/user'),\n  login: (username, password) =>\n    requests.post('/users/login', { user: { username, password } }),\n  register: (user) => requests.post('/users', { user }),\n  save: (user) => requests.put('/user', { user }),\n}\n\nconst Categories = {\n  add: (category) => requests.post('/categories', { category }),\n  delete: (category) => requests.del(`/categories/${category.slug}`),\n  deleteMany: (slugs) =>\n    requests.del('/categories/bulk', { categories: slugs }),\n  getAll: () => requests.get('/categories'),\n  update: (category) =>\n    requests.put(`/categories/${category.slug}`, { category }),\n}\n\nconst Ingredients = {\n  add: (ingredient) => requests.post('/ingredients', { ingredient }),\n  delete: (ingredient) => requests.del(`/ingredients/${ingredient.slug}`),\n  deleteMany: (slugs) =>\n    requests.del('/ingredients/bulk', { ingredients: slugs }),\n  getAll: () => requests.get('/ingredients'),\n  update: (ingredient) =>\n    requests.put(`/ingredients/${ingredient.slug}`, { ingredient }),\n}\n\nconst Meals = {\n  add: (meal) => requests.post('/meals', { meal }),\n  delete: (meal) => requests.del(`/meals/${meal.slug}`),\n  deleteMany: (slugs) => requests.del('/meals/bulk', { meals: slugs }),\n  getAll: () => requests.get('/meals'),\n  update: (meal) => requests.put(`/meals/${meal.slug}`, { meal }),\n}\n\nconst Plans = {\n  add: (plan) => requests.post('/plans', { plan }),\n  delete: (plan) => requests.del(`/plans/${plan.slug}`),\n  deleteMany: (plans) => requests.del('/plans/bulk', { plans }),\n  getAll: () => requests.get('/plans'),\n  update: (plan) => requests.put(`/plans/${plan.slug}`, { plan }),\n}\n\nconst Recipes = {\n  add: (recipe) => requests.post('/recipes', { recipe }),\n  delete: (recipe) => requests.del(`/recipes/${recipe.slug}`),\n  deleteMany: (slugs) => requests.del('/recipes/bulk', { recipes: slugs }),\n  getAll: () => requests.get('/recipes'),\n  update: (recipe) => requests.put(`/recipes/${recipe.slug}`, { recipe }),\n}\n\nconst Settings = {\n  update: (settings) => requests.put('/user/settings', { settings }),\n}\n\nconst Stores = {\n  add: (store) => requests.post('/stores', { store }),\n  delete: (store) => requests.del(`/stores/${store.slug}`),\n  getAll: () => requests.get('/stores'),\n  update: (store) => requests.put(`/stores/${store.slug}`, { store }),\n}\n\nconst Users = {\n  getAll: () => requests.get('/users?role=subscriber'),\n  delete: (user) => requests.del(`/users/subscriber/${user.username}`),\n  update: (user) => requests.put(`/users/${user.username}`, { user }),\n}\n\nexport default {\n  Auth,\n  Categories,\n  Ingredients,\n  Meals,\n  Plans,\n  Recipes,\n  Settings,\n  Stores,\n  Users,\n  setToken: (_token) => {\n    token = _token\n  },\n}\n","module.exports = __webpack_public_path__ + \"static/media/plate-background.c6d96dd4.png\";","module.exports = __webpack_public_path__ + \"static/media/plate-logo.1dcb2d72.png\";","module.exports = __webpack_public_path__ + \"static/media/doc-may-profile.f927335d.jpg\";","import React from 'react'\nimport { Fab, makeStyles } from '@material-ui/core'\nimport { Add } from '@material-ui/icons'\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n}))\n\nconst FabAdd = (props) => {\n  const classes = useStyles()\n\n  return (\n    <Fab color='primary' onClick={props.onClick} variant='extended' {...props}>\n      <Add className={classes.icon} />\n      {props.prefix ?? 'Add'} {props.item}\n    </Fab>\n  )\n}\n\nexport default FabAdd\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Alert from '@material-ui/lab/Alert'\n\nconst useStyles = makeStyles((theme) => ({\n  alert: {\n    'width': '100%',\n    '&:not(:last-of-type)': {\n      marginBottom: theme.spacing(1),\n    },\n  },\n  alertList: {\n    marginBottom: theme.spacing(2),\n  },\n}))\n\nconst ListErrors = ({ errors }) => {\n  const classes = useStyles()\n\n  if (errors) {\n    return (\n      <div className={classes.alertList}>\n        {Object.keys(errors).map((key) => {\n          const readableKey = key\n            .replace(/([a-z0-9])([A-Z])/g, '$1 $2')\n            .toLowerCase()\n          return (\n            <Alert className={classes.alert} severity='error' key={key}>\n              {readableKey} {errors[key]}\n            </Alert>\n          )\n        })}\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport default ListErrors\n","export const APP_LOAD = 'APP_LOAD'\nexport const REDIRECT = 'REDIRECT'\n\nexport const ASYNC_START = 'ASYNC_START'\nexport const ASYNC_END = 'ASYNC_END'\n\nexport const LOGIN = 'LOGIN'\nexport const LOGIN_PAGE_UNLOADED = 'LOGIN_PAGE_UNLOADED'\nexport const LOGOUT = 'LOGOUT'\n\nexport const REGISTER = 'REGISTER'\nexport const REGISTER_PAGE_UNLOADED = 'REGISTER_PAGE_UNLOADED'\n\nexport const SETTINGS_PAGE_UNLOADED = 'SETTINGS_PAGE_UNLOADED'\nexport const SETTINGS_SAVED = 'SETTINGS_SAVED'\n\nexport const NAV_LOADED = 'NAV_LOADED'\nexport const NAV_UNLOADED = 'NAV_UNLOADED'\nexport const NAV_TAB_CHANGE = 'NAV_TAB_CHANGE'\n\nexport const ALERT_CLOSED = 'ALERT_CLOSED'\nexport const SNACKBAR_CLOSED = 'SNACKBAR_CLOSED'\n\nexport const ADD_USER = 'ADD_USER'\nexport const DELETE_USER = 'DELETE_USER'\nexport const MANAGE_USERS_PAGE_LOADED = 'MANAGE_USERS_PAGE_LOADED'\nexport const MANAGE_USERS_PAGE_UNLOADED = 'MANAGE_USERS_PAGE_UNLOADED'\nexport const USER_DIALOG_UNLOADED = 'USER_DIALOG_UNLOADED'\nexport const UPDATE_USER = 'UPDATE_USER'\n\nexport const ADD_CATEGORY = 'ADD_CATEGORY'\nexport const DELETE_CATEGORY = 'DELETE_CATEGORY'\nexport const DELETE_CATEGORIES = 'DELETE_CATEGORIES'\nexport const CATEGORY_DIALOG_UNLOADED = 'CATEGORY_DIALOG_UNLOADED'\nexport const CATEGORIES_PAGE_LOADED = 'CATEGORIES_PAGE_LOADED'\nexport const CATEGORIES_PAGE_UNLOADED = 'CATEGORIES_PAGE_UNLOADED'\nexport const UPDATE_CATEGORY = 'UPDATE_CATEGORY'\n\nexport const ADD_INGREDIENT = 'ADD_INGREDIENT'\nexport const DELETE_INGREDIENT = 'DELETE_INGREDIENT'\nexport const DELETE_INGREDIENTS = 'DELETE_INGREDIENTS'\nexport const INGREDIENT_DIALOG_UNLOADED = 'INGREDIENT_DIALOG_UNLOADED'\nexport const INGREDIENTS_PAGE_LOADED = 'INGREDIENTS_PAGE_LOADED'\nexport const INGREDIENTS_PAGE_UNLOADED = 'INGREDIENTS_PAGE_UNLOADED'\nexport const UPDATE_INGREDIENT = 'UPDATE_INGREDIENT'\n\nexport const ADD_RECIPE = 'ADD_RECIPE'\nexport const DELETE_RECIPE = 'DELETE_RECIPE'\nexport const DELETE_RECIPES = 'DELETE_RECIPES'\nexport const RECIPE_DIALOG_LOADED = 'RECIPE_DIALOG_LOADED'\nexport const RECIPE_DIALOG_UNLOADED = 'RECIPE_DIALOG_UNLOADED'\nexport const RECIPE_INGREDIENT_ONBLUR = 'RECIPE_INGREDIENT_ONBLUR'\nexport const RECIPE_VIEW_LOADED = 'RECIPE_VIEW_LOADED'\nexport const RECIPE_VIEW_UNLOADED = 'RECIPE_VIEW_UNLOADED'\nexport const RECIPES_PAGE_LOADED = 'RECIPES_PAGE_LOADED'\nexport const RECIPES_PAGE_UNLOADED = 'RECIPES_PAGE_UNLOADED'\nexport const UPDATE_RECIPE = 'UPDATE_RECIPE'\n\nexport const ADD_MEAL = 'ADD_MEAL'\nexport const DELETE_MEAL = 'DELETE_MEAL'\nexport const DELETE_MEALS = 'DELETE_MEALS'\nexport const MEAL_DIALOG_LOADED = 'MEAL_DIALOG_LOADED'\nexport const MEAL_DIALOG_UNLOADED = 'MEAL_DIALOG_UNLOADED'\nexport const MEALS_PAGE_LOADED = 'MEALS_PAGE_LOADED'\nexport const MEALS_PAGE_UNLOADED = 'MEALS_PAGE_UNLOADED'\nexport const UPDATE_MEAL = 'UPDATE_MEAL'\n\nexport const ADD_PLAN = 'ADD_PLAN'\nexport const DELETE_PLAN = 'DELETE_PLAN'\nexport const DELETE_PLANS = 'DELETE_PLANS'\nexport const PLAN_DIALOG_LOADED = 'PLAN_DIALOG_LOADED'\nexport const PLAN_DIALOG_UNLOADED = 'PLAN_DIALOG_UNLOADED'\nexport const PLAN_LIST_COPIED = 'PLAN_LIST_COPIED'\nexport const PLAN_LIST_DIALOG_LOADED = 'PLAN_LIST_DIALOG_LOADED'\nexport const PLAN_LIST_DIALOG_UNLOADED = 'PLAN_LIST_DIALOG_UNLOADED'\nexport const PLAN_VIEW_LOADED = 'PLAN_VIEW_LOADED'\nexport const PLAN_VIEW_UNLOADED = 'PLAN_VIEW_UNLOADED'\nexport const PLANS_PAGE_LOADED = 'PLANS_PAGE_LOADED'\nexport const PLANS_PAGE_UNLOADED = 'PLANS_PAGE_UNLOADED'\nexport const SET_STARRED_PLAN = 'SET_STARRED_PLAN'\nexport const UPDATE_PLAN = 'UPDATE_PLAN'\nexport const UPDATE_PLAN_ARCHIVE_STATUS = 'UPDATE_PLAN_ARCHIVE_STATUS'\n\nexport const ADD_STORE = 'ADD_STORE'\nexport const DELETE_STORE = 'DELETE_STORE'\nexport const SET_DEFAULT_STORE = 'SET_DEFAULT_STORE'\nexport const STORE_DIALOG_LOADED = 'STORE_DIALOG_LOADED'\nexport const STORE_DIALOG_UNLOADED = 'STORE_DIALOG_UNLOADED'\nexport const STORES_PAGE_LOADED = 'STORES_PAGE_LOADED'\nexport const STORES_PAGE_UNLOADED = 'STORES_PAGE_UNLOADED'\nexport const UPDATE_STORE = 'UPDATE_STORE'\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\n\nimport FabAdd from '../FabAdd'\nimport ListErrors from '../ListErrors'\nimport agent from '../../agent'\n\nimport {\n  ADD_CATEGORY,\n  CATEGORY_DIALOG_UNLOADED,\n  UPDATE_CATEGORY,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  addIcon: {\n    marginRight: theme.spacing(1),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.categories,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAdd: (category) =>\n    dispatch({\n      type: ADD_CATEGORY,\n      payload: agent.Categories.add(category),\n      snackbar: { message: 'Category added', variant: 'success' },\n    }),\n  onExit: () => dispatch({ type: CATEGORY_DIALOG_UNLOADED }),\n  onUpdate: (category) =>\n    dispatch({\n      type: UPDATE_CATEGORY,\n      payload: agent.Categories.update(category),\n      snackbar: { message: 'Category updated', variant: 'success' },\n    }),\n})\n\nconst CategoryDialog = ({\n  errors,\n  category,\n  inProgress,\n  onAdd,\n  onExit,\n  onUpdate,\n}) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmitAdd = (values) => {\n    onAdd({ ...values })\n  }\n\n  const handleSubmitUpdate = (values) => {\n    onUpdate({ ...category, ...values })\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) setOpen(false)\n  }, [inProgress])\n\n  return (\n    <>\n      <FabAdd item='category' onClick={handleClickOpen} />\n\n      <Dialog\n        fullScreen={fullScreen}\n        maxWidth='lg'\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onFocus={(ev) => ev.stopPropagation()}\n        open={open}\n        TransitionProps={{ onExit: onExit }}\n      >\n        <Formik\n          initialValues={{\n            name: category?.name || '',\n            notes: category?.notes || '',\n          }}\n          validationSchema={Yup.object({\n            name: Yup.string().required('Required'),\n            notes: Yup.string(),\n          })}\n          onSubmit={async (values) => {\n            category ? handleSubmitUpdate(values) : handleSubmitAdd(values)\n          }}\n        >\n          <Form>\n            <DialogTitle>\n              {category ? 'Edit category' : 'Add category'}\n            </DialogTitle>\n            <DialogContent>\n              <ListErrors errors={errors} />\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <Field\n                    autoFocus\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Category Name'\n                    name='name'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Category Notes'\n                    name='notes'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button\n                disabled={inProgress}\n                color='primary'\n                type='submit'\n                variant='contained'\n              >\n                {category\n                  ? inProgress\n                    ? 'Updating...'\n                    : 'Update'\n                  : inProgress\n                  ? 'Adding...'\n                  : 'Add'}\n              </Button>\n              <Button\n                disabled={inProgress}\n                onClick={handleClose}\n                variant='contained'\n              >\n                Cancel\n              </Button>\n            </DialogActions>\n          </Form>\n        </Formik>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryDialog)\n","import React from 'react'\nimport MaterialTable, { MTableEditRow } from '@material-table/core'\n\n/**\n * This is a fix for an issue with material-table that causes the enter keypress to\n * trigger a row action rather than act to control the input elements (i.e., instead\n * of selecting an option from a select element, pressing enter causes the form to\n * submit without the option being selected.)\n *\n * Source: https://github.com/mbrn/material-table/pull/2008#issuecomment-662529834\n */\nconst MaterialTableFix = (props) => {\n  return (\n    <MaterialTable\n      components={{\n        EditRow: (props) => (\n          <MTableEditRow\n            {...props}\n            onKeyDown={(e) => {\n              if (e.keyCode === 27)\n                props.onEditingCanceled(props.mode, props.data)\n            }}\n          />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\n\nexport default MaterialTableFix\n","import React from 'react'\nimport { IconButton, Tooltip, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  actionButton: {\n    color: theme.palette.text.disabled,\n  },\n}))\n\nconst ActionButton = (props) => {\n  const classes = useStyles()\n\n  const passedClasses = props.className || ''\n\n  const handleClick = (ev) => {\n    ev.stopPropagation()\n    props.onClick()\n  }\n\n  return (\n    <Tooltip arrow enterTouchDelay={0} title={props.action}>\n      <IconButton\n        aria-label={props.action}\n        className={`${classes.actionButton} ${passedClasses}`}\n        onClick={handleClick}\n        onFocus={(ev) => ev.stopPropagation()}\n        size={props.size}\n      >\n        {props.children}\n      </IconButton>\n    </Tooltip>\n  )\n}\n\nexport default ActionButton\n","import React, { useState } from 'react'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from '@material-ui/core'\nimport { Delete } from '@material-ui/icons'\n\nimport ActionButton from './ActionButton'\n\nconst BulkDeleteConfirmationAlert = ({ data, name, onDelete }) => {\n  const [open, setOpen] = useState(false)\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmit = () => {\n    setOpen(false)\n    onDelete(data)\n  }\n\n  return (\n    <>\n      <ActionButton\n        action={'Delete selected ' + name + 's'}\n        onClick={handleClickOpen}\n      >\n        <Delete />\n      </ActionButton>\n      <Dialog\n        open={open}\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onFocus={(ev) => ev.stopPropagation()}\n      >\n        <DialogTitle>Delete selected {name}s?</DialogTitle>\n        <DialogContent>\n          <DialogContentText component='div'>\n            This action will permanently delete all of the selected {name}s.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={handleSubmit}\n            color='secondary'\n            variant='contained'\n            autoFocus\n          >\n            Delete {name}s\n          </Button>\n          <Button onClick={handleClose} variant='contained'>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default BulkDeleteConfirmationAlert\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { MTableAction } from 'material-table'\n\n// @todo remove fix\n// import MaterialTable from '@material-table/core'\nimport MaterialTableFix from '../MaterialTableFix'\nimport BulkDeleteConfirmationAlert from '../BulkDeleteConfirmationAlert'\n\nimport agent from '../../agent'\n\nimport {\n  DELETE_CATEGORY,\n  DELETE_CATEGORIES,\n  UPDATE_CATEGORY,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  ...state.categories,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (category) =>\n    dispatch({\n      type: DELETE_CATEGORY,\n      payload: agent.Categories.delete(category),\n      snackbar: { message: 'Category deleted', variant: 'success' },\n    }),\n  onDeleteMany: (slugs) =>\n    dispatch({\n      type: DELETE_CATEGORIES,\n      payload: agent.Categories.deleteMany(slugs),\n      snackbar: {\n        message: `${slugs.length} categor${\n          slugs.length > 1 ? 'ies' : 'y'\n        } deleted`,\n        variant: 'success',\n      },\n    }),\n  onUpdate: (category) =>\n    dispatch({\n      type: UPDATE_CATEGORY,\n      payload: agent.Categories.update(category),\n      snackbar: { message: 'Category updated', variant: 'success' },\n    }),\n})\n\nconst CategoriesTable = ({ categories, onDelete, onDeleteMany, onUpdate }) => {\n  const [data, setData] = useState([])\n\n  const [columns] = useState([\n    { title: 'Name', field: 'name' },\n    { title: 'Notes', field: 'notes' },\n  ])\n\n  const handleDeleteManyClick = (data) => {\n    const slugs = data.map((row) => row.slug)\n    onDeleteMany(slugs)\n  }\n\n  useEffect(() => {\n    setData(categories)\n  }, [categories])\n\n  return (\n    <MaterialTableFix\n      title='Categories'\n      columns={columns}\n      data={data}\n      components={{\n        Action: (props) => {\n          if (typeof props.action.icon === 'function') {\n            return props.action.icon(props.data)\n          }\n          return <MTableAction {...props} />\n        },\n      }}\n      localization={{\n        body: {\n          emptyDataSourceMessage: 'No categories found',\n          editRow: {\n            deleteText: 'Delete category? This action cannot be undone.',\n          },\n        },\n      }}\n      options={{\n        actionsColumnIndex: -1,\n        paging: false,\n        selection: true,\n        toolbar: true,\n      }}\n      actions={[\n        {\n          icon: (data) => (\n            <BulkDeleteConfirmationAlert\n              data={data}\n              name='categorie'\n              onDelete={handleDeleteManyClick}\n            />\n          ),\n          position: 'toolbarOnSelect',\n          tooltip: 'Delete selected categories',\n        },\n      ]}\n      editable={{\n        onRowUpdate: (newData, oldData) =>\n          new Promise((resolve, reject) => {\n            const dataUpdate = [...data]\n            const index = oldData.tableData.id\n            dataUpdate[index] = newData\n            setData([...dataUpdate])\n            onUpdate(newData)\n            resolve()\n          }),\n        onRowDelete: (oldData) =>\n          new Promise((resolve, reject) => {\n            const newData = [...data]\n            const index = oldData.tableData.id\n            newData.splice(index, 1)\n            setData([...newData])\n            onDelete(oldData)\n            resolve()\n          }),\n      }}\n    />\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoriesTable)\n","import React from 'react'\nimport { Grid, Typography, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  headerLeft: {\n    alignItems: 'center',\n    display: 'flex',\n  },\n  headerRight: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  pageHeader: {\n    marginBottom: theme.spacing(4),\n  },\n}))\n\nconst PageHeader = ({ children, title }) => {\n  const classes = useStyles()\n\n  return (\n    <Grid container spacing={2} className={classes.pageHeader}>\n      <Grid item xs={12} md={6} className={classes.headerLeft}>\n        <Typography variant='h4'>{title}</Typography>\n      </Grid>\n      <Grid item xs={12} md={6} className={classes.headerRight}>\n        {children}\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default PageHeader\n","import React from 'react'\nimport { CircularProgress, Typography, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  message: {\n    fontStyle: 'italic',\n  },\n  root: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'center',\n    minWidth: theme.spacing(40),\n  },\n  spinner: {\n    marginRight: theme.spacing(2),\n  },\n}))\n\nconst Spinner = ({ message }) => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress className={classes.spinner} />\n      <Typography className={classes.message}>\n        {message || 'Loading...'}\n      </Typography>\n    </div>\n  )\n}\n\nexport default Spinner\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Button, makeStyles } from '@material-ui/core'\n\nimport CategoryDialog from './CategoryDialog'\nimport CategoriesTable from './CategoriesTable'\nimport PageHeader from '../PageHeader'\nimport Spinner from '../Spinner'\nimport agent from '../../agent'\n\nimport {\n  CATEGORIES_PAGE_LOADED,\n  CATEGORIES_PAGE_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    'marginRight': theme.spacing(2),\n    '& a': {\n      color: 'inherit',\n      textDecoration: 'none',\n    },\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.categories,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: () =>\n    dispatch({\n      type: CATEGORIES_PAGE_LOADED,\n      payload: agent.Categories.getAll(),\n    }),\n  onUnload: () => dispatch({ type: CATEGORIES_PAGE_UNLOADED }),\n})\n\nconst Categories = ({ onLoad, onUnload, pageLoaded }) => {\n  const classes = useStyles()\n\n  useEffect(() => {\n    onLoad()\n\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  return (\n    <>\n      <PageHeader title='Manage Categories'>\n        <Button className={classes.button} color='secondary'>\n          <Link to='/ingredients'>Manage ingredients</Link>\n        </Button>\n        <CategoryDialog />\n      </PageHeader>\n      {pageLoaded ? <CategoriesTable /> : <Spinner />}\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories)\n","import React from 'react'\nimport logo from '../images/plate-logo.png'\n\nconst Logo = (props) => {\n  return <img alt='Chem Cash Logo' src={logo} {...props} />\n}\n\nexport default Logo\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport {\n  AppBar,\n  Button,\n  Container,\n  Toolbar,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\n\nimport Logo from '../components/Logo'\n\nimport { LOGOUT } from '../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    color: 'white',\n    flexGrow: 1,\n  },\n  logo: {\n    height: 65,\n    marginTop: theme.spacing(2),\n    marginRight: theme.spacing(3),\n    marginBottom: theme.spacing(2),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  navTabValue: state.nav.navTabValue,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onClickLogout: () => dispatch({ type: LOGOUT }),\n})\n\nconst Header = (props) => {\n  const classes = useStyles()\n  const title = props.navTabValue\n\n  if (props.currentUser) {\n    return (\n      <AppBar position='static'>\n        <Container>\n          <Toolbar>\n            <Logo className={classes.logo} />\n            <Typography variant='h5' align='center' className={classes.title}>\n              {title && title.charAt(0).toUpperCase() + title.slice(1)}\n            </Typography>\n            <Button color='inherit' onClick={props.onClickLogout}>\n              Logout\n            </Button>\n          </Toolbar>\n        </Container>\n      </AppBar>\n    )\n  } else {\n    return null\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  MenuItem,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\n\nimport FabAdd from '../FabAdd'\nimport ListErrors from '../ListErrors'\nimport agent from '../../agent'\n\nimport {\n  ADD_INGREDIENT,\n  INGREDIENT_DIALOG_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    [theme.breakpoints.up('lg')]: {\n      maxWidth: '420px',\n    },\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.ingredients,\n  categories: state.categories.categories,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAdd: (ingredient) =>\n    dispatch({\n      type: ADD_INGREDIENT,\n      payload: agent.Ingredients.add(ingredient),\n      snackbar: { message: 'Ingredient added', variant: 'success' },\n    }),\n  onExit: () => dispatch({ type: INGREDIENT_DIALOG_UNLOADED }),\n})\n\nconst IngredientDialog = ({\n  categories,\n  errors,\n  hideButton,\n  ingredient,\n  inProgress,\n  isOpen,\n  onAdd,\n  onClose,\n  onExit,\n}) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleExit = () => {\n    onExit()\n    onClose && onClose()\n  }\n\n  const handleSubmitAdd = (values) => {\n    onAdd({ ...values })\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) setOpen(false)\n  }, [inProgress])\n\n  useEffect(() => {\n    // Allow for higher-order component control over the visibility of the dialog\n    setOpen(!!isOpen)\n  }, [isOpen])\n\n  return (\n    <>\n      {!hideButton && <FabAdd item='ingredient' onClick={handleClickOpen} />}\n\n      <Dialog\n        classes={{ paper: classes.paper }}\n        fullScreen={fullScreen}\n        fullWidth\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onFocus={(ev) => ev.stopPropagation()}\n        open={open}\n        TransitionProps={{ onExit: handleExit }}\n      >\n        <Formik\n          initialValues={{\n            category: ingredient?.category || '',\n            name: ingredient?.name || '',\n            notes: ingredient?.notes || '',\n          }}\n          validationSchema={Yup.object({\n            category: Yup.string().required('Required'),\n            name: Yup.string().required('Required'),\n            notes: Yup.string(),\n          })}\n          onSubmit={async (values) => {\n            handleSubmitAdd(values)\n          }}\n        >\n          <Form>\n            <DialogTitle>Add ingredient</DialogTitle>\n            <DialogContent>\n              <ListErrors errors={errors} />\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <Field\n                    autoFocus\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    id='name'\n                    label='Ingredient Name'\n                    name='name'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    id='category'\n                    label='Ingredient Category'\n                    name='category'\n                    type='select'\n                    select\n                    fullWidth\n                  >\n                    {categories.map((category) => (\n                      <MenuItem key={category._id} value={category._id}>\n                        {category.name}\n                      </MenuItem>\n                    ))}\n                  </Field>\n                </Grid>\n                <Grid item xs={12}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    id='notes'\n                    label='Ingredient Notes'\n                    name='notes'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button\n                disabled={inProgress}\n                color='primary'\n                type='submit'\n                variant='contained'\n              >\n                {inProgress ? 'Adding...' : 'Add'}\n              </Button>\n              <Button\n                disabled={inProgress}\n                onClick={handleClose}\n                variant='contained'\n              >\n                Cancel\n              </Button>\n            </DialogActions>\n          </Form>\n        </Formik>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IngredientDialog)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { MTableAction } from 'material-table'\n\n// @todo remove fix\n// import MaterialTable from '@material-table/core'\nimport MaterialTableFix from '../MaterialTableFix'\nimport BulkDeleteConfirmationAlert from '../BulkDeleteConfirmationAlert'\n\nimport agent from '../../agent'\n\nimport {\n  DELETE_INGREDIENT,\n  DELETE_INGREDIENTS,\n  UPDATE_INGREDIENT,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  categories: state.categories.categories,\n  ingredients: state.ingredients.ingredients,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (ingredient) =>\n    dispatch({\n      type: DELETE_INGREDIENT,\n      payload: agent.Ingredients.delete(ingredient),\n      snackbar: { message: 'Ingredient deleted', variant: 'success' },\n    }),\n  onDeleteMany: (slugs) =>\n    dispatch({\n      type: DELETE_INGREDIENTS,\n      payload: agent.Ingredients.deleteMany(slugs),\n      snackbar: {\n        message: `${slugs.length} ingredient${\n          slugs.length > 1 ? 's' : ''\n        } deleted`,\n        variant: 'success',\n      },\n    }),\n  onUpdate: (ingredient) =>\n    dispatch({\n      type: UPDATE_INGREDIENT,\n      payload: agent.Ingredients.update(ingredient),\n      snackbar: { message: 'Ingredient updated', variant: 'success' },\n    }),\n})\n\nconst IngredientsTable = ({\n  categories,\n  ingredients,\n  onDelete,\n  onDeleteMany,\n  onUpdate,\n}) => {\n  const [data, setData] = useState([])\n\n  const [columns] = useState([\n    { title: 'Name', field: 'name' },\n    {\n      title: 'Category',\n      field: 'category',\n      lookup: categories.reduce(\n        (obj, item) => ((obj[item._id] = item.name), obj),\n        {}\n      ),\n    },\n    { title: 'Notes', field: 'notes' },\n  ])\n\n  const handleDeleteManyClick = (data) => {\n    const slugs = data.map((row) => row.slug)\n    onDeleteMany(slugs)\n  }\n\n  useEffect(() => {\n    setData(ingredients)\n  }, [ingredients])\n\n  return (\n    <MaterialTableFix\n      title='Ingredients'\n      columns={columns}\n      data={data}\n      components={{\n        Action: (props) => {\n          if (typeof props.action.icon === 'function') {\n            return props.action.icon(props.data)\n          }\n          return <MTableAction {...props} />\n        },\n      }}\n      localization={{\n        body: {\n          emptyDataSourceMessage: 'No ingredients found',\n          editRow: {\n            deleteText: 'Delete ingredient? This action cannot be undone.',\n          },\n        },\n      }}\n      options={{\n        actionsColumnIndex: -1,\n        paging: false,\n        selection: true,\n        toolbar: true,\n      }}\n      actions={[\n        {\n          icon: (data) => (\n            <BulkDeleteConfirmationAlert\n              data={data}\n              name='ingredient'\n              onDelete={handleDeleteManyClick}\n            />\n          ),\n          position: 'toolbarOnSelect',\n          tooltip: 'Delete selected ingredients',\n        },\n      ]}\n      editable={{\n        onRowUpdate: (newData, oldData) =>\n          new Promise((resolve, reject) => {\n            const dataUpdate = [...data]\n            const index = oldData.tableData.id\n            dataUpdate[index] = newData\n            setData([...dataUpdate])\n            onUpdate(newData)\n            resolve()\n          }),\n        onRowDelete: (oldData) =>\n          new Promise((resolve, reject) => {\n            const newData = [...data]\n            const index = oldData.tableData.id\n            newData.splice(index, 1)\n            setData([...newData])\n            onDelete(oldData)\n            resolve()\n          }),\n      }}\n    />\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IngredientsTable)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Button, makeStyles } from '@material-ui/core'\n\nimport IngredientDialog from './IngredientDialog'\nimport IngredientsTable from './IngredientsTable'\nimport PageHeader from '../PageHeader'\nimport Spinner from '../Spinner'\nimport agent from '../../agent'\n\nimport {\n  INGREDIENTS_PAGE_LOADED,\n  INGREDIENTS_PAGE_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    'marginRight': theme.spacing(2),\n    '& a': {\n      color: 'inherit',\n      textDecoration: 'none',\n    },\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.ingredients,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: () =>\n    dispatch({\n      type: INGREDIENTS_PAGE_LOADED,\n      payload: Promise.all([\n        agent.Ingredients.getAll(),\n        agent.Categories.getAll(),\n      ]),\n    }),\n  onUnload: () => dispatch({ type: INGREDIENTS_PAGE_UNLOADED }),\n})\n\nconst Ingredients = ({ onLoad, onUnload, pageLoaded }) => {\n  const classes = useStyles()\n\n  useEffect(() => {\n    onLoad()\n\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  return (\n    <>\n      <PageHeader title='Manage Ingredients'>\n        <Button className={classes.button} color='secondary'>\n          <Link to='/ingredients/categories'>Manage categories</Link>\n        </Button>\n        <IngredientDialog />\n      </PageHeader>\n      {pageLoaded ? <IngredientsTable /> : <Spinner />}\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Ingredients)\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Fab,\n  Grid,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Add, Edit } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport ListErrors from '../ListErrors'\nimport agent from '../../agent'\n\nimport {\n  ADD_USER,\n  USER_DIALOG_UNLOADED,\n  UPDATE_USER,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.users,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAdd: (user) =>\n    dispatch({\n      type: ADD_USER,\n      payload: agent.Auth.register(user),\n      snackbar: { message: 'User added', variant: 'success' },\n    }),\n  onExit: () => dispatch({ type: USER_DIALOG_UNLOADED }),\n  onUpdate: (user) =>\n    dispatch({\n      type: UPDATE_USER,\n      payload: agent.Users.update(user),\n      snackbar: { message: 'User updated', variant: 'success' },\n    }),\n})\n\nconst UserDialog = ({ errors, inProgress, onAdd, onExit, onUpdate, user }) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmitAdd = (values) => {\n    onAdd({ ...values, role: 'subscriber' })\n  }\n\n  const handleSubmitUpdate = (values) => {\n    onUpdate({ ...user, ...values })\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) setOpen(false)\n  }, [inProgress])\n\n  return (\n    <>\n      {user ? (\n        <ActionButton action='Edit user' onClick={handleClickOpen}>\n          <Edit />\n        </ActionButton>\n      ) : (\n        <Fab color='primary' onClick={handleClickOpen} variant='extended'>\n          <Add className={classes.icon} />\n          Add user\n        </Fab>\n      )}\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        onClick={(ev) => ev.stopPropagation()}\n        onFocus={(ev) => ev.stopPropagation()}\n        TransitionProps={{ onExit: onExit }}\n      >\n        <Formik\n          initialValues={{\n            firstName: user?.firstName || '',\n            lastName: user?.lastName || '',\n            username: user?.username || '',\n            password: '',\n          }}\n          validationSchema={Yup.object({\n            firstName: Yup.string().required('Required'),\n            lastName: Yup.string().required('Required'),\n            username: Yup.string().required('Required'),\n            password: Yup.string().required(!user ? 'Required' : ''),\n          })}\n          onSubmit={async (values) => {\n            user ? handleSubmitUpdate(values) : handleSubmitAdd(values)\n          }}\n        >\n          <Form>\n            <DialogTitle>{user ? 'Edit User' : 'Add User'}</DialogTitle>\n            <DialogContent>\n              <ListErrors errors={errors} />\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    autoFocus={user ? false : true}\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='First Name'\n                    name='firstName'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Last Name'\n                    name='lastName'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={!!user || inProgress}\n                    label='Username'\n                    name='username'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Password'\n                    name='password'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button\n                color='primary'\n                disabled={inProgress}\n                type='submit'\n                variant='contained'\n              >\n                {user\n                  ? inProgress\n                    ? 'Updating...'\n                    : 'Update'\n                  : inProgress\n                  ? 'Adding...'\n                  : 'Add'}\n              </Button>\n              <Button\n                disabled={inProgress}\n                onClick={handleClose}\n                variant='contained'\n              >\n                Cancel\n              </Button>\n            </DialogActions>\n          </Form>\n        </Formik>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserDialog)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from '@material-ui/core'\nimport { Delete } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport agent from '../../agent'\n\nimport { DELETE_USER } from '../../constants/actionTypes'\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (user) =>\n    dispatch({\n      type: DELETE_USER,\n      payload: agent.Users.delete(user),\n      snackbar: { message: 'User deleted', variant: 'success' },\n    }),\n})\n\nconst DeleteUserAlert = ({ onDelete, user }) => {\n  const [open, setOpen] = useState(false)\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmit = () => {\n    setOpen(false)\n    onDelete(user)\n  }\n\n  return (\n    <>\n      <ActionButton action='Delete user' onClick={handleClickOpen}>\n        <Delete />\n      </ActionButton>\n      <Dialog\n        open={open}\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onFocus={(ev) => ev.stopPropagation()}\n      >\n        <DialogTitle>Delete User</DialogTitle>\n        <DialogContent>\n          <DialogContentText component='div'>\n            Are you sure you want to delete{' '}\n            <b>\n              {user.firstName} {user.lastName}\n            </b>\n            ? This action will permanently delete:\n            <ul>\n              <li>all categories</li>\n              <li>all ingredients</li>\n              <li>all meals</li>\n              <li>all plans</li>\n              <li>all recipes</li>\n              <li>all settings</li>\n              <li>all stores</li>\n            </ul>\n            associated with this user. This action <b>cannot be undone</b>.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={handleSubmit}\n            color='secondary'\n            variant='contained'\n            autoFocus\n          >\n            Delete\n          </Button>\n          <Button onClick={handleClose} variant='contained'>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(() => ({}), mapDispatchToProps)(DeleteUserAlert)\n","import React, { useState } from 'react'\nimport {\n  Chip,\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\nimport { ExpandMore } from '@material-ui/icons'\n\nimport UserDialog from './UserDialog'\nimport DeleteUserAlert from './DeleteUserAlert'\n\nconst useStyles = makeStyles((theme) => ({\n  userDetails: {\n    display: 'block',\n  },\n  userHeader: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'space-between',\n    width: '100%',\n  },\n  userUsername: {\n    marginRight: theme.spacing(2),\n    minWidth: theme.spacing(12),\n  },\n  userName: {\n    flexGrow: '1',\n  },\n}))\n\nconst UserList = ({ users }) => {\n  const [expanded, setExpanded] = useState(false)\n\n  const classes = useStyles()\n\n  const handleChange = (panel) => (ev, isExpanded) => {\n    setExpanded(isExpanded ? panel : false)\n  }\n\n  return (\n    <>\n      {users?.length > 0 ? (\n        users.map((user) => {\n          return (\n            <Accordion\n              expanded={expanded === user.username}\n              key={user.username}\n              onChange={handleChange(user.username)}\n            >\n              <AccordionSummary expandIcon={<ExpandMore />}>\n                <div className={classes.userHeader}>\n                  <Chip\n                    color='secondary'\n                    label={user.username}\n                    className={classes.userUsername}\n                  />\n                  <Typography className={classes.userName} variant='h5'>\n                    {user.firstName} {user.lastName}\n                  </Typography>\n                  <UserDialog user={user} />\n                  <DeleteUserAlert user={user} />\n                </div>\n              </AccordionSummary>\n              <AccordionDetails className={classes.userDetails}>\n                <Typography variant='h6'>Account Details</Typography>\n                <Typography>\n                  <em>Coming soon!</em>\n                </Typography>\n              </AccordionDetails>\n            </Accordion>\n          )\n        })\n      ) : (\n        <Typography>No users found</Typography>\n      )}\n    </>\n  )\n}\n\nexport default UserList\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport PageHeader from '../PageHeader'\nimport UserDialog from './UserDialog'\nimport UserList from './UserList'\nimport agent from '../../agent'\n\nimport {\n  MANAGE_USERS_PAGE_LOADED,\n  MANAGE_USERS_PAGE_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  ...state.users,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: () =>\n    dispatch({\n      type: MANAGE_USERS_PAGE_LOADED,\n      payload: agent.Users.getAll(),\n    }),\n  onUnload: () => dispatch({ type: MANAGE_USERS_PAGE_UNLOADED }),\n})\n\nconst ManageUsers = ({ onLoad, onUnload, users }) => {\n  useEffect(() => {\n    onLoad()\n\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  return (\n    <>\n      <PageHeader title={'Manage Users'}>\n        <UserDialog />\n      </PageHeader>\n      <UserList users={users} />\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageUsers)\n","import React, { useEffect, useState } from 'react'\nimport { Autocomplete } from '@material-ui/lab'\nimport { TextField } from '@material-ui/core'\nimport parse from 'autosuggest-highlight/parse'\nimport match from 'autosuggest-highlight/match'\n\nconst RecipeSelector = ({ name, onChange, recipes, values }) => {\n  const [options, setOptions] = useState([])\n\n  const mappedOptions = recipes\n    .filter((recipe) => recipe.isMeal === false)\n    .map((recipe) => {\n      const firstLetter = recipe.title[0].toUpperCase()\n      return {\n        firstLetter: /[0-9]/.test(firstLetter) ? '0-9' : firstLetter,\n        ...recipe,\n      }\n    })\n\n  const handleChange = (ev, values) => {\n    onChange(name, values)\n  }\n\n  useEffect(() => {\n    setOptions(mappedOptions)\n  }, [recipes])\n\n  return (\n    <Autocomplete\n      autoHighlight\n      autoSelect\n      getOptionLabel={(option) => {\n        return option.title\n      }}\n      getOptionSelected={(option, value) => option._id === value._id}\n      groupBy={(option) => option.firstLetter}\n      multiple\n      noOptionsText='No recipes have been created'\n      onChange={handleChange}\n      options={options}\n      renderInput={(params) => (\n        <TextField {...params} label='Recipes' variant='outlined' />\n      )}\n      renderOption={(option, { inputValue }) => {\n        const matches = match(option.title, inputValue)\n        const parts = parse(option.title, matches)\n        return (\n          <div>\n            {parts.map((part, index) => (\n              <span\n                key={index}\n                style={{ fontWeight: part.highlight ? 700 : 400 }}\n              >\n                {part.text}\n              </span>\n            ))}\n          </div>\n        )\n      }}\n      value={values}\n    />\n  )\n}\n\nexport default RecipeSelector\n","export const MEAL_TYPES = ['', 'Breakfast', 'Lunch', 'Dinner', 'Snack', 'Other']\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  MenuItem,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\n\nimport FabAdd from '../FabAdd'\nimport ListErrors from '../ListErrors'\nimport RecipeSelector from './RecipeSelector'\n\nimport {\n  ADD_MEAL,\n  MEAL_DIALOG_UNLOADED,\n  UPDATE_MEAL,\n} from '../../constants/actionTypes'\nimport { MEAL_TYPES } from '../../constants/mealTypes'\nimport agent from '../../agent'\n\nconst mapStateToProps = (state) => ({\n  ...state.meals,\n  recipes: state.recipes.recipes,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAdd: (meal) =>\n    dispatch({\n      type: ADD_MEAL,\n      payload: agent.Meals.add(meal),\n      snackbar: { message: 'Meal added', variant: 'success' },\n    }),\n  onExit: () => dispatch({ type: MEAL_DIALOG_UNLOADED }),\n  onUpdate: (meal) =>\n    dispatch({\n      type: UPDATE_MEAL,\n      payload: agent.Meals.update(meal),\n      snackbar: { message: 'Meal updated', variant: 'success' },\n    }),\n})\n\nconst MealsDialog = ({\n  editor,\n  errors,\n  inProgress,\n  onAdd,\n  onExit,\n  onUpdate,\n  recipes,\n}) => {\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n\n  const [open, setOpen] = useState(false)\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmitAdd = (values) => {\n    onAdd({ ...values })\n  }\n\n  const handleSubmitUpdate = (values) => {\n    onUpdate({ ...editor.meal, ...values })\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) setOpen(false)\n  }, [inProgress])\n\n  useEffect(() => {\n    // Open the dialog if an editor.meal object is defined\n    setOpen(!!editor.meal)\n  }, [editor.meal])\n\n  return (\n    <>\n      <FabAdd item='meal' onClick={handleClickOpen} />\n\n      <Dialog\n        fullWidth\n        fullScreen={fullScreen}\n        maxWidth='md'\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onFocus={(ev) => ev.stopPropagation()}\n        open={open}\n        TransitionProps={{\n          onExit: onExit,\n        }}\n      >\n        <Formik\n          initialValues={{\n            title: editor.meal?.title || '',\n            recipes: editor.meal?.recipes || [],\n            mealType: editor.meal?.mealType || '',\n            notes: editor.meal?.notes || '',\n          }}\n          validationSchema={Yup.object({\n            title: Yup.string().required('Required'),\n            recipes: Yup.array(),\n            mealType: Yup.string().required('Required'),\n            notes: Yup.string(),\n          })}\n          onSubmit={async (values) => {\n            editor.meal ? handleSubmitUpdate(values) : handleSubmitAdd(values)\n          }}\n        >\n          {(formik) => (\n            <Form>\n              <DialogTitle>\n                {editor.meal ? 'Update meal' : 'Add meal'}\n              </DialogTitle>\n              <DialogContent>\n                <ListErrors errors={errors} />\n                <Grid container spacing={2}>\n                  <Grid item xs={12}>\n                    <Field\n                      autoFocus={!editor.meal}\n                      component={TextField}\n                      disabled={inProgress}\n                      id='title'\n                      label='Meal Title'\n                      name='title'\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Field\n                      component={TextField}\n                      disabled={inProgress}\n                      id='mealType'\n                      label='Meal Type'\n                      name='mealType'\n                      type='select'\n                      select\n                      fullWidth\n                    >\n                      {MEAL_TYPES.map((name) => {\n                        const value = name.toLowerCase()\n                        return (\n                          <MenuItem key={value} value={value}>\n                            {name}\n                          </MenuItem>\n                        )\n                      })}\n                    </Field>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Field\n                      component={TextField}\n                      disabled={inProgress}\n                      id='notes'\n                      label='Notes'\n                      name='notes'\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <RecipeSelector\n                      onChange={formik.setFieldValue}\n                      name='recipes'\n                      recipes={recipes}\n                      values={formik.values.recipes}\n                    />\n                  </Grid>\n                </Grid>\n              </DialogContent>\n              <DialogActions>\n                <Button\n                  color='primary'\n                  disabled={inProgress}\n                  type='submit'\n                  variant='contained'\n                >\n                  {editor.meal\n                    ? inProgress\n                      ? 'Updating...'\n                      : 'Update'\n                    : inProgress\n                    ? 'Adding...'\n                    : 'Add'}\n                </Button>\n                <Button\n                  disabled={inProgress}\n                  onClick={handleClose}\n                  variant='contained'\n                >\n                  Cancel\n                </Button>\n              </DialogActions>\n            </Form>\n          )}\n        </Formik>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MealsDialog)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport MaterialTable, { MTableAction } from '@material-table/core'\n\nimport BulkDeleteConfirmationAlert from '../BulkDeleteConfirmationAlert'\n\nimport agent from '../../agent'\n\nimport {\n  DELETE_MEAL,\n  DELETE_MEALS,\n  MEAL_DIALOG_LOADED,\n} from '../../constants/actionTypes'\nimport { MEAL_TYPES } from '../../constants/mealTypes'\n\nconst mapStateToProps = (state) => ({\n  meals: state.meals.meals,\n  recipes: state.recipes.recipes,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (meal) =>\n    dispatch({\n      type: DELETE_MEAL,\n      payload: agent.Meals.delete(meal),\n      snackbar: { message: 'Meal deleted', variant: 'success' },\n    }),\n  onDeleteMany: (slugs) =>\n    dispatch({\n      type: DELETE_MEALS,\n      payload: agent.Meals.deleteMany(slugs),\n      snackbar: {\n        message: `${slugs.length} meal${slugs.length > 1 ? 's' : ''} deleted`,\n        variant: 'success',\n      },\n    }),\n  onLoadUpdate: (meal) => dispatch({ type: MEAL_DIALOG_LOADED, meal }),\n})\n\nconst MealsTable = ({\n  meals,\n  onDelete,\n  onDeleteMany,\n  onLoadUpdate,\n  recipes,\n}) => {\n  const [data, setData] = useState([])\n\n  const [columns] = useState([\n    { title: 'Title', field: 'title' },\n    {\n      title: 'Meal Type',\n      field: 'mealType',\n      lookup: MEAL_TYPES.reduce(\n        (obj, item) => ((obj[item.toLowerCase()] = item), obj),\n        {}\n      ),\n    },\n    { title: 'Notes', field: 'notes' },\n  ])\n\n  const getRecipesAsMeals = () =>\n    recipes.filter((recipe) => recipe.isMeal === true)\n\n  const handleDeleteManyClick = (data) => {\n    const slugs = data.map((row) => row.slug)\n    onDeleteMany(slugs)\n  }\n\n  const handleLoadUpdateClick = (meal) => {\n    onLoadUpdate(meal)\n  }\n\n  useEffect(() => {\n    const recipesAsMeals = getRecipesAsMeals()\n    const data = [...recipesAsMeals, ...meals].sort((a, b) =>\n      a.title.localeCompare(b.title)\n    )\n    setData(data)\n  }, [meals, recipes])\n\n  return (\n    <MaterialTable\n      title='Meals'\n      columns={columns}\n      data={data}\n      components={{\n        Action: (props) => {\n          if (typeof props.action.icon === 'function') {\n            return props.action.icon(props.data)\n          }\n          return <MTableAction {...props} />\n        },\n      }}\n      localization={{\n        body: {\n          emptyDataSourceMessage: 'No meals found',\n          editRow: {\n            deleteText: 'Delete meal? This action cannot be undone.',\n          },\n        },\n      }}\n      options={{\n        actionsColumnIndex: -1,\n        paging: false,\n        selection: true,\n        selectionProps: (rowData) => ({ disabled: !!rowData.isMeal }),\n        toolbar: true,\n      }}\n      actions={[\n        {\n          action: (rowData) => ({\n            disabled: !!rowData.isMeal,\n            icon: 'edit',\n            onClick: (e, data) => handleLoadUpdateClick(data),\n            tooltip: !rowData.isMeal\n              ? 'Update meal'\n              : 'Cannot edit recipes here',\n          }),\n          position: 'row',\n        },\n        {\n          icon: (data) => (\n            <BulkDeleteConfirmationAlert\n              data={data}\n              name='meal'\n              onDelete={handleDeleteManyClick}\n            />\n          ),\n          position: 'toolbarOnSelect',\n          tooltip: 'Delete selected meals',\n        },\n      ]}\n      editable={{\n        isDeletable: (rowData) => !rowData.isMeal,\n        onRowDelete: (oldData) =>\n          new Promise((resolve, reject) => {\n            const newData = [...data]\n            const index = oldData.tableData.id\n            newData.splice(index, 1)\n            setData([...newData])\n            onDelete(oldData)\n            resolve()\n          }),\n      }}\n    />\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MealsTable)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport MealsDialog from './MealsDialog'\nimport MealsTable from './MealsTable'\nimport PageHeader from '../PageHeader'\nimport Spinner from '../Spinner'\n\nimport {\n  MEALS_PAGE_LOADED,\n  MEALS_PAGE_UNLOADED,\n} from '../../constants/actionTypes'\nimport agent from '../../agent'\n\nconst mapStateToProps = (state) => ({\n  pageLoaded: state.meals.pageLoaded,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: () =>\n    dispatch({\n      type: MEALS_PAGE_LOADED,\n      payload: Promise.all([agent.Meals.getAll(), agent.Recipes.getAll()]),\n    }),\n  onUnload: () => dispatch({ type: MEALS_PAGE_UNLOADED }),\n})\n\nconst Meals = ({ onLoad, onUnload, pageLoaded }) => {\n  useEffect(() => {\n    onLoad()\n\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  return (\n    <>\n      <PageHeader title='Manage Meals'>\n        <MealsDialog />\n      </PageHeader>\n      {pageLoaded ? <MealsTable /> : <Spinner />}\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Meals)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  BottomNavigation,\n  BottomNavigationAction,\n  Icon,\n  makeStyles,\n} from '@material-ui/core'\nimport { Settings, SupervisorAccount } from '@material-ui/icons'\nimport { loadCSS } from 'fg-loadcss'\n\nimport {\n  NAV_TAB_CHANGE,\n  NAV_LOADED,\n  NAV_UNLOADED,\n} from '../constants/actionTypes'\n\nconst useStyles = makeStyles({\n  nav: {\n    position: 'fixed',\n    bottom: 0,\n    width: '100%',\n    zIndex: '1000',\n  },\n})\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.common.currentUser,\n  navTabValue: state.nav.navTabValue,\n  path: state.router.location.pathname,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: (tabValue, redirectTo) =>\n    dispatch({ type: NAV_LOADED, value: tabValue, redirectTo }),\n  onTabChange: (tabValue, redirectTo) =>\n    dispatch({ type: NAV_TAB_CHANGE, value: tabValue, redirectTo }),\n  onUnload: () => dispatch({ type: NAV_UNLOADED }),\n})\n\nconst Navigation = ({\n  currentUser,\n  navTabValue,\n  onLoad,\n  onTabChange,\n  onUnload,\n  path,\n}) => {\n  const classes = useStyles()\n  const userRole = currentUser.role\n\n  const handleTabChange = (tabValue) => {\n    onTabChange(tabValue, `/${tabValue}`)\n  }\n\n  useEffect(() => {\n    const tabFromPath = path.split('/')[1]\n    if (tabFromPath && tabFromPath !== '') {\n      onLoad(tabFromPath, `/${tabFromPath}`)\n    } else {\n      const tabValue = userRole === 'admin' ? 'users' : 'plans'\n      onLoad(tabValue, `/${tabValue}`)\n    }\n\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  useEffect(() => {\n    const node = loadCSS(\n      'https://use.fontawesome.com/releases/v5.15.3/css/all.css',\n      document.querySelector('#font-awesome-css')\n    )\n\n    return () => {\n      node.parentNode.removeChild(node)\n    }\n  })\n\n  if (userRole === 'admin') {\n    return (\n      <BottomNavigation\n        className={classes.nav}\n        onChange={(event, newValue) => {\n          handleTabChange(newValue)\n        }}\n        showLabels\n        value={navTabValue}\n      >\n        <BottomNavigationAction\n          label='Users'\n          icon={<SupervisorAccount />}\n          value='users'\n        />\n        <BottomNavigationAction\n          label='Settings'\n          icon={<Settings />}\n          value='settings'\n        />\n      </BottomNavigation>\n    )\n  }\n\n  return (\n    <BottomNavigation\n      className={classes.nav}\n      onChange={(event, newValue) => {\n        handleTabChange(newValue)\n      }}\n      showLabels\n      value={navTabValue}\n    >\n      <BottomNavigationAction\n        label='Plans'\n        icon={<Icon className='fa fa-calendar-week' />}\n        value='plans'\n      />\n      <BottomNavigationAction\n        label='Meals'\n        icon={<Icon className='fa fa-utensils' />}\n        value='meals'\n      />\n      <BottomNavigationAction\n        label='Recipes'\n        icon={<Icon className='fa fa-hamburger' />}\n        value='recipes'\n      />\n      <BottomNavigationAction\n        label='Ingredients'\n        icon={<Icon className='fa fa-carrot' />}\n        value='ingredients'\n      />\n      <BottomNavigationAction\n        label='Settings'\n        icon={<Settings />}\n        value='settings'\n      />\n    </BottomNavigation>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation)\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(11),\n  },\n}))\n\nconst PageWrapper = (props) => {\n  const classes = useStyles()\n\n  return <div className={classes.wrapper}>{props.children}</div>\n}\n\nexport default PageWrapper\n","import React from 'react'\nimport { Container, Typography } from '@material-ui/core'\nimport PageWrapper from './PageWrapper'\n\nconst NotFound = (props) => {\n  return (\n    <PageWrapper>\n      <Container>\n        <Typography variant='h2'>Error 404: Page Not Found</Typography>\n      </Container>\n    </PageWrapper>\n  )\n}\n\nexport default NotFound\n","import React, { useState } from 'react'\nimport {\n  Checkbox,\n  FormGroup,\n  FormControlLabel,\n  Tooltip,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\nimport { Info } from '@material-ui/icons'\n\nconst useStyles = makeStyles((theme) => ({\n  checked: {\n    '& + span': {\n      'color': theme.palette.primary.light,\n      'textDecoration': 'line-through',\n      '& svg': {\n        opacity: 0.5,\n      },\n    },\n  },\n  icon: {\n    marginLeft: theme.spacing(1),\n  },\n  listItem: {\n    alignItems: 'center',\n    display: 'flex',\n  },\n}))\n\nconst ShoppingList = ({ list }) => {\n  const classes = useStyles()\n\n  const [checked, setChecked] = useState({})\n\n  const handleChange = (e) => {\n    setChecked({ ...checked, [e.target.name]: e.target.checked })\n  }\n\n  return Array.isArray(list) && list.length > 0 ? (\n    <FormGroup>\n      {list.map((item) => (\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={checked[`${item.name}-${item.unit}`] ?? false}\n              classes={{ checked: classes.checked }}\n              onChange={handleChange}\n              name={`${item.name}-${item.unit}`}\n            />\n          }\n          key={`${item.id}-${item.unit}`}\n          label={\n            <span className={classes.listItem}>\n              {item.quantity && item.unit\n                ? `${item.name} (${item.quantity} ${item.unit})`\n                : `${item.name}`}\n              <Tooltip\n                arrow\n                enterTouchDelay={0}\n                title={`Needed for: ${item.recipes.join(', ')}`}\n              >\n                <Info className={classes.icon} color='secondary' />\n              </Tooltip>\n            </span>\n          }\n        />\n      ))}\n    </FormGroup>\n  ) : (\n    <Typography>{list}</Typography>\n  )\n}\n\nexport default ShoppingList\n","import React, { useState } from 'react'\nimport { FormControl, InputLabel, MenuItem, Select } from '@material-ui/core'\n\nconst StoreSelector = ({ defaultStore, onChange, stores }) => {\n  const [store, setStore] = useState(defaultStore ?? '')\n\n  const handleChange = (e) => {\n    const store = e.target.value\n    onChange(store)\n    setStore(store)\n  }\n\n  return (\n    <FormControl fullWidth>\n      <InputLabel id='store-selector-label'>Select a Store</InputLabel>\n      <Select\n        id='store-selector'\n        labelId='store-selector-label'\n        onChange={handleChange}\n        value={store}\n      >\n        {!store && <MenuItem key='blank' value=''></MenuItem>}\n        {stores.map((store) => (\n          <MenuItem key={store._id} value={store._id}>\n            {store.name}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n}\n\nexport default StoreSelector\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\n\nimport ShoppingList from './ShoppingList'\nimport StoreSelector from './StoreSelector'\n\nimport {\n  PLAN_LIST_COPIED,\n  PLAN_LIST_DIALOG_UNLOADED,\n} from '../../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  categories: state.categories.categories,\n  defaultStore: state.common.settings.defaultStore,\n  ingredients: state.ingredients.ingredients,\n  meals: state.meals.meals,\n  recipes: state.recipes.recipes,\n  stores: state.stores.stores,\n  viewer: state.plans.viewer,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onCopy: () =>\n    dispatch({\n      type: PLAN_LIST_COPIED,\n      snackbar: { message: 'List copied', variant: 'success' },\n    }),\n  onExit: () => dispatch({ type: PLAN_LIST_DIALOG_UNLOADED }),\n})\n\nconst ListDialog = ({\n  categories,\n  defaultStore,\n  ingredients,\n  meals,\n  onCopy,\n  onExit,\n  recipes,\n  stores,\n  viewer,\n}) => {\n  const [list, setList] = useState([])\n  const [open, setOpen] = useState(false)\n  const [store, setStore] = useState(defaultStore)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n\n  const getList = () => {\n    if (viewer.plan) {\n      if (categories.length === 0) return 'No categories found'\n\n      // First we create an array of meal and recipe objects collected from each day of the plan\n      let planMeals = []\n      for (const [day, mealIds] of Object.entries(viewer.plan.meals)) {\n        let dailyMeals = mealIds.map(\n          (mealId) =>\n            meals.find((meal) => meal._id === mealId) ??\n            recipes.find((recipe) => recipe._id === mealId)\n        )\n        planMeals = [...planMeals, ...dailyMeals]\n      }\n\n      if (planMeals.length === 0) return 'No meals found'\n\n      // Then we create an array of all recipe objects collected from each meal in the plan\n      const planRecipes = planMeals.flatMap((meal) => {\n        if (meal.hasOwnProperty('recipes')) return meal.recipes\n        return meal\n      })\n\n      if (planRecipes.length === 0) return 'No recipes found'\n\n      // Then we create an array of objects with ingredient and category info\n      const planIngredients = planRecipes\n        .flatMap((recipe) =>\n          recipe.ingredients.map((ingredient) => ({\n            ...ingredient,\n            recipe: recipe.title,\n          }))\n        )\n        .map((ingredient) => {\n          const item = ingredients.find((item) => item._id === ingredient.id)\n          const itemCategory = categories.find(\n            (category) => category._id === item.category\n          )\n          return {\n            ...ingredient,\n            category: itemCategory._id,\n            name: item.name,\n          }\n        })\n\n      if (planIngredients.length === 0) return 'No ingredients found'\n\n      // Then we consolidate the arry of ingredients into an array of categories and their associated ingredients\n      const ingredientsByCategory = planIngredients.reduce((obj, item) => {\n        const ingredient = {\n          id: item.id,\n          name: item.name,\n          quantity: item.quantity,\n          recipes: [item.recipe],\n          unit: item.unit,\n        }\n        if (obj.hasOwnProperty(item.category)) {\n          obj[item.category].push(ingredient)\n        } else {\n          obj[item.category] = [ingredient]\n        }\n        return obj\n      }, {})\n\n      // Looping over the categories in the store, we consolidate the ingredients by name and unit into the list array\n      const lists = []\n      const selectedStore = stores.find((s) => s._id === store)\n      const categoryList = selectedStore?.categories ?? categories\n      categoryList.forEach((category) => {\n        const ingredientsList = ingredientsByCategory[category._id] ?? []\n        const ingredientTotals = ingredientsList.reduce((arr, item) => {\n          const findItem = (i) => i.id === item.id && i.unit === item.unit\n          if (arr.find((i) => findItem(i))) {\n            const itemIndex = arr.findIndex((i) => findItem(i))\n            arr[itemIndex] = {\n              ...arr[itemIndex],\n              quantity: arr[itemIndex].quantity + item.quantity,\n              recipes: arr[itemIndex].recipes.concat(\n                item.recipes.filter(\n                  (item) => arr[itemIndex].recipes.indexOf(item) < 0\n                )\n              ),\n            }\n          } else {\n            arr.push(item)\n          }\n          return arr\n        }, [])\n        lists.push(ingredientTotals)\n      })\n\n      return lists.flat()\n    }\n\n    return 'No plan found'\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleCopy = () => {\n    const listString = list\n      .map((item) => `${item.name} (${item.quantity} ${item.unit})`)\n      .join('\\n')\n    navigator.clipboard.writeText(listString).then(\n      () => {\n        onCopy()\n      },\n      (err) => {\n        console.error('error', err)\n      }\n    )\n  }\n\n  const handleExit = () => {\n    setStore(defaultStore)\n    setList([])\n    onExit()\n  }\n\n  const handleStoreChange = (storeId) => {\n    setStore(storeId)\n  }\n\n  useEffect(() => {\n    // Update the list when the dialog opens\n    if (open) setList(getList())\n  }, [open])\n\n  useEffect(() => {\n    // Open the dialog if a viewer.plan object is defined\n    if (viewer.type === 'list') setOpen(!!viewer.plan)\n  }, [viewer.plan])\n\n  useEffect(() => {\n    // Update the list when the store changes\n    setList(getList())\n  }, [store])\n\n  return (\n    <Dialog\n      fullScreen={fullScreen}\n      fullWidth\n      maxWidth='md'\n      onClick={(ev) => ev.stopPropagation()}\n      onClose={handleClose}\n      onFocus={(ev) => ev.stopPropagation()}\n      open={open}\n      TransitionProps={{\n        onExit: handleExit,\n      }}\n    >\n      <DialogTitle>Shopping List for {viewer.plan?.title}</DialogTitle>\n      <DialogContent>\n        <Grid container spacing={2}>\n          {stores.length > 0 && (\n            <Grid item xs={12}>\n              <StoreSelector\n                defaultStore={defaultStore}\n                onChange={handleStoreChange}\n                stores={stores}\n              />\n            </Grid>\n          )}\n          <Grid item xs={12}>\n            <ShoppingList list={list} />\n          </Grid>\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          color='primary'\n          disabled={!Array.isArray(list)}\n          onClick={handleCopy}\n          variant='contained'\n        >\n          Copy list\n        </Button>\n        <Button onClick={handleClose} variant='contained'>\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListDialog)\n","import React from 'react'\nimport { Draggable } from 'react-beautiful-dnd'\nimport { IconButton, Paper, useTheme } from '@material-ui/core'\nimport { Close } from '@material-ui/icons'\n\nconst MealDraggable = ({ index, meal, onRemove, uniqueId }) => {\n  const theme = useTheme()\n\n  const getStyle = (isDragging, draggableStyle) => ({\n    alignItems: 'center',\n    background: isDragging ? theme.palette.secondary.light : 'white',\n    display: 'flex',\n    justifyContent: 'space-between',\n    marginBottom: theme.spacing(1),\n    padding: theme.spacing(1),\n    userSelect: 'none',\n    ...draggableStyle,\n  })\n\n  return (\n    <Draggable key={uniqueId} draggableId={uniqueId} index={index}>\n      {(provided, snapshot) => (\n        <Paper\n          elevation={3}\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          style={getStyle(snapshot.isDragging, provided.draggableProps.style)}\n        >\n          {meal.title}\n          <IconButton id={uniqueId} onClick={onRemove} size='small'>\n            <Close />\n          </IconButton>\n        </Paper>\n      )}\n    </Draggable>\n  )\n}\n\nexport default MealDraggable\n","import React, { useEffect, useState } from 'react'\nimport { Autocomplete } from '@material-ui/lab'\nimport { TextField } from '@material-ui/core'\nimport parse from 'autosuggest-highlight/parse'\nimport match from 'autosuggest-highlight/match'\n\nconst MealSelector = ({ meals, name, onChange }) => {\n  const [options, setOptions] = useState([])\n\n  const mappedOptions = meals.map((meal) => {\n    const firstLetter = meal.title[0].toUpperCase()\n    return {\n      firstLetter: /[0-9]/.test(firstLetter) ? '0-9' : firstLetter,\n      ...meal,\n    }\n  })\n\n  const handleChange = (ev, value) => {\n    onChange(name, value?._id)\n  }\n\n  useEffect(() => {\n    setOptions(mappedOptions)\n  }, [meals])\n\n  return (\n    <Autocomplete\n      autoHighlight\n      autoSelect\n      getOptionLabel={(option) => {\n        return option.title\n      }}\n      groupBy={(option) => option.firstLetter}\n      noOptionsText='No meals have been created'\n      onChange={handleChange}\n      options={options}\n      renderInput={(params) => (\n        <TextField {...params} autoFocus label='Meals' variant='outlined' />\n      )}\n      renderOption={(option, { inputValue }) => {\n        const matches = match(option.title, inputValue)\n        const parts = parse(option.title, matches)\n        return (\n          <div>\n            {parts.map((part, index) => (\n              <span\n                key={index}\n                style={{ fontWeight: part.highlight ? 700 : 400 }}\n              >\n                {part.text}\n              </span>\n            ))}\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nexport default MealSelector\n","import React, { useState } from 'react'\nimport { Formik, Form } from 'formik'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Fab,\n  Tooltip,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Add } from '@material-ui/icons'\n\nimport MealSelector from './MealSelector'\n\nconst MealSelectorDialog = ({ day, meals, onAdd }) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleExit = () => {}\n\n  const handleSubmitAdd = (values) => {\n    const result = { day, mealId: values.meal }\n    onAdd(result)\n    handleClose()\n  }\n\n  return (\n    <>\n      <Tooltip arrow title={`Add meal to ${day}`}>\n        <Fab color='secondary' onClick={handleClickOpen} size='small'>\n          <Add />\n        </Fab>\n      </Tooltip>\n\n      <Dialog\n        fullScreen={fullScreen}\n        fullWidth\n        maxWidth='md'\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onFocus={(ev) => ev.stopPropagation()}\n        open={open}\n        TransitionProps={{ onExit: handleExit }}\n      >\n        <Formik\n          initialValues={{\n            meal: '',\n          }}\n          onSubmit={(values) => {\n            handleSubmitAdd(values)\n          }}\n        >\n          {(formik) => (\n            <Form>\n              <DialogTitle>Add meal to {day}</DialogTitle>\n              <DialogContent>\n                <MealSelector\n                  meals={meals}\n                  name='meal'\n                  onChange={formik.setFieldValue}\n                />\n              </DialogContent>\n              <DialogActions>\n                <Button\n                  color='primary'\n                  disabled={!formik.values.meal}\n                  type='submit'\n                  variant='contained'\n                >\n                  Add\n                </Button>\n                <Button onClick={handleClose} variant='contained'>\n                  Cancel\n                </Button>\n              </DialogActions>\n            </Form>\n          )}\n        </Formik>\n      </Dialog>\n    </>\n  )\n}\n\nexport default MealSelectorDialog\n","import React from 'react'\nimport { Droppable } from 'react-beautiful-dnd'\nimport {\n  Typography,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\n\nimport MealDraggable from './MealDraggable'\nimport MealSelectorDialog from './MealSelectorDialog'\n\nconst useStyles = makeStyles((theme) => ({\n  dayHeader: {\n    'alignItems': 'center',\n    'borderBottom': `2px solid ${theme.palette.secondary.light}`,\n    'display': 'flex',\n    'justifyContent': 'space-between',\n    'padding': `${theme.spacing(2)}px ${theme.spacing(1)}px ${theme.spacing(\n      1\n    )}px`,\n    'width': '100%',\n    [theme.breakpoints.up('lg')]: {\n      width: '50%',\n    },\n    '& > button': {\n      visibility: 'hidden',\n    },\n    '&:hover > button': {\n      visibility: 'visible',\n    },\n  },\n}))\n\nconst WeekdayDroppable = ({ day, mealPlan, meals, onAdd, onRemove }) => {\n  const theme = useTheme()\n  const fullWidth = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const getStyle = (isDraggingOver) => ({\n    border: isDraggingOver\n      ? `2px dashed ${theme.palette.primary.light}`\n      : '2px dashed white',\n    minHeight: '120px',\n    padding: theme.spacing(1),\n    width: fullWidth ? '100%' : '50%',\n  })\n\n  const mappedMealPlan = mealPlan.map((mealId) =>\n    meals.find((meal) => meal._id === mealId)\n  )\n\n  return (\n    <div>\n      <div className={classes.dayHeader}>\n        <Typography color='primary' variant='h6'>\n          <em>{day}</em>\n        </Typography>\n        <MealSelectorDialog day={day} meals={meals} onAdd={onAdd} />\n      </div>\n      <Droppable droppableId={day}>\n        {(provided, snapshot) => (\n          <div\n            {...provided.droppableProps}\n            ref={provided.innerRef}\n            style={getStyle(snapshot.isDraggingOver)}\n          >\n            {mappedMealPlan.map((meal, index) => {\n              const uniqueId = `${day}-${meal._id}-${index}`\n              return (\n                <MealDraggable\n                  index={index}\n                  key={uniqueId}\n                  meal={meal}\n                  onRemove={onRemove}\n                  uniqueId={uniqueId}\n                />\n              )\n            })}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </div>\n  )\n}\n\nexport default WeekdayDroppable\n","export const DAYS = [\n  'Sunday',\n  'Monday',\n  'Tuesday',\n  'Wednesday',\n  'Thursday',\n  'Friday',\n  'Saturday',\n]\n","import React, { useState } from 'react'\nimport { DragDropContext } from 'react-beautiful-dnd'\n\nimport WeekdayDroppable from './WeekdayDroppable'\nimport { DAYS } from '../../../constants/days'\n\nconst PlanBuilder = ({ meals, mealPlan, name, onChange }) => {\n  const [plans, setPlans] = useState(mealPlan)\n\n  const onDragEnd = (result) => {\n    const { destination, source, draggableId } = result\n\n    if (\n      !destination ||\n      (destination.droppableId === source.droppableId &&\n        destination.index === source.index)\n    ) {\n      return\n    }\n\n    const start = source.droppableId\n    const finish = destination.droppableId\n    const mealId = draggableId.split('-')[1]\n\n    const newMealPlan = { ...mealPlan }\n    newMealPlan[start].splice(source.index, 1)\n    newMealPlan[finish].splice(destination.index, 0, mealId)\n\n    setPlans(newMealPlan)\n    onChange(name, newMealPlan)\n    return\n  }\n\n  const handleAddClick = (result) => {\n    const { day, mealId } = result\n    const newMealPlan = { ...mealPlan }\n    newMealPlan[day].push(mealId)\n    setPlans(newMealPlan)\n    onChange(name, newMealPlan)\n  }\n\n  const handleRemoveClick = (e) => {\n    const id = e.currentTarget.getAttribute('id')\n    const [day, mealId] = id.split('-')\n    const newMealPlan = { ...mealPlan }\n    const removeIndex = newMealPlan[day].indexOf(mealId)\n    newMealPlan[day].splice(removeIndex, 1)\n    setPlans(newMealPlan)\n    onChange(name, newMealPlan)\n  }\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      {DAYS.map((day) => (\n        <WeekdayDroppable\n          day={day}\n          key={day}\n          meals={meals}\n          mealPlan={plans[day]}\n          onAdd={handleAddClick}\n          onRemove={handleRemoveClick}\n        />\n      ))}\n    </DragDropContext>\n  )\n}\n\nexport default PlanBuilder\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Container,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  Typography,\n} from '@material-ui/core'\n\nimport FabAdd from '../FabAdd'\nimport ListErrors from '../ListErrors'\nimport PlanBuilder from './PlanBuilder/PlanBuilder'\n\nimport {\n  ADD_PLAN,\n  PLAN_DIALOG_UNLOADED,\n  UPDATE_PLAN,\n} from '../../constants/actionTypes'\nimport { DAYS } from '../../constants/days'\nimport agent from '../../agent'\n\nconst mapStateToProps = (state) => ({\n  ...state.plans,\n  meals: state.meals.meals,\n  recipes: state.recipes.recipes,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAdd: (plan) =>\n    dispatch({\n      type: ADD_PLAN,\n      payload: agent.Plans.add(plan),\n      snackbar: { message: 'Plan added', variant: 'success' },\n    }),\n  onExit: () => dispatch({ type: PLAN_DIALOG_UNLOADED }),\n  onUpdate: (plan) =>\n    dispatch({\n      type: UPDATE_PLAN,\n      payload: agent.Plans.update(plan),\n      snackbar: { message: 'Plan updated', variant: 'success' },\n    }),\n})\n\n/**\n * Casts recipes that are meals into meal-like objects, combines them\n * with the meals array, and returns the new array sortted by title\n */\nconst getAllMeals = (meals, recipes) => {\n  const allMeals = [...meals]\n  const recipesAsMeals = recipes\n    .filter((recipe) => recipe.isMeal)\n    .map((recipe) => ({\n      mealType: recipe.mealType,\n      notes: recipe.notes,\n      recipes: [recipe],\n      slug: recipe.slug,\n      title: recipe.title,\n      _id: recipe._id,\n    }))\n  const combinedMeals = [...allMeals, ...recipesAsMeals].sort((a, b) =>\n    a.title.localeCompare(b.title)\n  )\n  return combinedMeals\n}\n\nconst PlanEditor = ({\n  editor,\n  errors,\n  inProgress,\n  meals,\n  onAdd,\n  onExit,\n  onUpdate,\n  recipes,\n}) => {\n  const allMeals = getAllMeals(meals, recipes)\n\n  const defaultMeals = DAYS.reduce((obj, day) => ((obj[day] = []), obj), {})\n\n  const [open, setOpen] = useState(false)\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmitAdd = (values) => {\n    onAdd({ ...values })\n  }\n\n  const handleSubmitUpdate = (values) => {\n    onUpdate({ ...editor.plan, ...values })\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) setOpen(false)\n  }, [inProgress])\n\n  useEffect(() => {\n    // Open the dialog if an editor.plan object is defined\n    setOpen(!!editor.plan)\n  }, [editor.plan])\n\n  return (\n    <>\n      <FabAdd item='plan' onClick={handleClickOpen} />\n      <Dialog\n        fullScreen\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onFocus={(ev) => ev.stopPropagation()}\n        open={open}\n        scroll='body'\n        TransitionProps={{\n          onExit: onExit,\n        }}\n      >\n        <Formik\n          initialValues={{\n            meals: editor.plan?.meals || defaultMeals,\n            notes: editor.plan?.notes || '',\n            order: editor.plan?.order || 0, // currently not in use\n            skip: editor.plan?.skip || false, // currently not in use\n            title: editor.plan?.title || '',\n          }}\n          validationSchema={Yup.object({\n            meals: Yup.object(),\n            notes: Yup.string(),\n            order: Yup.number(),\n            skip: Yup.boolean(),\n            title: Yup.string().required('Required'),\n          })}\n          onSubmit={async (values) => {\n            editor.plan ? handleSubmitUpdate(values) : handleSubmitAdd(values)\n          }}\n        >\n          {(formik) => (\n            <Container disableGutters>\n              <Form>\n                <DialogTitle>\n                  {editor.plan ? 'Update plan' : 'Add plan'}\n                </DialogTitle>\n                <DialogContent>\n                  <ListErrors errors={errors} />\n                  <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                      <Field\n                        autoFocus={!editor.plan}\n                        component={TextField}\n                        disabled={inProgress}\n                        id='title'\n                        label='Plan Title'\n                        name='title'\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <Field\n                        component={TextField}\n                        disabled={inProgress}\n                        id='notes'\n                        label='Notes'\n                        name='notes'\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <Typography variant='h6'>Meals</Typography>\n                      <PlanBuilder\n                        meals={allMeals}\n                        mealPlan={formik.values.meals}\n                        name='meals'\n                        onChange={formik.setFieldValue}\n                      />\n                    </Grid>\n                  </Grid>\n                </DialogContent>\n                <DialogActions>\n                  <Button\n                    color='primary'\n                    disabled={inProgress}\n                    type='submit'\n                    variant='contained'\n                  >\n                    {editor.plan\n                      ? inProgress\n                        ? 'Updating...'\n                        : 'Update'\n                      : inProgress\n                      ? 'Adding...'\n                      : 'Add'}\n                  </Button>\n                  <Button\n                    disabled={inProgress}\n                    onClick={handleClose}\n                    variant='contained'\n                  >\n                    Cancel\n                  </Button>\n                </DialogActions>\n              </Form>\n            </Container>\n          )}\n        </Formik>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlanEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Grid, Paper, Typography, makeStyles } from '@material-ui/core'\n\nimport { RECIPE_VIEW_LOADED } from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  dayList: {\n    listStyle: 'none',\n    paddingLeft: theme.spacing(1),\n  },\n  mealHeader: {\n    padding: theme.spacing(1),\n  },\n  mealLink: {\n    'border': '1px solid',\n    'borderColor': 'white',\n    'borderRadius': theme.spacing(1),\n    'padding': theme.spacing(1),\n    '&:hover': {\n      borderColor: theme.palette.secondary.light,\n    },\n    '& a': {\n      color: theme.palette.text.primary,\n      height: '100%',\n      textDecoration: 'none',\n      width: '100%',\n    },\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n  recipeList: {\n    listStyle: 'none',\n    paddingLeft: theme.spacing(2),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  meals: state.meals.meals,\n  plan: state.plans.viewer.plan,\n  recipes: state.recipes.recipes,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoadView: (recipe) => dispatch({ type: RECIPE_VIEW_LOADED, recipe }),\n})\n\nconst PlanViewer = ({ meals, onLoadView, plan, recipes }) => {\n  const classes = useStyles()\n\n  const days = Object.keys(plan.meals)\n\n  const mealLookup = (id) => {\n    const meal = meals.find((meal) => meal._id === id)\n    if (meal) return meal\n\n    const recipe = recipes.find((recipe) => recipe._id === id)\n    return recipe\n  }\n\n  const handleLoadViewClick = (recipe) => {\n    onLoadView(recipe)\n  }\n\n  return (\n    plan && (\n      <Paper className={classes.paper}>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Typography variant='h5'>{plan.title}</Typography>\n          </Grid>\n          {plan.notes && (\n            <Grid item xs={12}>\n              <Typography variant='h6'>Notes</Typography>\n              <Typography>{plan.notes}</Typography>\n            </Grid>\n          )}\n          <Grid item xs={12}>\n            <Typography variant='h5'>Meals</Typography>\n            <hr />\n            <Grid container item xs={12} spacing={2}>\n              {days.map((day) => {\n                const meals = plan.meals[day]\n                return (\n                  <Grid item xs={12} key={day}>\n                    <Typography variant='h6'>{day}</Typography>\n                    <ul className={classes.dayList}>\n                      {meals.map((mealId) => {\n                        const meal = mealLookup(mealId)\n                        return meal?.recipes ? (\n                          <li key={mealId}>\n                            <Typography className={classes.mealHeader}>\n                              <em>{meal?.title}</em>\n                            </Typography>\n                            <ul className={classes.recipeList}>\n                              {meal.recipes.map((recipe) => (\n                                <li\n                                  className={classes.mealLink}\n                                  key={recipe._id}\n                                >\n                                  <a\n                                    href='#'\n                                    onClick={() => handleLoadViewClick(recipe)}\n                                  >\n                                    <Typography>{recipe.title}</Typography>\n                                  </a>\n                                </li>\n                              ))}\n                            </ul>\n                          </li>\n                        ) : (\n                          <li className={classes.mealLink} key={meal._id}>\n                            <a\n                              href='#'\n                              onClick={() => handleLoadViewClick(meal)}\n                            >\n                              <Typography>{meal?.title}</Typography>\n                            </a>\n                          </li>\n                        )\n                      })}\n                    </ul>\n                  </Grid>\n                )\n              })}\n            </Grid>\n          </Grid>\n        </Grid>\n      </Paper>\n    )\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlanViewer)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport MaterialTable, { MTableAction } from '@material-table/core'\nimport { Paper } from '@material-ui/core'\nimport { StarBorder } from '@material-ui/icons'\n\nimport BulkDeleteConfirmationAlert from '../BulkDeleteConfirmationAlert'\n\nimport {\n  DELETE_PLAN,\n  DELETE_PLANS,\n  PLAN_DIALOG_LOADED,\n  PLAN_LIST_DIALOG_LOADED,\n  PLAN_VIEW_LOADED,\n  SET_STARRED_PLAN,\n  UPDATE_PLAN_ARCHIVE_STATUS,\n} from '../../constants/actionTypes'\nimport agent from '../../agent'\n\nconst mapStateToProps = (state) => ({\n  plans: state.plans.plans,\n  starredPlan: state.common.settings.starredPlan,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (plan) =>\n    dispatch({\n      type: DELETE_PLAN,\n      payload: agent.Plans.delete(plan),\n      snackbar: { message: 'Plan deleted', variant: 'success' },\n    }),\n  onDeleteMany: (slugs) =>\n    dispatch({\n      type: DELETE_PLANS,\n      payload: agent.Plans.deleteMany(slugs),\n      snackbar: {\n        message: `${slugs.length} plan${slugs.length > 1 ? 's' : ''} deleted`,\n        variant: 'success',\n      },\n    }),\n  onLoadUpdate: (plan) => dispatch({ type: PLAN_DIALOG_LOADED, plan }),\n  onLoadView: (plan) => dispatch({ type: PLAN_VIEW_LOADED, plan }),\n  onSetStarred: (settings) =>\n    dispatch({\n      type: SET_STARRED_PLAN,\n      payload: agent.Settings.update(settings),\n      snackbar: { message: 'Starred plan saved', variant: 'success' },\n    }),\n  onUpdateArchiveStatus: (plan, status) =>\n    dispatch({\n      type: UPDATE_PLAN_ARCHIVE_STATUS,\n      payload: agent.Plans.update(plan),\n      snackbar: { message: `Plan ${status}`, variant: 'success' },\n    }),\n  onViewShoppingList: (plan) =>\n    dispatch({ type: PLAN_LIST_DIALOG_LOADED, plan }),\n})\n\nconst PlansTable = ({\n  filter,\n  onDelete,\n  onDeleteMany,\n  onLoadUpdate,\n  onLoadView,\n  onSetStarred,\n  onUpdateArchiveStatus,\n  onViewShoppingList,\n  plans,\n  starredPlan,\n}) => {\n  const [data, setData] = useState([])\n\n  const [columns] = useState([\n    { title: 'Title', field: 'title' },\n    { title: 'Notes', field: 'notes' },\n  ])\n\n  const handleArchiveClick = (plan) => {\n    const status = plan.archived ? 'unarchived' : 'archived'\n    onUpdateArchiveStatus({ ...plan, archived: !plan.archived }, status)\n  }\n\n  const handleDeleteManyClick = (data) => {\n    const slugs = data.map((row) => row.slug)\n    onDeleteMany(slugs)\n  }\n\n  const handleLoadUpdateClick = (plan) => {\n    onLoadUpdate(plan)\n  }\n\n  const handleLoadViewClick = (plan) => {\n    onLoadView(plan)\n  }\n\n  const handleSetStarredClick = (plan) => {\n    const settings = { starredPlan: starredPlan !== plan._id ? plan : null }\n    onSetStarred(settings)\n  }\n\n  const handleViewShoppingListClick = (plan) => {\n    onViewShoppingList(plan)\n  }\n\n  useEffect(() => {\n    // Put starred plan at top of table\n    const sortedPlans = [...plans].sort((a, b) =>\n      a._id === starredPlan ? -1 : b._id === starredPlan ? 1 : 0\n    )\n\n    // Filter plans based on archive status, or show all plans if no filter given\n    //  * allowed options include 'archived' and 'unarchived'\n    const filteredPlans =\n      filter === 'archived'\n        ? sortedPlans.filter((plan) => plan.archived === true)\n        : filter === 'unarchived'\n        ? sortedPlans.filter((plan) => plan.archived === false)\n        : sortedPlans\n\n    setData(filteredPlans)\n  }, [plans, starredPlan])\n\n  return (\n    <MaterialTable\n      title='Plans'\n      columns={columns}\n      data={data}\n      components={{\n        Action: (props) => {\n          if (typeof props.action.icon === 'function') {\n            return props.action.icon(props.data)\n          }\n          return <MTableAction {...props} />\n        },\n        Container: (props) => (\n          <Paper {...props} elevation={filter === 'archived' ? 0 : 1} />\n        ),\n      }}\n      localization={{\n        body: {\n          emptyDataSourceMessage: 'No plans found',\n          editRow: { deleteText: 'Delete plan? This action cannot be undone.' },\n        },\n      }}\n      options={{\n        actionsColumnIndex: -1,\n        paging: false,\n        selection: true,\n        toolbar: true,\n      }}\n      actions={[\n        {\n          action: (rowData) => ({\n            disabled: rowData.archived,\n            icon: rowData._id === starredPlan ? 'star' : () => <StarBorder />,\n            onClick: (e, data) => handleSetStarredClick(data),\n            tooltip: rowData._id === starredPlan ? 'Unstar plan' : 'Star plan',\n          }),\n          position: 'row',\n        },\n        {\n          icon: 'list',\n          onClick: (e, data) => handleViewShoppingListClick(data),\n          tooltip: 'View shopping list',\n          position: 'row',\n        },\n        {\n          icon: 'visibility',\n          onClick: (e, data) => handleLoadViewClick(data),\n          position: 'row',\n          tooltip: 'View plan',\n        },\n        {\n          icon: 'edit',\n          onClick: (e, data) => handleLoadUpdateClick(data),\n          tooltip: 'Update plan',\n          position: 'row',\n        },\n        {\n          action: (rowData) => ({\n            icon: rowData.archived ? 'unarchive' : 'archive',\n            onClick: (e, data) => handleArchiveClick(data),\n            tooltip: rowData.archived ? 'Unarchive plan' : 'Archive plan',\n          }),\n          position: 'row',\n        },\n        {\n          icon: (data) => (\n            <BulkDeleteConfirmationAlert\n              data={data}\n              name='plan'\n              onDelete={handleDeleteManyClick}\n            />\n          ),\n          position: 'toolbarOnSelect',\n          tooltip: 'Delete selected plans',\n        },\n      ]}\n      editable={{\n        onRowDelete: (oldData) =>\n          new Promise((resolve, reject) => {\n            const newData = [...data]\n            const index = oldData.tableData.id\n            newData.splice(index, 1)\n            setData([...newData])\n            onDelete(oldData)\n            resolve()\n          }),\n      }}\n    />\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlansTable)\n","import React, { useState } from 'react'\nimport MUIRichTextEditor from 'mui-rte'\nimport { convertToRaw } from 'draft-js'\nimport { makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  error: {\n    color: '#f44336',\n    fontSize: '0.75rem',\n    fontWeight: 400,\n    letterSpacing: '0.03333em',\n    lineHeight: 1.66,\n    margin: 0,\n    marginTop: '3px',\n    textAlign: 'left',\n  },\n}))\n\nconst RichEditor = (props) => {\n  const [errors] = useState(null)\n  // const [errors, setErrors] = useState(null)\n\n  const classes = useStyles()\n\n  const handleBlur = () => {\n    !props.readOnly && props.onEditorBlur(props.name, true, false)\n  }\n\n  const handleChange = (state) => {\n    !props.readOnly &&\n      props.onEditorChange(\n        props.name,\n        JSON.stringify(convertToRaw(state.getCurrentContent())),\n        false\n      )\n    /**\n     * The error state for this component is handled by local state rather than\n     * passed in from formik with props. Formik is overridding the value of the\n     * error when mounting the component and when submitting the form, if we\n     * can stop that behavior, then we could allow formik to control the error\n     * state.\n     */\n    // setErrors(!state.getCurrentContent().hasText() ? 'Required' : null) // disable error handling for this input (not a required input)\n  }\n\n  // Component css styles supplied as theme overrides in Theme.js\n  return (\n    <>\n      <MUIRichTextEditor\n        controls={['numberList', 'bold', 'italic', 'underline', 'undo', 'redo']}\n        defaultValue={props.initialValue}\n        error={errors && props.touched}\n        label={props.placeholder}\n        onBlur={handleBlur}\n        onChange={handleChange}\n        {...props}\n      />\n      {errors && props.touched && <div className={classes.error}>{errors}</div>}\n    </>\n  )\n}\n\nexport default RichEditor\n","import React from 'react'\nimport { Grid, Paper, Typography, makeStyles } from '@material-ui/core'\n\nimport RichEditor from '../RichEditor'\n\nconst useStyles = makeStyles((theme) => ({\n  ingredients: {\n    backgroundColor: '#eee',\n  },\n  ingredientsList: {\n    'listStyle': 'none',\n    'paddingLeft': theme.spacing(2),\n    '& li': {\n      marginBottom: theme.spacing(2),\n    },\n  },\n  ingredientName: {\n    fontSize: theme.typography.subtitle1.fontSize,\n    fontWeight: 'bold',\n  },\n  ingredientDetails: {\n    color: theme.palette.text.secondary,\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n}))\n\nconst RecipeViewer = ({ ingredients, recipe }) => {\n  const classes = useStyles()\n\n  const ingredientLookup = (id) => {\n    return ingredients.find((ingredient) => ingredient._id === id)\n  }\n\n  const getRecipeSubheader = (recipe) => {\n    const parts = []\n    if (recipe.servings)\n      parts.push(\n        <React.Fragment key={1}>\n          <em>Servings: </em>\n          <u>{recipe.servings}</u>\n        </React.Fragment>\n      )\n    parts.push(' | ')\n    if (recipe.prepTime)\n      parts.push(\n        <React.Fragment key={2}>\n          <em>Prep Time: </em>\n          <u>{recipe.prepTime}</u>\n        </React.Fragment>\n      )\n    if (recipe.wwPoints) {\n      parts.push(' | ')\n      parts.push(\n        <React.Fragment key={3}>\n          <em>WW Points: </em>\n          <u>{recipe.wwPoints}</u>\n        </React.Fragment>\n      )\n    }\n    if (recipe.isMeal) {\n      parts.push(' | ')\n      parts.push(\n        <React.Fragment key={4}>\n          <em>Meal Type: </em>\n          <u>{recipe.mealType}</u>\n        </React.Fragment>\n      )\n    }\n    return parts\n  }\n\n  return (\n    recipe && (\n      <Paper className={classes.paper}>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Typography variant='h5'>{recipe.title}</Typography>\n            <Typography variant='subtitle2'>\n              {getRecipeSubheader(recipe)}\n            </Typography>\n          </Grid>\n          <Grid item xs={12} className={classes.ingredients}>\n            <Typography variant='h6'>Ingredients</Typography>\n            <ul className={classes.ingredientsList}>\n              {recipe.ingredients.map((item) => {\n                const ingredient = ingredientLookup(item.id)\n                if (!item.id) return null\n                return (\n                  <li key={item.id}>\n                    <span className={classes.ingredientName}>\n                      {ingredient?.name}\n                    </span>\n                    <br />\n                    <span className={classes.ingredientDetails}>\n                      {`${item.quantity || ''} ${item.unit || ''}`}\n                      {item.notes && `, ${item.notes}`}\n                    </span>\n                  </li>\n                )\n              })}\n            </ul>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography variant='h6'>Directions</Typography>\n            <RichEditor\n              initialValue={recipe?.directions}\n              toolbar={false}\n              readOnly\n            />\n          </Grid>\n          {recipe.notes && (\n            <Grid item xs={12}>\n              <Typography variant='h6'>Notes</Typography>\n              <Typography>{recipe.notes}</Typography>\n            </Grid>\n          )}\n        </Grid>\n      </Paper>\n    )\n  )\n}\n\nexport default RecipeViewer\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Button,\n  Grid,\n  Typography,\n} from '@material-ui/core'\nimport { ExpandMore } from '@material-ui/icons'\n\nimport ListDialog from './Lists/ListDialog'\nimport PageHeader from '../PageHeader'\nimport PlanEditor from './PlanEditor'\nimport PlanViewer from './PlanViewer'\nimport PlansTable from './PlansTable'\nimport RecipeViewer from '../Recipes/RecipeViewer'\nimport Spinner from '../Spinner'\nimport agent from '../../agent'\n\nimport {\n  PLANS_PAGE_LOADED,\n  PLANS_PAGE_UNLOADED,\n  PLAN_VIEW_UNLOADED,\n  RECIPE_VIEW_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  ingredients: state.ingredients.ingredients,\n  pageLoaded: state.plans.pageLoaded,\n  planViewer: state.plans.viewer,\n  recipeViewer: state.recipes.viewer,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: () =>\n    dispatch({\n      type: PLANS_PAGE_LOADED,\n      payload: Promise.all([\n        agent.Plans.getAll(),\n        agent.Meals.getAll(),\n        agent.Recipes.getAll(),\n        agent.Ingredients.getAll(),\n        agent.Categories.getAll(),\n        agent.Stores.getAll(),\n      ]),\n    }),\n  onUnload: () => dispatch({ type: PLANS_PAGE_UNLOADED }),\n  onUnloadPlanView: () => dispatch({ type: PLAN_VIEW_UNLOADED }),\n  onUnloadRecipeView: () => dispatch({ type: RECIPE_VIEW_UNLOADED }),\n})\n\nconst Plans = ({\n  ingredients,\n  onLoad,\n  onUnload,\n  onUnloadPlanView,\n  onUnloadRecipeView,\n  pageLoaded,\n  planViewer,\n  recipeViewer,\n}) => {\n  const [accordionOpen, setAccordionOpen] = useState(false)\n\n  const showPlanView = planViewer.plan && planViewer.type === 'plan'\n  const showRecipeView = !!recipeViewer.recipe\n\n  useEffect(() => {\n    onLoad()\n\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  return (\n    <>\n      <PageHeader\n        title={\n          showRecipeView\n            ? 'View Recipe'\n            : showPlanView\n            ? 'View Plan'\n            : 'Manage Plans'\n        }\n      >\n        {showRecipeView ? (\n          <Button color='secondary' onClick={onUnloadRecipeView}>\n            Back to Plan\n          </Button>\n        ) : showPlanView ? (\n          <Button color='secondary' onClick={onUnloadPlanView}>\n            Manage Plans\n          </Button>\n        ) : (\n          <PlanEditor />\n        )}\n      </PageHeader>\n      {pageLoaded ? (\n        showRecipeView ? (\n          <RecipeViewer\n            ingredients={ingredients}\n            recipe={recipeViewer.recipe}\n          />\n        ) : showPlanView ? (\n          <PlanViewer />\n        ) : (\n          <Grid container spacing={4}>\n            <Grid item xs={12}>\n              <PlansTable filter='unarchived' />\n            </Grid>\n            <Grid item xs={12}>\n              <Typography variant='h5' gutterBottom>\n                Archived Plans\n              </Typography>\n              <Accordion\n                onChange={(ev, expanded) => setAccordionOpen(expanded)}\n              >\n                <AccordionSummary\n                  expandIcon={<ExpandMore />}\n                  aria-controls='archived-content'\n                  id='archived-header'\n                >\n                  <Typography variant='body1'>\n                    Click to {accordionOpen ? 'hide' : 'show'} archived plans\n                  </Typography>\n                </AccordionSummary>\n                <AccordionDetails style={{ display: 'block' }}>\n                  <PlansTable filter='archived' />\n                </AccordionDetails>\n              </Accordion>\n            </Grid>\n          </Grid>\n        )\n      ) : (\n        <Spinner />\n      )}\n      <ListDialog />\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Plans)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Route, Redirect } from 'react-router-dom'\n\nconst mapStateToProps = (state) => ({ currentUser: state.common.currentUser })\n\nconst ProtectedRoute = (props) => {\n  if (!props.currentUser) {\n    return <Redirect to='/' />\n  }\n\n  return <Route exact path={props.path} component={props.component} />\n}\n\nexport default connect(mapStateToProps, () => ({}))(ProtectedRoute)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Autocomplete, createFilterOptions } from '@material-ui/lab'\nimport { TextField } from '@material-ui/core'\nimport parse from 'autosuggest-highlight/parse'\nimport match from 'autosuggest-highlight/match'\n\nimport IngredientDialog from '../Ingredients/IngredientDialog'\n\nimport { RECIPE_INGREDIENT_ONBLUR } from '../../constants/actionTypes'\n\nconst filter = createFilterOptions()\n\nconst mapStateToProps = (state) => ({\n  editor: state.recipes.editor,\n  ingredients: state.ingredients.ingredients,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  // onBlur clears the newly-added ingredient from editor state so it is not used again when adding a new ingredient row\n  onBlur: () => dispatch({ type: RECIPE_INGREDIENT_ONBLUR }),\n})\n\nconst IngredientSelector = ({\n  editor,\n  ingredients,\n  onBlur,\n  onChange,\n  value,\n}) => {\n  const [newIngredient, setNewIngredient] = useState(null)\n  const [options, setOptions] = useState([])\n  const [selected, setSelected] = useState(value ?? null)\n\n  // Used for grouping ingredients in the selector dropdown\n  const mappedOptions = ingredients.map((ingredient) => {\n    const firstLetter = ingredient.name[0].toUpperCase()\n    return {\n      firstLetter: /[0-9]/.test(firstLetter) ? '0-9' : firstLetter,\n      ...ingredient,\n    }\n  })\n\n  const handleChange = (e, value) => {\n    // This conditional prevents an issue with Autocomplete changing the value prop from an object-type to a string-type when autoSelect is true\n    if (typeof value !== 'string') {\n      setSelected(value)\n      onChange(e, value)\n    }\n    onBlur()\n  }\n\n  const handleDialogClose = () => {\n    // Clear the new ingredient if ingredient dialog closed to allow the dialog to be opened again\n    setNewIngredient(null)\n  }\n\n  useEffect(() => {\n    // Update the options in the Autocomplete when a new ingredient is created\n    setOptions(mappedOptions)\n  }, [ingredients])\n\n  useEffect(() => {\n    // Update input selection with ingredient object when a new ingredient is created\n    if (editor.ingredient) {\n      setSelected(editor.ingredient)\n      onChange({}, editor.ingredient)\n      onBlur()\n    }\n  }, [editor.ingredient])\n\n  // @todo material-table is not stopping enter key propogation causing row action to occur unexpectedly\n  //         and MaterialTableFix prevents the whole row from being editable\n  const handleKey = (e) => {\n    if (e.key === 'Enter') e.stopPropagation()\n  }\n\n  return (\n    <>\n      <Autocomplete\n        autoHighlight\n        autoSelect\n        freeSolo\n        options={options}\n        value={selected}\n        filterOptions={(options, params) => {\n          const filtered = filter(options, params)\n          if (params.inputValue !== '')\n            filtered.push({\n              inputValue: params.inputValue,\n              name: `Add \"${params.inputValue}\"`,\n            })\n          return filtered\n        }}\n        getOptionLabel={(option) => {\n          if (typeof option === 'string') return option\n          if (option.inputValue) return option.inputValue\n          return option.name\n        }}\n        getOptionSelected={(option, value) => option._id === value?._id}\n        groupBy={(option) => option.firstLetter}\n        onKeyDown={(e) => handleKey(e)}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            autoFocus\n            label='Ingredient name'\n            variant='outlined'\n          />\n        )}\n        onBlur={onBlur}\n        onChange={(e, value) => {\n          if (value && value.inputValue)\n            setNewIngredient({ name: value.inputValue })\n          handleChange(e, value)\n        }}\n        renderOption={(option, { inputValue }) => {\n          const matches = match(option.name, inputValue)\n          const parts = parse(option.name, matches)\n          return (\n            <div>\n              {parts.map((part, index) => (\n                <span\n                  key={index}\n                  style={{ fontWeight: part.highlight ? 700 : 400 }}\n                >\n                  {part.text}\n                </span>\n              ))}\n            </div>\n          )\n        }}\n      />\n      <IngredientDialog\n        hideButton\n        ingredient={newIngredient}\n        isOpen={!!newIngredient}\n        onClose={handleDialogClose}\n      />\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IngredientSelector)\n","import React from 'react'\nimport MaterialTable from '@material-table/core'\n\nimport '../styles/MaterialTableResponsive.css'\n\nconst MaterialTableResponsive = (props) => <MaterialTable {...props} />\n\nexport default MaterialTableResponsive\n","const UNIT_TYPES = [\n  ['count', 'ct', 0],\n  ['cup', 'c', 0],\n  ['dash', 'dsh', 0],\n  ['fluid ounce', 'fl oz', 0],\n  ['gram', 'g', 0],\n  ['milliliter', 'mL', 0],\n  ['ounce', 'oz', 0],\n  ['package', 'pkg', 0],\n  ['piece', 'piece', 0],\n  ['pinch', 'pnch', 0],\n  ['pint', 'pt', 0],\n  ['pound', 'lb', 0],\n  ['quart', 'qt', 0],\n  ['slice', 'slc', 0],\n  ['spray', 'spray', 0],\n  ['tablespoon', 'tbsp', 0],\n  ['teaspoon', 'tsp', 0],\n]\n\nconst MakeUnit = (name, abbr, conv) => ({ name, abbr, conv })\n\nconst getUnits = () => UNIT_TYPES.map((unit) => MakeUnit(...unit))\n\nexport const UNITS = getUnits()\n","import React, { useEffect, useState } from 'react'\n\nimport IngredientSelector from './IngredientSelector'\nimport MaterialTableResponsive from '../MaterialTableResponsive'\n\nimport { UNITS } from '../../constants/units'\n\nconst RecipeIngredientsEditor = ({\n  ingredients,\n  ingredientsList,\n  onChange,\n}) => {\n  const [columns, setColumns] = useState([])\n  const [data, setData] = useState([])\n\n  const getColumns = () => [\n    {\n      title: 'Name',\n      field: 'id',\n      lookup: ingredientsList.reduce(\n        (obj, item) => ((obj[item._id] = item.name), obj),\n        {}\n      ),\n      editComponent: (props) => (\n        <IngredientSelector\n          onChange={(e, value) => props.onChange(value?._id)}\n          value={ingredientsList.find(\n            (ingredient) => ingredient._id === props.value\n          )}\n        />\n      ),\n    },\n    { title: 'Quantity', field: 'quantity' },\n    {\n      title: 'Unit',\n      field: 'unit',\n      lookup: UNITS.reduce(\n        (obj, item) => ((obj[item.abbr] = `${item.name}s (${item.abbr})`), obj),\n        {}\n      ),\n    },\n    {\n      title: 'Notes',\n      field: 'notes',\n    },\n  ]\n\n  useEffect(() => {\n    // Refresh the columns when adding a new ingredient to update the IngredientSelector component\n    setColumns(getColumns())\n  }, [ingredientsList])\n\n  useEffect(() => {\n    setData(ingredients)\n  }, [ingredients])\n\n  return (\n    <MaterialTableResponsive\n      title='Ingredients'\n      columns={columns}\n      data={data}\n      localization={{\n        body: {\n          emptyDataSourceMessage: 'No ingredients have been added',\n          editRow: {\n            deleteText: 'Remove ingredient from this recipe?',\n          },\n        },\n      }}\n      options={{ actionsColumnIndex: -1, paging: false, search: false }}\n      editable={{\n        onRowAdd: (newData) =>\n          new Promise((resolve, reject) => {\n            setData([...data, newData])\n            onChange([...data, newData])\n            resolve()\n          }),\n        onRowUpdate: (newData, oldData) =>\n          new Promise((resolve, reject) => {\n            const dataUpdate = [...data]\n            const index = oldData.tableData.id\n            dataUpdate[index] = newData\n            setData([...dataUpdate])\n            onChange([...dataUpdate])\n            resolve()\n          }),\n        onRowDelete: (oldData) =>\n          new Promise((resolve, reject) => {\n            const newData = [...data]\n            const index = oldData.tableData.id\n            newData.splice(index, 1)\n            setData([...newData])\n            onChange([...newData])\n            resolve()\n          }),\n      }}\n    />\n  )\n}\n\nexport default RecipeIngredientsEditor\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field, useFormikContext } from 'formik'\nimport { CheckboxWithLabel, TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Container,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  MenuItem,\n  Typography,\n} from '@material-ui/core'\n\nimport FabAdd from '../FabAdd'\nimport ListErrors from '../ListErrors'\nimport RecipeIngredientsEditor from './RecipeIngredientsEditor'\nimport RichEditor from '../RichEditor'\n\nimport {\n  ADD_RECIPE,\n  RECIPE_DIALOG_UNLOADED,\n  UPDATE_RECIPE,\n} from '../../constants/actionTypes'\nimport { MEAL_TYPES } from '../../constants/mealTypes'\nimport agent from '../../agent'\n\nconst mapStateToProps = (state) => ({\n  ...state.recipes,\n  ingredients: state.ingredients.ingredients,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAdd: (recipe) =>\n    dispatch({\n      type: ADD_RECIPE,\n      payload: agent.Recipes.add(recipe),\n      snackbar: { message: 'Recipe added', variant: 'success' },\n    }),\n  onExit: () => dispatch({ type: RECIPE_DIALOG_UNLOADED }),\n  onUpdate: (recipe) =>\n    dispatch({\n      type: UPDATE_RECIPE,\n      payload: agent.Recipes.update(recipe),\n      snackbar: { message: 'Recipe updated', variant: 'success' },\n    }),\n})\n\nconst HandleIsMealChange = () => {\n  const { values, setFieldValue } = useFormikContext()\n  useEffect(() => {\n    if (!values.isMeal) setFieldValue('mealType', '')\n  }, [values])\n  return null\n}\n\nconst RecipeEditor = ({\n  editor,\n  errors,\n  ingredients,\n  inProgress,\n  onAdd,\n  onExit,\n  onUpdate,\n}) => {\n  const [open, setOpen] = useState(false)\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmitAdd = (values) => {\n    onAdd({ ...values })\n  }\n\n  const handleSubmitUpdate = (values) => {\n    onUpdate({ ...editor.recipe, ...values })\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) setOpen(false)\n  }, [inProgress])\n\n  useEffect(() => {\n    // Open the dialog if an editor.recipe object is defined\n    setOpen(!!editor.recipe)\n  }, [editor.recipe])\n\n  return (\n    <>\n      <FabAdd item='recipe' onClick={handleClickOpen} />\n\n      <Dialog\n        fullScreen\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onFocus={(ev) => ev.stopPropagation()}\n        open={open}\n        TransitionProps={{\n          onExit: onExit,\n        }}\n      >\n        <Formik\n          initialValues={{\n            directions: editor.recipe?.directions || '',\n            ingredients: editor.recipe?.ingredients || [],\n            isMeal: editor.recipe?.isMeal || false,\n            mealType: editor.recipe?.mealType || '',\n            notes: editor.recipe?.notes || '',\n            prepTime: editor.recipe?.prepTime || '',\n            servings: editor.recipe?.servings || '',\n            title: editor.recipe?.title || '',\n            wwPoints: editor.recipe?.wwPoints || '',\n          }}\n          validationSchema={Yup.object({\n            directions: Yup.string().required('Required'),\n            ingredients: Yup.array(),\n            isMeal: Yup.boolean(),\n            mealType: Yup.string(),\n            notes: Yup.string(),\n            prepTime: Yup.number().required('Required'),\n            servings: Yup.number().required('Required'),\n            title: Yup.string().required('Required'),\n            wwPoints: Yup.number(),\n          })}\n          onSubmit={async (values) => {\n            editor.recipe ? handleSubmitUpdate(values) : handleSubmitAdd(values)\n          }}\n        >\n          {(formik) => (\n            <Container disableGutters>\n              <Form>\n                <DialogTitle>\n                  {editor.recipe ? 'Update recipe' : 'Add recipe'}\n                </DialogTitle>\n                <DialogContent>\n                  <ListErrors errors={errors} />\n                  <Grid container spacing={2}>\n                    <Grid item xs={12} md={6}>\n                      <Field\n                        autoFocus={!editor.recipe}\n                        component={TextField}\n                        disabled={inProgress}\n                        id='title'\n                        label='Recipe Title'\n                        name='title'\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={6} md={3}>\n                      <Field\n                        component={CheckboxWithLabel}\n                        disabled={inProgress}\n                        type='checkbox'\n                        name='isMeal'\n                        Label={{ label: 'This recipe is a meal' }}\n                      />\n                      <HandleIsMealChange />\n                    </Grid>\n                    <Grid item xs={6} md={3}>\n                      {formik.values.isMeal && (\n                        <Field\n                          component={TextField}\n                          disabled={inProgress}\n                          id='mealType'\n                          label='Meal Type'\n                          name='mealType'\n                          type='select'\n                          select\n                          fullWidth\n                        >\n                          {MEAL_TYPES.map((name) => {\n                            const value = name.toLowerCase()\n                            return (\n                              <MenuItem key={value} value={value}>\n                                {name}\n                              </MenuItem>\n                            )\n                          })}\n                        </Field>\n                      )}\n                    </Grid>\n                    <Grid item xs={12} md={4}>\n                      <Field\n                        component={TextField}\n                        disabled={inProgress}\n                        id='servings'\n                        label='Servings'\n                        name='servings'\n                        type='number'\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={12} md={4}>\n                      <Field\n                        component={TextField}\n                        disabled={inProgress}\n                        id='prepTime'\n                        label='Prep Time (minutes)'\n                        name='prepTime'\n                        type='number'\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={12} md={4}>\n                      <Field\n                        component={TextField}\n                        disabled={inProgress}\n                        id='wwPoints'\n                        label='WW Points'\n                        name='wwPoints'\n                        type='number'\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <Field\n                        component={TextField}\n                        disabled={inProgress}\n                        id='notes'\n                        label='Notes'\n                        name='notes'\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <RecipeIngredientsEditor\n                        ingredients={formik.values.ingredients}\n                        ingredientsList={ingredients}\n                        onChange={(ingredients) => {\n                          formik.setFieldValue('ingredients', ingredients)\n                        }}\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <Typography variant='h6'>Directions</Typography>\n                      <RichEditor\n                        errors={formik.errors.directions}\n                        initialValue={editor.recipe?.directions}\n                        name='directions'\n                        onEditorBlur={formik.setFieldTouched}\n                        onEditorChange={formik.setFieldValue}\n                        // onErrorChange={formik.setFieldError} // @todo: setFieldError is overridden by some internal formik function, so errors are handled by the component\n                        placeholder='Enter recipe directions here...'\n                        touched={formik.touched.directions}\n                      />\n                    </Grid>\n                  </Grid>\n                </DialogContent>\n                <DialogActions>\n                  <Button\n                    color='primary'\n                    disabled={inProgress}\n                    type='submit'\n                    variant='contained'\n                  >\n                    {editor.recipe\n                      ? inProgress\n                        ? 'Updating...'\n                        : 'Update'\n                      : inProgress\n                      ? 'Adding...'\n                      : 'Add'}\n                  </Button>\n                  <Button\n                    disabled={inProgress}\n                    onClick={handleClose}\n                    variant='contained'\n                  >\n                    Cancel\n                  </Button>\n                </DialogActions>\n              </Form>\n            </Container>\n          )}\n        </Formik>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RecipeEditor)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport MaterialTable, { MTableAction } from '@material-table/core'\n\nimport BulkDeleteConfirmationAlert from '../BulkDeleteConfirmationAlert'\n\nimport agent from '../../agent'\n\nimport {\n  DELETE_RECIPE,\n  DELETE_RECIPES,\n  RECIPE_DIALOG_LOADED,\n  RECIPE_VIEW_LOADED,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  recipes: state.recipes.recipes,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (recipe) =>\n    dispatch({\n      type: DELETE_RECIPE,\n      payload: agent.Recipes.delete(recipe),\n      snackbar: { message: 'Recipe deleted', variant: 'success' },\n    }),\n  onDeleteMany: (slugs) =>\n    dispatch({\n      type: DELETE_RECIPES,\n      payload: agent.Recipes.deleteMany(slugs),\n      snackbar: {\n        message: `${slugs.length} recipe${slugs.length > 1 ? 's' : ''} deleted`,\n        variant: 'success',\n      },\n    }),\n  onLoadUpdate: (recipe) => dispatch({ type: RECIPE_DIALOG_LOADED, recipe }),\n  onLoadView: (recipe) => dispatch({ type: RECIPE_VIEW_LOADED, recipe }),\n})\n\nconst RecipesTable = ({\n  onDelete,\n  onDeleteMany,\n  onLoadUpdate,\n  onLoadView,\n  recipes,\n}) => {\n  const [data, setData] = useState([])\n\n  const [columns] = useState([\n    { title: 'Title', field: 'title' },\n    { title: 'Prep Time (min)', field: 'prepTime' },\n    { title: 'Servings', field: 'servings' },\n    { title: 'WW Points', field: 'wwPoints' },\n    { title: 'Meal Type', field: 'mealType' },\n    { title: 'Notes', field: 'notes' },\n  ])\n\n  const handleDeleteManyClick = (data) => {\n    const slugs = data.map((row) => row.slug)\n    onDeleteMany(slugs)\n  }\n\n  const handleLoadUpdateClick = (recipe) => {\n    onLoadUpdate(recipe)\n  }\n\n  const handleLoadViewClick = (recipe) => {\n    onLoadView(recipe)\n  }\n\n  useEffect(() => {\n    setData(recipes)\n  }, [recipes])\n\n  return (\n    <MaterialTable\n      title='Recipes'\n      columns={columns}\n      data={data}\n      components={{\n        Action: (props) => {\n          if (typeof props.action.icon === 'function') {\n            return props.action.icon(props.data)\n          }\n          return <MTableAction {...props} />\n        },\n      }}\n      localization={{\n        body: {\n          emptyDataSourceMessage: 'No recipes found',\n          editRow: {\n            deleteText: 'Delete recipe? This action cannot be undone.',\n          },\n        },\n      }}\n      options={{\n        actionsColumnIndex: -1,\n        paging: false,\n        selection: true,\n        toolbar: true,\n      }}\n      actions={[\n        {\n          icon: 'visibility',\n          onClick: (e, data) => handleLoadViewClick(data),\n          position: 'row',\n          tooltip: 'View recipe',\n        },\n        {\n          icon: 'edit',\n          onClick: (e, data) => handleLoadUpdateClick(data),\n          position: 'row',\n          tooltip: 'Update recipe',\n        },\n        {\n          icon: (data) => (\n            <BulkDeleteConfirmationAlert\n              data={data}\n              name='recipe'\n              onDelete={handleDeleteManyClick}\n            />\n          ),\n          position: 'toolbarOnSelect',\n          tooltip: 'Delete selected recipes',\n        },\n      ]}\n      editable={{\n        onRowDelete: (oldData) =>\n          new Promise((resolve, reject) => {\n            const newData = [...data]\n            const index = oldData.tableData.id\n            newData.splice(index, 1)\n            setData([...newData])\n            onDelete(oldData)\n            resolve()\n          }),\n      }}\n    />\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RecipesTable)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Button } from '@material-ui/core'\n\nimport PageHeader from '../PageHeader'\nimport RecipeEditor from './RecipeEditor'\nimport RecipeViewer from './RecipeViewer'\nimport RecipesTable from './RecipesTable'\nimport Spinner from '../Spinner'\nimport agent from '../../agent'\n\nimport {\n  RECIPES_PAGE_LOADED,\n  RECIPES_PAGE_UNLOADED,\n  RECIPE_VIEW_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  ingredients: state.ingredients.ingredients,\n  pageLoaded: state.recipes.pageLoaded,\n  viewer: state.recipes.viewer,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: () =>\n    dispatch({\n      type: RECIPES_PAGE_LOADED,\n      payload: Promise.all([\n        agent.Recipes.getAll(),\n        agent.Ingredients.getAll(),\n        agent.Categories.getAll(),\n      ]),\n    }),\n  onUnload: () => dispatch({ type: RECIPES_PAGE_UNLOADED }),\n  onUnloadView: () => dispatch({ type: RECIPE_VIEW_UNLOADED }),\n})\n\nconst Recipes = ({\n  ingredients,\n  onLoad,\n  onUnload,\n  onUnloadView,\n  pageLoaded,\n  viewer,\n}) => {\n  useEffect(() => {\n    onLoad()\n\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  return (\n    <>\n      <PageHeader title={viewer.recipe ? 'View Recipe' : 'Manage Recipes'}>\n        {viewer.recipe ? (\n          <Button color='secondary' onClick={onUnloadView}>\n            Manage recipes\n          </Button>\n        ) : (\n          <RecipeEditor />\n        )}\n      </PageHeader>\n      {pageLoaded ? (\n        viewer.recipe ? (\n          <RecipeViewer ingredients={ingredients} recipe={viewer.recipe} />\n        ) : (\n          <RecipesTable />\n        )\n      ) : (\n        <Spinner />\n      )}\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Recipes)\n","import React from 'react'\nimport { Draggable } from 'react-beautiful-dnd'\nimport { Chip, Paper, useTheme } from '@material-ui/core'\n\nconst CategoryDraggable = ({ category, index }) => {\n  const theme = useTheme()\n\n  const getStyle = (isDragging, draggableStyle) => ({\n    background: isDragging ? theme.palette.secondary.light : 'white',\n    marginBottom: theme.spacing(1),\n    padding: theme.spacing(2),\n    userSelect: 'none',\n    ...draggableStyle,\n  })\n\n  return (\n    <Draggable draggableId={category.slug} index={index} key={category.slug}>\n      {(provided, snapshot) => (\n        <Paper\n          elevation={3}\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          style={getStyle(snapshot.isDragging, provided.draggableProps.style)}\n        >\n          {category.name}{' '}\n          {category.isNew && (\n            <Chip\n              color='secondary'\n              label='new'\n              size='small'\n              style={{ color: 'white', fontStyle: 'italic' }}\n            />\n          )}\n        </Paper>\n      )}\n    </Draggable>\n  )\n}\n\nexport default CategoryDraggable\n","import React from 'react'\nimport { Droppable } from 'react-beautiful-dnd'\nimport { useMediaQuery, useTheme } from '@material-ui/core'\n\nimport CategoryDraggable from './CategoryDraggable'\n\nconst CategoryDroppable = ({ categories }) => {\n  const theme = useTheme()\n  const fullWidth = useMediaQuery(theme.breakpoints.down('md'))\n\n  const getStyle = (isDraggingOver) => ({\n    border: isDraggingOver\n      ? `2px dashed ${theme.palette.primary.light}`\n      : '2px solid white',\n    minHeight: '120px',\n    padding: theme.spacing(1),\n    width: fullWidth ? '100%' : '50%',\n  })\n\n  return (\n    <Droppable droppableId='categories'>\n      {(provided, snapshot) => (\n        <div\n          {...provided.droppableProps}\n          ref={provided.innerRef}\n          style={getStyle(snapshot.isDraggingOver)}\n        >\n          {categories.map((category, index) => (\n            <CategoryDraggable\n              category={category}\n              index={index}\n              key={category.slug}\n            />\n          ))}\n          {provided.placeholder}\n        </div>\n      )}\n    </Droppable>\n  )\n}\n\nexport default CategoryDroppable\n","import React, { useState } from 'react'\nimport { DragDropContext } from 'react-beautiful-dnd'\n\nimport CategoryDroppable from './CategoryDroppable'\n\nconst CategorySorter = ({ categories, name, onChange }) => {\n  const [list, setList] = useState(categories)\n\n  const onDragEnd = (result) => {\n    const { destination, source, draggableId } = result\n\n    if (!destination || destination.index === source.index) return\n\n    const category = categories.find(\n      (category) => category.slug === draggableId\n    )\n    const newList = [...list]\n    newList.splice(source.index, 1)\n    newList.splice(destination.index, 0, category)\n\n    setList(newList)\n    onChange(name, newList)\n    return\n  }\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <CategoryDroppable categories={list} />\n    </DragDropContext>\n  )\n}\n\nexport default CategorySorter\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Container,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  Typography,\n} from '@material-ui/core'\n\nimport CategorySorter from './CategorySorter/CategorySorter'\nimport ListErrors from '../ListErrors'\n\nimport {\n  ADD_STORE,\n  STORE_DIALOG_UNLOADED,\n  UPDATE_STORE,\n} from '../../constants/actionTypes'\nimport agent from '../../agent'\n\nconst mapStateToProps = (state) => ({\n  ...state.stores,\n  categories: state.categories.categories,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAdd: (store) =>\n    dispatch({\n      type: ADD_STORE,\n      payload: agent.Stores.add(store),\n      snackbar: { message: 'Store added', variant: 'success' },\n    }),\n  onExit: () => dispatch({ type: STORE_DIALOG_UNLOADED }),\n  onUpdate: (store) =>\n    dispatch({\n      type: UPDATE_STORE,\n      payload: agent.Stores.update(store),\n      snackbar: { message: 'Store updated', variant: 'success' },\n    }),\n})\n\nconst StoreDialog = ({\n  categories,\n  editor,\n  errors,\n  inProgress,\n  onAdd,\n  onExit,\n  onUpdate,\n}) => {\n  const [open, setOpen] = useState(false)\n\n  const isUpdate = !!editor.store?.name\n\n  const getCategories = () => {\n    if (!editor.store?.categories) return categories\n\n    let allCategories = [...editor.store.categories]\n    categories.forEach((category) => {\n      if (!allCategories.find((cat) => cat._id === category._id)) {\n        allCategories.push({ ...category, isNew: true })\n      }\n    })\n    return allCategories\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmitAdd = (values) => {\n    onAdd({ ...values })\n  }\n\n  const handleSubmitUpdate = (values) => {\n    onUpdate({ ...editor.store, ...values })\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) setOpen(false)\n  }, [inProgress])\n\n  useEffect(() => {\n    // Open the dialog if an editor.store object is defined\n    setOpen(!!editor.store)\n  }, [editor.store])\n\n  return (\n    <Dialog\n      fullScreen\n      onClick={(ev) => ev.stopPropagation()}\n      onClose={handleClose}\n      onFocus={(ev) => ev.stopPropagation()}\n      open={open}\n      TransitionProps={{\n        onExit: onExit,\n      }}\n    >\n      <Formik\n        initialValues={{\n          categories: getCategories(),\n          name: editor.store?.name || '',\n          notes: editor.store?.notes || '',\n        }}\n        validationSchema={Yup.object({\n          categories: Yup.array(),\n          name: Yup.string().required('Required'),\n          notes: Yup.string(),\n        })}\n        onSubmit={async (values) => {\n          isUpdate ? handleSubmitUpdate(values) : handleSubmitAdd(values)\n        }}\n      >\n        {(formik) => (\n          <Container disableGutters>\n            <Form>\n              <DialogTitle>\n                {isUpdate ? 'Update store' : 'Add store'}\n              </DialogTitle>\n              <DialogContent>\n                <ListErrors errors={errors} />\n                <Grid container spacing={2}>\n                  <Grid item xs={12}>\n                    <Field\n                      autoFocus={!isUpdate}\n                      component={TextField}\n                      disabled={inProgress}\n                      id='name'\n                      label='Store Name'\n                      name='name'\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Field\n                      component={TextField}\n                      disabled={inProgress}\n                      id='notes'\n                      label='Store Notes'\n                      name='notes'\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Typography variant='h6'>Categories</Typography>\n                    <CategorySorter\n                      categories={formik.values.categories}\n                      name='categories'\n                      onChange={formik.setFieldValue}\n                    />\n                  </Grid>\n                </Grid>\n              </DialogContent>\n              <DialogActions>\n                <Button\n                  color='primary'\n                  disabled={inProgress}\n                  type='submit'\n                  variant='contained'\n                >\n                  {isUpdate\n                    ? inProgress\n                      ? 'Updating...'\n                      : 'Update'\n                    : inProgress\n                    ? 'Adding...'\n                    : 'Add'}\n                </Button>\n                <Button\n                  disabled={inProgress}\n                  onClick={handleClose}\n                  variant='contained'\n                >\n                  Cancel\n                </Button>\n              </DialogActions>\n            </Form>\n          </Container>\n        )}\n      </Formik>\n    </Dialog>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StoreDialog)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport MaterialTable from '@material-table/core'\nimport { AddBox, StarBorder } from '@material-ui/icons'\n\nimport StoreDialog from './StoreDialog'\n\nimport {\n  DELETE_STORE,\n  SET_DEFAULT_STORE,\n  STORE_DIALOG_LOADED,\n} from '../../constants/actionTypes'\nimport agent from '../../agent'\n\nconst mapStateToProps = (state) => ({\n  defaultStore: state.common.settings.defaultStore,\n  stores: state.stores.stores,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (store) =>\n    dispatch({\n      type: DELETE_STORE,\n      payload: agent.Stores.delete(store),\n      snackbar: { message: 'Store deleted', variant: 'success' },\n    }),\n  onLoadUpdate: (store) => dispatch({ type: STORE_DIALOG_LOADED, store }),\n  onSetDefault: (settings) =>\n    dispatch({\n      type: SET_DEFAULT_STORE,\n      payload: agent.Settings.update(settings),\n      snackbar: { message: 'Default store saved', variant: 'success' },\n    }),\n})\n\nconst StoresTable = ({\n  defaultStore,\n  onDelete,\n  onLoadUpdate,\n  onSetDefault,\n  stores,\n}) => {\n  const [data, setData] = useState([])\n\n  const [columns] = useState([\n    { title: 'Name', field: 'name' },\n    { title: 'Notes', field: 'notes' },\n  ])\n\n  const handleLoadUpdateClick = (store) => {\n    onLoadUpdate(store)\n  }\n\n  const handleSetDefaultClick = (store) => {\n    const settings = { defaultStore: store }\n    onSetDefault(settings)\n  }\n\n  useEffect(() => {\n    setData(stores)\n  }, [stores])\n\n  return (\n    <>\n      <StoreDialog />\n      <MaterialTable\n        title='Manage Stores'\n        columns={columns}\n        data={data}\n        localization={{\n          body: {\n            emptyDataSourceMessage: 'No stores found',\n            editRow: {\n              deleteText: 'Delete store? This action cannot be undone.',\n            },\n          },\n        }}\n        actions={[\n          {\n            action: (rowData) => ({\n              icon:\n                rowData._id === defaultStore ? 'star' : () => <StarBorder />,\n              onClick: (e, data) => handleSetDefaultClick(data),\n              position: 'row',\n              tooltip:\n                rowData._id === defaultStore\n                  ? 'Default store'\n                  : 'Set as default store',\n            }),\n          },\n          {\n            action: (rowData) => ({\n              icon: 'edit',\n              onClick: (e, data) => handleLoadUpdateClick(data),\n              position: 'row',\n              tooltip: 'Update store',\n            }),\n          },\n          {\n            icon: () => <AddBox />,\n            isFreeAction: true,\n            onClick: () => handleLoadUpdateClick({}),\n            position: 'toolbar',\n            tooltip: 'Add store',\n          },\n        ]}\n        options={{\n          actionsColumnIndex: -1,\n          paging: false,\n          toolbar: true,\n        }}\n        editable={{\n          onRowDelete: (oldData) =>\n            new Promise((resolve, reject) => {\n              const newData = [...data]\n              const index = oldData.tableData.id\n              newData.splice(index, 1)\n              setData([...newData])\n              onDelete(oldData)\n              resolve()\n            }),\n        }}\n        style={{ boxShadow: 'none' }}\n      />\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StoresTable)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport Spinner from '../Spinner'\nimport StoresTable from './StoresTable'\n\nimport {\n  STORES_PAGE_LOADED,\n  STORES_PAGE_UNLOADED,\n} from '../../constants/actionTypes'\nimport agent from '../../agent'\n\nconst mapStateToProps = (state) => ({\n  ...state.stores,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: () =>\n    dispatch({\n      type: STORES_PAGE_LOADED,\n      payload: Promise.all([agent.Stores.getAll(), agent.Categories.getAll()]),\n    }),\n  onUnload: () => dispatch({ type: STORES_PAGE_UNLOADED }),\n})\n\nconst Stores = ({ onLoad, onUnload, pageLoaded }) => {\n  useEffect(() => {\n    onLoad()\n\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  return <>{pageLoaded ? <StoresTable /> : <Spinner />}</>\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Stores)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport { Fab, Grid, Paper, Typography, makeStyles } from '@material-ui/core'\nimport { SaveAlt } from '@material-ui/icons'\n\nimport ListErrors from './ListErrors'\nimport PageHeader from './PageHeader'\nimport Stores from './Stores/Stores'\nimport agent from '../agent'\n\nimport {\n  SETTINGS_PAGE_UNLOADED,\n  SETTINGS_SAVED,\n} from '../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(4),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.settings,\n  currentUser: state.common.currentUser,\n  settings: state.common.settings,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmitForm: (settings) =>\n    dispatch({\n      type: SETTINGS_SAVED,\n      payload: Promise.all([\n        agent.Auth.save(settings),\n        agent.Settings.update(settings),\n      ]),\n      snackbar: { message: 'Settings saved', variant: 'success' },\n    }),\n  onUnload: () => dispatch({ type: SETTINGS_PAGE_UNLOADED }),\n})\n\nconst Settings = ({\n  currentUser,\n  errors,\n  inProgress,\n  onSubmitForm,\n  onUnload,\n  settings,\n}) => {\n  const classes = useStyles()\n\n  useEffect(() => {\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  return (\n    <Formik\n      enableReinitialize={true}\n      initialValues={{\n        firstName: currentUser.firstName,\n        lastName: currentUser.lastName,\n        password: '',\n      }}\n      validationSchema={Yup.object({\n        firstName: Yup.string(),\n        lastName: Yup.string(),\n        password: Yup.string(),\n      })}\n      onSubmit={async (values, form) => {\n        const userSettings = { ...values }\n\n        if (!userSettings.password) delete userSettings.password\n\n        onSubmitForm(userSettings)\n\n        form.resetForm({\n          values: { ...userSettings, password: '' },\n        })\n      }}\n    >\n      <Form>\n        <PageHeader title='Manage Account'>\n          <Fab\n            color='primary'\n            disabled={inProgress}\n            type='sumbit'\n            variant='extended'\n          >\n            <SaveAlt className={classes.icon} />\n            {inProgress ? 'Saving...' : 'Save settings'}\n          </Fab>\n        </PageHeader>\n        <ListErrors errors={errors} />\n\n        {currentUser.role !== 'admin' && (\n          <Paper className={classes.paper}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <Stores />\n              </Grid>\n            </Grid>\n          </Paper>\n        )}\n\n        {/* <Paper className={classes.paper}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Typography variant='h5' gutterBottom>\n                Linked Accounts\n              </Typography>\n            </Grid>\n          </Grid>\n        </Paper> */}\n\n        <Paper className={classes.paper}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Typography variant='h5' gutterBottom>\n                Account Details\n              </Typography>\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <Field\n                component={TextField}\n                label='First name'\n                name='firstName'\n                type='text'\n                variant='outlined'\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <Field\n                component={TextField}\n                label='Last name'\n                name='lastName'\n                type='text'\n                variant='outlined'\n                fullWidth\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n\n        <Paper className={classes.paper}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Typography variant='h5' gutterBottom>\n                Account Security\n              </Typography>\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <Field\n                component={TextField}\n                label='New password'\n                name='password'\n                type='password'\n                variant='outlined'\n                fullWidth\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n      </Form>\n    </Formik>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport { Container } from '@material-ui/core'\n\nimport Categories from './Categories/Categories'\nimport Header from './Header'\nimport Ingredients from './Ingredients/Ingredients'\nimport ManageUsers from './Admin/ManageUsers'\nimport Meals from './Meals/Meals'\nimport Navigation from './Navigation'\nimport NotFound from './NotFound'\nimport PageWrapper from './PageWrapper'\nimport Plans from './Plans/Plans'\nimport ProtectedRoute from './ProtectedRoute'\nimport Recipes from './Recipes/Recipes'\nimport Settings from './Settings'\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.common.currentUser,\n})\n\nconst Home = ({ currentUser }) => {\n  if (!currentUser) return <Redirect to='/login' />\n\n  return (\n    <>\n      <Header currentUser={currentUser} />\n      <PageWrapper>\n        <Container>\n          <Switch>\n            <ProtectedRoute component={Plans} path='/plans' />\n            <ProtectedRoute component={Meals} path='/meals' />\n            <ProtectedRoute component={Recipes} path='/recipes' />\n\n            <ProtectedRoute\n              component={Categories}\n              path='/ingredients/categories'\n            />\n            <ProtectedRoute component={Ingredients} path='/ingredients' />\n\n            <ProtectedRoute component={Settings} path='/settings' />\n            <ProtectedRoute component={ManageUsers} path='/users' />\n\n            <Route component={NotFound} />\n          </Switch>\n        </Container>\n        <Navigation />\n      </PageWrapper>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, null)(Home)\n","import React from 'react'\nimport { Paper, Typography, makeStyles } from '@material-ui/core'\nimport Div100vh from 'react-div-100vh'\n\nimport Logo from './Logo'\nimport background from './../images/plate-background.png'\n\nconst useStyles = makeStyles((theme) => ({\n  background: {\n    alignItems: 'center',\n    backgroundImage: `url(${background})`,\n    backgroundSize: 'cover',\n    display: 'flex',\n    height: '100%',\n    justifyContent: 'center',\n  },\n  logo: {\n    marginBottom: theme.spacing(4),\n    width: 160,\n  },\n  panel: {\n    alignItems: 'center',\n    borderRadius: '1rem',\n    display: 'flex',\n    flexFlow: 'column nowrap',\n    overflowY: 'scroll',\n    padding: '2rem 4rem',\n    position: 'relative',\n  },\n  text: {\n    color: theme.palette.primary.main,\n    fontStyle: 'italic',\n  },\n}))\n\nconst Loading = (props) => {\n  const classes = useStyles()\n\n  return (\n    <Div100vh className={classes.background}>\n      <Paper elevation={12} className={classes.panel}>\n        <Logo className={classes.logo} />\n        <Typography className={classes.text} variant='h4'>\n          Loading...\n        </Typography>\n      </Paper>\n    </Div100vh>\n  )\n}\n\nexport default Loading\n","import React from 'react'\nimport { Grid, Link, Typography, makeStyles } from '@material-ui/core'\n\nimport profile from '../images/doc-may-profile.jpg'\n\nconst useStyles = makeStyles((theme) => ({\n  page: {\n    '& p:not(:last-of-type)': {\n      marginBottom: theme.spacing(2),\n    },\n  },\n  profile: {\n    borderRadius: '100%',\n    boxShadow: theme.shadows[10],\n    float: 'right',\n    marginBottom: theme.spacing(2),\n    marginLeft: theme.spacing(2),\n    width: '120px',\n  },\n}))\n\nconst About = () => {\n  const classes = useStyles()\n\n  return (\n    <Grid className={classes.page} container spacing={2}>\n      <Grid item xs={12}>\n        <Typography align='center' gutterBottom variant='h5'>\n          What is Plate?\n        </Typography>\n        <img className={classes.profile} src={profile} />\n        <Typography variant='body2'>\n          Hello, I'm Joseph May, a high school chemistry teacher from Las Vegas.\n          While I love teaching chemistry, I also love programming for the web,\n          so why not combine the two.\n        </Typography>\n        <Typography variant='body2'>\n          Plate is a web-based app I created to help my wife and I manage our\n          meals and shopping list for each week. It allows you to create weekly\n          meal plans from recipes you input into the system. It can then\n          generate and push a shopping list to your iPhone or Android device.\n        </Typography>\n        <Typography variant='body2'>\n          While this app can support multiple users, I am running it on no-cost\n          servers, so it was not intended to be a public program. Although, if\n          you are interested in learning more, please reach out to me{' '}\n          <Link href='mailto:jwmay87+plate@gmail.com'>here</Link>.\n        </Typography>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default About\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport { Button, Grid } from '@material-ui/core'\nimport * as Yup from 'yup'\n\nimport ListErrors from '../ListErrors'\nimport agent from '../../agent'\n\nimport { LOGIN } from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({ ...state.auth })\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (username, password) =>\n    dispatch({ type: LOGIN, payload: agent.Auth.login(username, password) }),\n})\n\nconst LoginForm = (props) => {\n  const submitForm = (username, password) => {\n    props.onSubmit(username, password)\n  }\n\n  return (\n    <Formik\n      initialValues={{\n        username: '',\n        password: '',\n      }}\n      validationSchema={Yup.object({\n        username: Yup.string().required('Required'),\n        password: Yup.string().required('Required'),\n      })}\n      onSubmit={(values) => {\n        const { username, password } = values\n        submitForm(username, password)\n      }}\n    >\n      <Form>\n        <Grid container spacing={4}>\n          <Grid item xs={12}>\n            <ListErrors errors={props.errors} />\n            <Field\n              component={TextField}\n              disabled={props.inProgress}\n              fullWidth\n              label='Username'\n              name='username'\n              type='text'\n              variant='outlined'\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Field\n              component={TextField}\n              disabled={props.inProgress}\n              fullWidth\n              label='Password'\n              name='password'\n              type='password'\n              variant='outlined'\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Button\n              color='primary'\n              disabled={props.inProgress}\n              size='large'\n              type='submit'\n              variant='contained'\n            >\n              {props.inProgress ? 'Loading...' : 'Login'}\n            </Button>\n          </Grid>\n        </Grid>\n      </Form>\n    </Formik>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, Redirect } from 'react-router-dom'\nimport Div100vh from 'react-div-100vh'\nimport {\n  Button,\n  Grid,\n  LinearProgress,\n  Paper,\n  Tooltip,\n  makeStyles,\n} from '@material-ui/core'\nimport { ArrowBackIos, InfoOutlined } from '@material-ui/icons'\n\nimport About from '../About'\nimport Logo from '../Logo'\nimport LoginForm from './LoginForm'\nimport background from '../../images/plate-background.png'\n\nimport { LOGIN_PAGE_UNLOADED } from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  aboutLink: {\n    bottom: theme.spacing(2),\n    position: 'absolute',\n    right: theme.spacing(4),\n  },\n  loginLink: {\n    'marginBottom': theme.spacing(2),\n    '& > a': {\n      textDecoration: 'none',\n    },\n  },\n  logo: {\n    display: 'block',\n    margin: '0 auto',\n    width: 120,\n  },\n  page: {\n    alignItems: 'center',\n    backgroundImage: `url(${background})`,\n    backgroundSize: 'cover',\n    display: 'flex',\n    height: '100%',\n    justifyContent: 'center',\n    [theme.breakpoints.up('lg')]: {\n      backgroundSize: 'initial',\n      justifyContent: 'flex-end',\n    },\n  },\n  panel: {\n    borderRadius: '1rem',\n    maxHeight: '90%',\n    overflowY: 'scroll',\n    padding: '4rem 2rem',\n    position: 'relative',\n    width: '80%',\n    [theme.breakpoints.up('lg')]: {\n      borderRadius: '0',\n      height: '100%',\n      maxHeight: '100%',\n      width: '40%',\n    },\n  },\n  progress: {\n    height: 10,\n    left: '0',\n    position: 'absolute',\n    top: '0',\n    width: '100%',\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.auth,\n  currentUser: state.common.currentUser,\n  pathname: state.router.location.pathname,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onUnload: () => dispatch({ type: LOGIN_PAGE_UNLOADED }),\n})\n\nconst AboutLink = () => {\n  const classes = useStyles()\n  return (\n    <span className={classes.aboutLink}>\n      <Tooltip arrow enterTouchDelay={0} title='Learn more'>\n        <Link to='/about'>\n          <InfoOutlined color='secondary' fontSize='small' />\n        </Link>\n      </Tooltip>\n    </span>\n  )\n}\n\nconst LoginLink = () => {\n  const classes = useStyles()\n  return (\n    <div className={classes.loginLink}>\n      <Link to='/login'>\n        <Button color='secondary' startIcon={<ArrowBackIos />}>\n          Login\n        </Button>\n      </Link>\n    </div>\n  )\n}\n\nconst Login = ({ currentUser, inProgress, onUnload, pathname }) => {\n  const classes = useStyles()\n\n  useEffect(() => {\n    return () => onUnload()\n  }, [])\n\n  if (currentUser) {\n    return <Redirect to='/' />\n  }\n\n  return (\n    <Div100vh>\n      <div className={classes.page}>\n        <Paper elevation={12} className={classes.panel}>\n          {inProgress && <LinearProgress className={classes.progress} />}\n          <Grid container spacing={4}>\n            <Grid item xs={12}>\n              <Logo className={classes.logo} />\n            </Grid>\n            <Grid item xs={12}>\n              {pathname.includes('about') ? (\n                <>\n                  <LoginLink />\n                  <About />\n                </>\n              ) : (\n                <>\n                  <AboutLink />\n                  <LoginForm />\n                </>\n              )}\n            </Grid>\n          </Grid>\n        </Paper>\n      </div>\n    </Div100vh>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { SnackbarProvider, useSnackbar } from 'notistack'\n// import { Button } from '@material-ui/core'\n\nimport { SNACKBAR_CLOSED } from '../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  snackbar: state.notifier.snackbar,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSnackbarClose: () => dispatch({ type: SNACKBAR_CLOSED }),\n})\n\nconst Notification = (props) => {\n  const { snackbar } = props\n  const { enqueueSnackbar } = useSnackbar()\n\n  useEffect(() => {\n    if (snackbar) {\n      enqueueSnackbar(snackbar.message, { variant: snackbar.variant })\n    }\n  }, [snackbar])\n\n  return props.children\n}\n\nconst Notifier = (props) => {\n  // const notistackRef = React.createRef()\n  // const onSnackbarDismiss = (key) => () => {\n  //   notistackRef.current.closeSnackbar(key)\n  // }\n\n  return (\n    <SnackbarProvider\n      maxSnack={1}\n      // ref={notistackRef}\n      // @todo: Not working with recent update to notistack@1.0.9 [07.08.2021]\n      // action={(key) => (\n      //   <Button onClick={onSnackbarDismiss(key)}>Dismiss</Button>\n      // )}\n      onClose={() => {\n        props.onSnackbarClose()\n      }}\n    >\n      <Notification snackbar={props.snackbar}>{props.children}</Notification>\n    </SnackbarProvider>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notifier)\n","import { createTheme } from '@material-ui/core'\nimport { blueGrey, indigo } from '@material-ui/core/colors'\n\nconst Theme = createTheme({\n  breakpoints: {\n    values: {\n      md: 768,\n      lg: 1024,\n    },\n  },\n  palette: {\n    primary: { main: blueGrey[400] },\n    secondary: { main: indigo[200] },\n  },\n  overrides: {\n    MuiDialogActions: {\n      root: {\n        padding: '16px 24px',\n      },\n    },\n    MUIRichTextEditor: {\n      placeHolder: {\n        position: 'relative',\n      },\n      toolbar: {\n        '& button.MuiIconButton-colorPrimary': {\n          color: indigo[200],\n        },\n      },\n      editor: {\n        '& li': {\n          borderBottom: `1px solid #ccc`,\n          marginBottom: '32px',\n          paddingBottom: '16px',\n        },\n      },\n    },\n  },\n})\n\nexport default Theme\n","import {\n  ASYNC_START,\n  LOGIN,\n  LOGIN_PAGE_UNLOADED,\n  REGISTER,\n  REGISTER_PAGE_UNLOADED,\n} from '../constants/actionTypes'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case ASYNC_START:\n      if (action.subtype === LOGIN || action.subtype === REGISTER) {\n        return { ...state, inProgress: true }\n      }\n      break\n    case LOGIN:\n    case REGISTER:\n      return {\n        ...state,\n        inProgress: false,\n        errors: action.error ? action.payload.errors : null,\n      }\n    case LOGIN_PAGE_UNLOADED:\n    case REGISTER_PAGE_UNLOADED:\n      return {}\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  ADD_CATEGORY,\n  ASYNC_START,\n  CATEGORY_DIALOG_UNLOADED,\n  CATEGORIES_PAGE_LOADED,\n  CATEGORIES_PAGE_UNLOADED,\n  DELETE_CATEGORY,\n  DELETE_CATEGORIES,\n  INGREDIENTS_PAGE_LOADED,\n  INGREDIENTS_PAGE_UNLOADED,\n  PLANS_PAGE_LOADED,\n  PLANS_PAGE_UNLOADED,\n  RECIPES_PAGE_LOADED,\n  RECIPES_PAGE_UNLOADED,\n  STORES_PAGE_LOADED,\n  STORES_PAGE_UNLOADED,\n  UPDATE_CATEGORY,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  errors: null,\n  categories: [],\n  inProgress: false,\n  pageLoaded: false,\n}\n\nconst sortByName = (a, b) => a.name.localeCompare(b.name)\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case ADD_CATEGORY:\n      return {\n        ...state,\n        categories: action.error\n          ? state.categories\n          : [...state.categories, action.payload.category].sort((a, b) =>\n              sortByName(a, b)\n            ),\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    case ASYNC_START:\n      if (\n        action.subtype === ADD_CATEGORY ||\n        action.subtype === UPDATE_CATEGORY\n      ) {\n        return { ...state, errors: null, inProgress: true }\n      } else if (action.subtype === CATEGORIES_PAGE_LOADED) {\n        return { ...state, errors: null, pageLoaded: false }\n      }\n      break\n    case DELETE_CATEGORY:\n      return {\n        ...state,\n        categories: action.error\n          ? state.categories\n          : state.categories.filter(\n              (category) => category.slug !== action.payload.category.slug\n            ),\n      }\n    case DELETE_CATEGORIES:\n      return {\n        ...state,\n        categories: action.error\n          ? state.categories\n          : state.categories.filter(\n              (category) => !action.payload.categories.includes(category.slug)\n            ),\n      }\n    case CATEGORY_DIALOG_UNLOADED:\n      return { ...state, errors: null }\n    case CATEGORIES_PAGE_LOADED:\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        categories: action.error ? [] : action.payload.categories,\n        inProgress: false,\n        pageLoaded: true,\n      }\n    case CATEGORIES_PAGE_UNLOADED:\n    case INGREDIENTS_PAGE_UNLOADED:\n    case PLANS_PAGE_UNLOADED:\n    case RECIPES_PAGE_UNLOADED:\n    case STORES_PAGE_UNLOADED:\n      return defaultState\n    case INGREDIENTS_PAGE_LOADED:\n    case STORES_PAGE_LOADED:\n      return {\n        ...state,\n        categories: action.error ? [] : action.payload[1].categories,\n      }\n    case PLANS_PAGE_LOADED:\n      return {\n        ...state,\n        categories: action.error ? [] : action.payload[4].categories,\n      }\n    case RECIPES_PAGE_LOADED:\n      return {\n        ...state,\n        categories: action.error ? [] : action.payload[2].categories,\n      }\n    case UPDATE_CATEGORY:\n      return {\n        ...state,\n        categories: action.error\n          ? state.categories\n          : state.categories\n              .map((category) =>\n                category._id === action.payload.category._id\n                  ? action.payload.category\n                  : category\n              )\n              .sort((a, b) => sortByName(a, b)),\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  APP_LOAD,\n  LOGIN,\n  LOGIN_PAGE_UNLOADED,\n  LOGOUT,\n  NAV_LOADED,\n  NAV_TAB_CHANGE,\n  REDIRECT,\n  REGISTER,\n  REGISTER_PAGE_UNLOADED,\n  SET_DEFAULT_STORE,\n  SET_STARRED_PLAN,\n  SETTINGS_SAVED,\n  SETTINGS_PAGE_UNLOADED,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  token: null,\n  viewChangeCounter: 0,\n}\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case APP_LOAD:\n      return {\n        ...state,\n        token: action.token || null,\n        appLoaded: true,\n        currentUser: action.payload ? action.payload.user : null,\n        settings: action.payload ? action.payload.settings : null,\n      }\n    case LOGOUT:\n      return { ...state, redirectTo: '/login', token: null, currentUser: null }\n    case LOGIN:\n    case REGISTER:\n      return {\n        ...state,\n        redirectTo: action.error\n          ? null\n          : action.payload.user.role === 'admin'\n          ? '/users'\n          : '/plans',\n        token: action.error ? null : action.payload.user.token,\n        currentUser: action.error ? null : action.payload.user,\n        settings: action.error ? null : action.payload.settings,\n      }\n    case LOGIN_PAGE_UNLOADED:\n    case REGISTER_PAGE_UNLOADED:\n    case SETTINGS_PAGE_UNLOADED:\n      return { ...state, viewChangeCounter: state.viewChangeCounter + 1 }\n    case NAV_LOADED:\n    case NAV_TAB_CHANGE:\n      return { ...state, redirectTo: action.redirectTo }\n    case REDIRECT:\n      return { ...state, redirectTo: null }\n    case SET_DEFAULT_STORE:\n    case SET_STARRED_PLAN:\n      return {\n        ...state,\n        settings: action.error ? state.settings : action.payload.settings,\n      }\n    case SETTINGS_SAVED:\n      return {\n        ...state,\n        currentUser: action.error ? state.currentUser : action.payload[0].user,\n        settings: action.error ? state.settings : action.payload[1].settings,\n      }\n    default:\n      return state\n  }\n}\n","import {\n  ADD_INGREDIENT,\n  ASYNC_START,\n  INGREDIENT_DIALOG_UNLOADED,\n  INGREDIENTS_PAGE_LOADED,\n  INGREDIENTS_PAGE_UNLOADED,\n  DELETE_INGREDIENT,\n  DELETE_INGREDIENTS,\n  PLANS_PAGE_LOADED,\n  PLANS_PAGE_UNLOADED,\n  RECIPES_PAGE_LOADED,\n  RECIPES_PAGE_UNLOADED,\n  UPDATE_INGREDIENT,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  errors: null,\n  ingredients: [],\n  inProgress: false,\n  pageLoaded: false,\n}\n\nconst sortByName = (a, b) => a.name.localeCompare(b.name)\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case ADD_INGREDIENT:\n      return {\n        ...state,\n        ingredients: action.error\n          ? state.ingredients\n          : [...state.ingredients, action.payload.ingredient].sort((a, b) =>\n              sortByName(a, b)\n            ),\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    case ASYNC_START:\n      if (\n        action.subtype === ADD_INGREDIENT ||\n        action.subtype === UPDATE_INGREDIENT\n      ) {\n        return { ...state, errors: null, inProgress: true }\n      } else if (action.subtype === INGREDIENTS_PAGE_LOADED) {\n        return { ...state, errors: null, pageLoaded: false }\n      }\n      break\n    case DELETE_INGREDIENT:\n      return {\n        ...state,\n        ingredients: action.error\n          ? state.ingredients\n          : state.ingredients.filter(\n              (ingredient) => ingredient.slug !== action.payload.ingredient.slug\n            ),\n      }\n    case DELETE_INGREDIENTS:\n      return {\n        ...state,\n        ingredients: action.error\n          ? state.ingredients\n          : state.ingredients.filter(\n              (ingredient) =>\n                !action.payload.ingredients.includes(ingredient.slug)\n            ),\n      }\n    case INGREDIENT_DIALOG_UNLOADED:\n      return { ...state, errors: null }\n    case INGREDIENTS_PAGE_LOADED:\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        ingredients: action.error ? [] : action.payload[0].ingredients,\n        inProgress: false,\n        pageLoaded: true,\n      }\n    case INGREDIENTS_PAGE_UNLOADED:\n    case RECIPES_PAGE_UNLOADED:\n    case PLANS_PAGE_UNLOADED:\n      return defaultState\n    case PLANS_PAGE_LOADED:\n      return {\n        ...state,\n        ingredients: action.error ? [] : action.payload[3].ingredients,\n      }\n    case RECIPES_PAGE_LOADED:\n      return {\n        ...state,\n        ingredients: action.error ? [] : action.payload[1].ingredients,\n      }\n    case UPDATE_INGREDIENT:\n      return {\n        ...state,\n        ingredients: action.error\n          ? state.ingredients\n          : state.ingredients\n              .map((ingredient) =>\n                ingredient._id === action.payload.ingredient._id\n                  ? action.payload.ingredient\n                  : ingredient\n              )\n              .sort((a, b) => sortByName(a, b)),\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  ADD_MEAL,\n  ASYNC_START,\n  DELETE_MEAL,\n  DELETE_MEALS,\n  MEAL_DIALOG_LOADED,\n  MEAL_DIALOG_UNLOADED,\n  MEALS_PAGE_LOADED,\n  MEALS_PAGE_UNLOADED,\n  PLANS_PAGE_LOADED,\n  PLANS_PAGE_UNLOADED,\n  UPDATE_MEAL,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  editor: { meal: null },\n  errors: null,\n  inProgress: false,\n  meals: [],\n  pageLoaded: false,\n}\n\nconst sortByTitle = (a, b) => a.title.localeCompare(b.title)\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case ADD_MEAL:\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        meals: action.error\n          ? state.meals\n          : [...state.meals, action.payload.meal].sort((a, b) =>\n              sortByTitle(a, b)\n            ),\n      }\n    case ASYNC_START:\n      if (action.subtype === ADD_MEAL || action.subtype === UPDATE_MEAL) {\n        return { ...state, errors: null, inProgress: true }\n      } else if (action.subtype === MEALS_PAGE_LOADED) {\n        return { ...state, errors: null, pageLoaded: false }\n      }\n      break\n    case DELETE_MEAL:\n      return {\n        ...state,\n        meals: action.error\n          ? state.meals\n          : state.meals.filter(\n              (meal) => meal.slug !== action.payload.meal.slug\n            ),\n      }\n    case DELETE_MEALS:\n      return {\n        ...state,\n        meals: action.error\n          ? state.meals\n          : state.meals.filter(\n              (meal) => !action.payload.meals.includes(meal.slug)\n            ),\n      }\n    case MEAL_DIALOG_LOADED:\n      return { ...state, editor: { ...state.editor, meal: action.meal } }\n    case MEAL_DIALOG_UNLOADED:\n      return { ...state, editor: { ...state.editor, meal: null }, errors: null }\n    case MEALS_PAGE_LOADED:\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        meals: action.error ? [] : action.payload[0].meals,\n        pageLoaded: true,\n      }\n    case MEALS_PAGE_UNLOADED:\n    case PLANS_PAGE_UNLOADED:\n      return defaultState\n    case PLANS_PAGE_LOADED:\n      return {\n        ...state,\n        meals: action.error ? [] : action.payload[1].meals,\n      }\n    case UPDATE_MEAL:\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        meals: action.error\n          ? state.meals\n          : state.meals\n              .map((meal) =>\n                meal._id === action.payload.meal._id\n                  ? action.payload.meal\n                  : meal\n              )\n              .sort((a, b) => sortByTitle(a, b)),\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  NAV_LOADED,\n  NAV_UNLOADED,\n  NAV_TAB_CHANGE,\n} from '../constants/actionTypes'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case NAV_LOADED:\n    case NAV_TAB_CHANGE:\n      return {\n        ...state,\n        navTabValue: action.value,\n      }\n    case NAV_UNLOADED:\n      return {}\n    default:\n      return state\n  }\n}\n","import {\n  ADD_CATEGORY,\n  ADD_INGREDIENT,\n  ADD_MEAL,\n  ADD_PLAN,\n  ADD_RECIPE,\n  ADD_STORE,\n  ADD_USER,\n  DELETE_CATEGORY,\n  DELETE_CATEGORIES,\n  DELETE_INGREDIENT,\n  DELETE_INGREDIENTS,\n  DELETE_MEAL,\n  DELETE_MEALS,\n  DELETE_PLAN,\n  DELETE_PLANS,\n  DELETE_RECIPE,\n  DELETE_RECIPES,\n  DELETE_STORE,\n  DELETE_USER,\n  PLAN_LIST_COPIED,\n  SET_DEFAULT_STORE,\n  SET_STARRED_PLAN,\n  SETTINGS_SAVED,\n  SNACKBAR_CLOSED,\n  UPDATE_CATEGORY,\n  UPDATE_INGREDIENT,\n  UPDATE_MEAL,\n  UPDATE_PLAN,\n  UPDATE_PLAN_ARCHIVE_STATUS,\n  UPDATE_RECIPE,\n  UPDATE_STORE,\n  UPDATE_USER,\n} from '../constants/actionTypes'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case ADD_CATEGORY:\n    case ADD_INGREDIENT:\n    case ADD_MEAL:\n    case ADD_PLAN:\n    case ADD_RECIPE:\n    case ADD_STORE:\n    case ADD_USER:\n    case DELETE_CATEGORY:\n    case DELETE_CATEGORIES:\n    case DELETE_INGREDIENT:\n    case DELETE_INGREDIENTS:\n    case DELETE_MEAL:\n    case DELETE_MEALS:\n    case DELETE_PLAN:\n    case DELETE_PLANS:\n    case DELETE_RECIPE:\n    case DELETE_RECIPES:\n    case DELETE_STORE:\n    case DELETE_USER:\n    case PLAN_LIST_COPIED:\n    case SET_DEFAULT_STORE:\n    case SET_STARRED_PLAN:\n    case SETTINGS_SAVED:\n    case UPDATE_CATEGORY:\n    case UPDATE_INGREDIENT:\n    case UPDATE_MEAL:\n    case UPDATE_PLAN:\n    case UPDATE_PLAN_ARCHIVE_STATUS:\n    case UPDATE_RECIPE:\n    case UPDATE_STORE:\n    case UPDATE_USER:\n      return {\n        ...state,\n        snackbar: action.error\n          ? null //{ message: 'An error occurred', variant: 'error' }\n          : action.snackbar,\n      }\n    case SNACKBAR_CLOSED:\n      return { ...state, snackbar: null }\n    default:\n      return state\n  }\n}\n","import {\n  ADD_PLAN,\n  ASYNC_START,\n  DELETE_PLAN,\n  DELETE_PLANS,\n  PLAN_DIALOG_LOADED,\n  PLAN_DIALOG_UNLOADED,\n  PLAN_LIST_DIALOG_LOADED,\n  PLAN_LIST_DIALOG_UNLOADED,\n  PLAN_VIEW_LOADED,\n  PLAN_VIEW_UNLOADED,\n  PLANS_PAGE_LOADED,\n  PLANS_PAGE_UNLOADED,\n  UPDATE_PLAN,\n  UPDATE_PLAN_ARCHIVE_STATUS,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  editor: { plan: null },\n  errors: null,\n  inProgress: false,\n  pageLoaded: false,\n  plans: [],\n  viewer: { plan: null, type: null },\n}\n\nconst sortByTitle = (a, b) => a.title.localeCompare(b.title)\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case ADD_PLAN:\n      return {\n        ...state,\n        plans: action.error\n          ? state.plans\n          : [...state.plans, action.payload.plan].sort((a, b) =>\n              sortByTitle(a, b)\n            ),\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    case ASYNC_START:\n      if (\n        action.subtype === ADD_PLAN ||\n        action.subtype === UPDATE_PLAN ||\n        action.subtype === UPDATE_PLAN_ARCHIVE_STATUS\n      ) {\n        return { ...state, errors: null, inProgress: true }\n      } else if (action.subtype === PLANS_PAGE_LOADED) {\n        return { ...state, errors: null, pageLoaded: false }\n      }\n      break\n    case DELETE_PLAN:\n      return {\n        ...state,\n        plans: action.error\n          ? state.plans\n          : state.plans.filter(\n              (plan) => plan.slug !== action.payload.plan.slug\n            ),\n      }\n    case DELETE_PLANS:\n      return {\n        ...state,\n        plans: action.error\n          ? state.plans\n          : state.plans.filter(\n              (plan) => !action.payload.plans.includes(plan.slug)\n            ),\n      }\n    case PLAN_DIALOG_LOADED:\n      return { ...state, editor: { ...state.editor, plan: action.plan } }\n    case PLAN_DIALOG_UNLOADED:\n      return { ...state, editor: { ...state.editor, plan: null }, errors: null }\n    case PLAN_LIST_DIALOG_LOADED:\n      return {\n        ...state,\n        viewer: { ...state.viewer, plan: action.plan, type: 'list' },\n      }\n    case PLAN_LIST_DIALOG_UNLOADED:\n    case PLAN_VIEW_UNLOADED:\n      return { ...state, viewer: { ...state.viewer, plan: null, type: null } }\n    case PLAN_VIEW_LOADED:\n      return {\n        ...state,\n        viewer: { ...state.viewer, plan: action.plan, type: 'plan' },\n      }\n    case PLANS_PAGE_LOADED:\n      return {\n        ...state,\n        pageLoaded: true,\n        plans: action.payload[0].plans,\n      }\n    case PLANS_PAGE_UNLOADED:\n      return defaultState\n    case UPDATE_PLAN:\n      return {\n        ...state,\n        plans: action.error\n          ? state.plans\n          : state.plans\n              .map((plan) =>\n                plan._id === action.payload.plan._id\n                  ? action.payload.plan\n                  : plan\n              )\n              .sort((a, b) => sortByTitle(a, b)),\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    case UPDATE_PLAN_ARCHIVE_STATUS:\n      return {\n        ...state,\n        plans: action.error\n          ? state.plans\n          : state.plans\n              .map((plan) =>\n                plan._id === action.payload.plan._id\n                  ? action.payload.plan\n                  : plan\n              )\n              .sort((a, b) => sortByTitle(a, b)),\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  ADD_INGREDIENT,\n  ADD_RECIPE,\n  ASYNC_START,\n  MEALS_PAGE_LOADED,\n  MEALS_PAGE_UNLOADED,\n  PLANS_PAGE_LOADED,\n  PLANS_PAGE_UNLOADED,\n  RECIPE_DIALOG_LOADED,\n  RECIPE_DIALOG_UNLOADED,\n  RECIPE_INGREDIENT_ONBLUR,\n  RECIPES_PAGE_LOADED,\n  RECIPES_PAGE_UNLOADED,\n  RECIPE_VIEW_LOADED,\n  RECIPE_VIEW_UNLOADED,\n  DELETE_RECIPE,\n  DELETE_RECIPES,\n  UPDATE_RECIPE,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  editor: { recipe: null, ingredient: null },\n  errors: null,\n  recipes: [],\n  inProgress: false,\n  pageLoaded: false,\n  viewer: { recipe: null },\n}\n\nconst sortByTitle = (a, b) => a.title.localeCompare(b.title)\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case ADD_INGREDIENT:\n      return {\n        ...state,\n        editor: { ...state.editor, ingredient: action.payload.ingredient },\n      }\n    case ADD_RECIPE:\n      return {\n        ...state,\n        recipes: action.error\n          ? state.recipes\n          : [...state.recipes, action.payload.recipe].sort((a, b) =>\n              sortByTitle(a, b)\n            ),\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    case ASYNC_START:\n      if (action.subtype === ADD_RECIPE || action.subtype === UPDATE_RECIPE) {\n        return { ...state, errors: null, inProgress: true }\n      } else if (action.subtype === RECIPES_PAGE_LOADED) {\n        return { ...state, errors: null, pageLoaded: false }\n      }\n      break\n    case DELETE_RECIPE:\n      return {\n        ...state,\n        recipes: action.error\n          ? state.recipes\n          : state.recipes.filter(\n              (recipe) => recipe.slug !== action.payload.recipe.slug\n            ),\n      }\n    case DELETE_RECIPES:\n      return {\n        ...state,\n        recipes: action.error\n          ? state.recipes\n          : state.recipes.filter(\n              (recipe) => !action.payload.recipes.includes(recipe.slug)\n            ),\n      }\n    case MEALS_PAGE_LOADED:\n      return {\n        ...state,\n        recipes: action.error ? [] : action.payload[1].recipes,\n      }\n    case MEALS_PAGE_UNLOADED:\n    case PLANS_PAGE_UNLOADED:\n    case RECIPES_PAGE_UNLOADED:\n      return defaultState\n    case PLANS_PAGE_LOADED:\n      return {\n        ...state,\n        recipes: action.error ? [] : action.payload[2].recipes,\n      }\n    case RECIPE_DIALOG_LOADED:\n      return {\n        ...state,\n        editor: { ...state.editor, recipe: action.recipe },\n      }\n    case RECIPE_DIALOG_UNLOADED:\n      return {\n        ...state,\n        editor: { ...state.editor, recipe: null, ingredient: null },\n        errors: null,\n      }\n    case RECIPE_INGREDIENT_ONBLUR:\n      return {\n        ...state,\n        editor: { ...state.editor, ingredient: null },\n      }\n    case RECIPES_PAGE_LOADED:\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        recipes: action.error ? [] : action.payload[0].recipes,\n        inProgress: false,\n        pageLoaded: true,\n      }\n\n    case RECIPE_VIEW_LOADED:\n      return { ...state, viewer: { ...state.viewer, recipe: action.recipe } }\n    case RECIPE_VIEW_UNLOADED:\n      return { ...state, viewer: { ...state.viewer, recipe: null } }\n    case UPDATE_RECIPE:\n      return {\n        ...state,\n        editor: { ...state.editor, recipe: null },\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        recipes: action.error\n          ? state.recipes\n          : state.recipes\n              .map((recipe) =>\n                recipe._id === action.payload.recipe._id\n                  ? action.payload.recipe\n                  : recipe\n              )\n              .sort((a, b) => sortByTitle(a, b)),\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  ASYNC_START,\n  SETTINGS_PAGE_UNLOADED,\n  SETTINGS_SAVED,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  errors: null,\n  inProgress: false,\n}\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case ASYNC_START:\n      if (action.subtype === SETTINGS_SAVED) {\n        return {\n          ...state,\n          inProgress: true,\n        }\n      }\n      break\n    case SETTINGS_PAGE_UNLOADED:\n      return defaultState\n    case SETTINGS_SAVED:\n      return {\n        ...state,\n        inProgress: false,\n        errors: action.error ? action.payload.errors : null,\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  ADD_STORE,\n  ASYNC_START,\n  DELETE_STORE,\n  PLANS_PAGE_LOADED,\n  PLANS_PAGE_UNLOADED,\n  STORE_DIALOG_LOADED,\n  STORE_DIALOG_UNLOADED,\n  STORES_PAGE_LOADED,\n  STORES_PAGE_UNLOADED,\n  UPDATE_STORE,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  editor: { store: null },\n  errors: null,\n  inProgress: false,\n  pageLoaded: false,\n  stores: [],\n}\n\nconst sortByName = (a, b) => a.name.localeCompare(b.name)\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case ADD_STORE:\n      return {\n        ...state,\n        stores: action.error\n          ? state.stores\n          : [...state.stores, action.payload.store].sort((a, b) =>\n              sortByName(a, b)\n            ),\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    case ASYNC_START:\n      if (action.subtype === ADD_STORE || action.subtype === UPDATE_STORE) {\n        return { ...state, errors: null, inProgress: true }\n      } else if (action.subtype === STORES_PAGE_LOADED) {\n        return { ...state, errors: null, pageLoaded: false }\n      }\n      break\n    case DELETE_STORE:\n      return {\n        ...state,\n        stores: action.error\n          ? state.stores\n          : state.stores.filter(\n              (store) => store.slug !== action.payload.store.slug\n            ),\n      }\n    case PLANS_PAGE_LOADED:\n      return {\n        ...state,\n        stores: action.error ? [] : action.payload[5].stores,\n      }\n    case STORE_DIALOG_LOADED:\n      return { ...state, editor: { ...state.editor, store: action.store } }\n    case STORE_DIALOG_UNLOADED:\n      return {\n        ...state,\n        editor: { ...state.editor, store: null },\n        errors: null,\n      }\n    case STORES_PAGE_LOADED:\n      return {\n        ...state,\n        pageLoaded: true,\n        stores: action.payload[0].stores,\n      }\n    case STORES_PAGE_UNLOADED:\n    case PLANS_PAGE_UNLOADED:\n      return defaultState\n    case UPDATE_STORE:\n      return {\n        ...state,\n        stores: action.error\n          ? state.stores\n          : state.stores\n              .map((store) =>\n                store._id === action.payload.store._id\n                  ? action.payload.store\n                  : store\n              )\n              .sort((a, b) => sortByName(a, b)),\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  ADD_USER,\n  ASYNC_START,\n  DELETE_USER,\n  MANAGE_USERS_PAGE_LOADED,\n  MANAGE_USERS_PAGE_UNLOADED,\n  USER_DIALOG_UNLOADED,\n  UPDATE_USER,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  errors: null,\n  inProgress: false,\n  users: [],\n}\n\nconst sortByLastName = (a, b) => a.lastName.localeCompare(b.lastName)\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case ADD_USER:\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        users: action.error\n          ? state.users\n          : [...state.users, action.payload.user].sort((a, b) =>\n              sortByLastName(a, b)\n            ),\n      }\n    case ASYNC_START:\n      if (action.subtype === ADD_USER || action.subtype === UPDATE_USER) {\n        return { ...state, inProgress: true, errors: null }\n      }\n      break\n    case DELETE_USER:\n      return {\n        ...state,\n        users: action.error\n          ? state.users\n          : state.users.filter(\n              (user) => user.username !== action.payload.user.username\n            ),\n      }\n    case MANAGE_USERS_PAGE_LOADED:\n      return {\n        ...state,\n        users: action.payload.users,\n      }\n    case MANAGE_USERS_PAGE_UNLOADED:\n      return defaultState\n    case USER_DIALOG_UNLOADED:\n      return { ...state, errors: null }\n    case UPDATE_USER:\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        users: action.error\n          ? state.users\n          : state.users\n              .map((user) =>\n                user.username === action.payload.user.username\n                  ? action.payload.user\n                  : user\n              )\n              .sort((a, b) => sortByLastName(a, b)),\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import agent from './agent'\nimport {\n  ASYNC_START,\n  ASYNC_END,\n  LOGIN,\n  LOGOUT,\n  REGISTER,\n} from './constants/actionTypes'\n\nconst promiseMiddleware = (store) => (next) => (action) => {\n  if (isPromise(action.payload)) {\n    store.dispatch({ type: ASYNC_START, subtype: action.type })\n\n    const currentView = store.getState().viewChangeCounter\n    const skipTracking = action.skipTracking\n\n    action.payload.then(\n      (res) => {\n        const currentState = store.getState()\n        if (!skipTracking && currentState.viewChangeCounter !== currentView) {\n          return\n        }\n        action.payload = res\n        store.dispatch({ type: ASYNC_END, promise: action.payload })\n        store.dispatch(action)\n      },\n      (error) => {\n        const currentState = store.getState()\n        if (!skipTracking && currentState.viewChangeCounter !== currentView) {\n          return\n        }\n        // console.log('ERROR', error)\n        action.error = true\n        action.payload = error.response.body\n        if (!action.skipTracking) {\n          store.dispatch({ type: ASYNC_END, promise: action.payload })\n        }\n        store.dispatch(action)\n      }\n    )\n\n    return\n  }\n\n  next(action)\n}\n\nconst localStorageMiddleware = (store) => (next) => (action) => {\n  if (action.type === REGISTER || action.type === LOGIN) {\n    if (!action.error) {\n      window.localStorage.setItem('jwt', action.payload.user.token)\n      agent.setToken(action.payload.user.token)\n    }\n  } else if (action.type === LOGOUT) {\n    window.localStorage.setItem('jwt', '')\n    agent.setToken(null)\n  }\n\n  next(action)\n}\n\nfunction isPromise(v) {\n  return v && typeof v.then === 'function'\n}\n\nexport { promiseMiddleware, localStorageMiddleware }\n","import { applyMiddleware, createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly'\nimport { createBrowserHistory } from 'history'\nimport { createLogger } from 'redux-logger'\nimport { routerMiddleware } from 'connected-react-router'\n\nimport createRootReducer from './reducer'\nimport { promiseMiddleware, localStorageMiddleware } from './middleware'\n\nexport const history = createBrowserHistory()\n\n// Build the middleware for intercepting and dispatching navigation actions\nconst myRouterMiddleware = routerMiddleware(history)\n\nconst getMiddleware = () => {\n  if (process.env.NODE_ENV === 'production') {\n    return applyMiddleware(\n      myRouterMiddleware,\n      promiseMiddleware,\n      localStorageMiddleware\n    )\n  } else {\n    // Enable additional logging in non-production environments\n    return applyMiddleware(\n      myRouterMiddleware,\n      promiseMiddleware,\n      localStorageMiddleware,\n      createLogger()\n    )\n  }\n}\n\nexport const store = createStore(\n  createRootReducer(history),\n  composeWithDevTools(getMiddleware())\n)\n","import { combineReducers } from 'redux'\nimport { connectRouter } from 'connected-react-router'\n\nimport auth from './reducers/auth'\nimport categories from './reducers/categories'\nimport common from './reducers/common'\nimport ingredients from './reducers/ingredients'\nimport meals from './reducers/meals'\nimport nav from './reducers/nav'\nimport notifier from './reducers/notifier'\nimport plans from './reducers/plans'\nimport recipes from './reducers/recipes'\nimport settings from './reducers/settings'\nimport stores from './reducers/stores'\nimport users from './reducers/users'\n\nexport default (history) =>\n  combineReducers({\n    auth,\n    categories,\n    common,\n    ingredients,\n    meals,\n    nav,\n    notifier,\n    plans,\n    recipes,\n    settings,\n    stores,\n    users,\n    router: connectRouter(history),\n  })\n","import React, { Suspense, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Route, Switch } from 'react-router-dom'\nimport { push } from 'connected-react-router'\nimport { CssBaseline, ThemeProvider } from '@material-ui/core'\n\nimport Home from './Home'\nimport Loading from './Loading'\nimport Login from './Login'\nimport Notifier from './Notifier'\nimport Theme from './Theme'\nimport agent from '../agent'\nimport { store } from '../store'\n\nimport { APP_LOAD, REDIRECT } from '../constants/actionTypes'\n\nconst mapStateToProps = (state) => {\n  return {\n    appLoaded: state.common.appLoaded,\n    redirectTo: state.common.redirectTo,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: (payload, token) =>\n    dispatch({ type: APP_LOAD, payload, token, skipTracking: true }),\n  onRedirect: () => dispatch({ type: REDIRECT }),\n})\n\nconst App = (props) => {\n  const { appLoaded, redirectTo } = props\n\n  useEffect(() => {\n    if (redirectTo) {\n      store.dispatch(push(redirectTo))\n      props.onRedirect()\n    }\n  }, [redirectTo])\n\n  useEffect(() => {\n    const token = window.localStorage.getItem('jwt')\n    if (token) {\n      agent.setToken(token)\n    }\n\n    props.onLoad(token ? agent.Auth.current() : null, token)\n  }, [])\n\n  if (appLoaded) {\n    return (\n      <ThemeProvider theme={Theme}>\n        <CssBaseline />\n        <Notifier>\n          <Suspense fallback={<p>Loading...</p>}>\n            <Switch>\n              <Route exact path='/login' component={Login} />\n              <Route exact path='/about' component={Login} />\n              <Route path='/' component={Home} />\n            </Switch>\n          </Suspense>\n        </Notifier>\n      </ThemeProvider>\n    )\n  }\n\n  return (\n    <ThemeProvider theme={Theme}>\n      <CssBaseline />\n      <Loading />\n    </ThemeProvider>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import { ConnectedRouter } from 'connected-react-router'\nimport { Provider } from 'react-redux'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Route, Switch } from 'react-router-dom'\n\nimport App from './components/App'\nimport { store, history } from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <Switch>\n        <Route path='/' component={App} />\n      </Switch>\n    </ConnectedRouter>\n  </Provider>,\n\n  document.getElementById('root')\n)\n"],"sourceRoot":""}